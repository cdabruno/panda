Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite6.sas.
- State has 15 bits divided into 15 mutex groups.
- Domain contains 24 actions.
- Domain contains 32 tasks.
- Domain contains 38 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 32
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.005 seconds
- Visited list time 0.000145 seconds
- Visited list inserts 39
- Visited list pruned 3
- Visited list contains 36
- Visited list hash collisions 0
- Generated 250 search nodes
  Calculated heuristic for 162 nodes
  One modifications 74
  Effectless actions 14
- including 74 one modification actions
- including 0 one modification methods
- and       14 progressions of effectless actions
- Generated 32400 nodes per second
- Final fringe contains 82 nodes
- Status: Solved
- Found solution of length 16
- Total costs of actions: 10
==>
213 switch_on[instrument1,satellite1]
219 switch_on[instrument02,satellite0]
238 turn_to[satellite0,GroundStation0,Phenomenon6]
239 turn_to[satellite1,GroundStation1,Phenomenon7]
241 calibrate[satellite0,instrument02,GroundStation0]
244 turn_to[satellite0,Star5,GroundStation0]
245 take_image[satellite0,Star5,instrument02,x_ray]
246 calibrate[satellite1,instrument1,GroundStation1]
247 turn_to[satellite1,Phenomenon4,GroundStation1]
248 take_image[satellite1,Phenomenon4,instrument1,thermograph]
root 0
231 auto_calibrate[satellite0,instrument02] -> method6 238 241
214 auto_calibrate[satellite1,instrument1] -> method6 239 246
44 do_observation[Phenomenon4,thermograph] -> <method0;activate_instrument[satellite1,instrument1];method5;0;-1,-2,1,2> 213 214 247 248
31 activate_instrument[satellite0,instrument02] -> method5 219 231
7 do_observation[Star5,x_ray] -> method0 31 244 245
0 __top[] -> __top_method 44 7
<==
