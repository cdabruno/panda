Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite7.sas.
- State has 7 bits divided into 7 mutex groups.
- Domain contains 17 actions.
- Domain contains 22 tasks.
- Domain contains 29 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 22
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: cost optimal
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.008 seconds
- Visited list time 0.001213 seconds
- Visited list inserts 539
- Visited list pruned 18
- Visited list contains 521
- Visited list hash collisions 0
- Generated 2827 search nodes
  Calculated heuristic for 1853 nodes
  One modifications 851
  Effectless actions 123
- including 851 one modification actions
- including 0 one modification methods
- and       123 progressions of effectless actions
- Generated 231625 nodes per second
- Final fringe contains 52 nodes
- Status: Solved
- Found solution of length 14
- Total costs of actions: 9
==>
2792 switch_on[instrument0,satellite0]
2814 turn_to[satellite0,GroundStation2,Phenomenon6]
2819 calibrate[satellite0,instrument0,GroundStation2]
2820 turn_to[satellite0,Phenomenon6,GroundStation2]
2821 take_image[satellite0,Phenomenon6,instrument0,thermograph0]
2822 turn_to[satellite0,Star5,Phenomenon6]
2823 take_image[satellite0,Star5,instrument0,thermograph0]
2824 turn_to[satellite0,Phenomenon4,Star5]
2825 take_image[satellite0,Phenomenon4,instrument0,thermograph0]
root 0
2813 auto_calibrate[satellite0,instrument0] -> method6 2814 2819
2791 do_observation[Star5,thermograph0] -> <method0;activate_instrument[satellite0,instrument0];method5;0;-1,-2,1,2> 2792 2813 2822 2823
1911 do_observation[Phenomenon6,thermograph0] -> method1 2820 2821
1 do_observation[Phenomenon4,thermograph0] -> method1 2824 2825
0 __top[] -> __top_method 1 2791 1911
<==
