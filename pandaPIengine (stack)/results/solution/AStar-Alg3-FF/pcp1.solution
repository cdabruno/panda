Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/pcp1.sas.
- State has 7 bits divided into 7 mutex groups.
- Domain contains 10 actions.
- Domain contains 13 tasks.
- Domain contains 13 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 13
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.017 seconds
- Visited list time 0.002189 seconds
- Visited list inserts 793
- Visited list pruned 0
- Visited list contains 793
- Visited list hash collisions 0
- Generated 8233 search nodes
  Calculated heuristic for 4736 nodes
  One modifications 3497
  Effectless actions 0
- including 3497 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 278588 nodes per second
- Final fringe contains 230 nodes
- Status: Solved
- Found solution of length 35
- Total costs of actions: 26
==>
282 t1G1[]
310 t1G2[]
752 t3G1[]
1170 t3G2[]
2675 t2G1[]
4403 t2G2[]
6109 t3G1[]
6110 t3G2[]
6111 yG1[]
6112 yG2[]
6113 yG1[]
6114 yG2[]
6115 xG1[]
6116 xG2[]
6117 xG1[]
6118 xG2[]
6119 yG1[]
6120 yG2[]
6121 yG1[]
6122 yG2[]
6123 yG1[]
6124 yG2[]
6125 xG1[]
6126 xG2[]
6127 yG1[]
6128 yG2[]
root 0
6108 SG2[] -> G2_S2t3_y_y 6110 6112 6114
4402 SG1[] -> G1_S2t3_y_y_x 6109 6111 6113 6115
2674 SG2[] -> G2_S2t2_S_x_x 4403 6108 6116 6118
1169 SG1[] -> G1_S2t2_S_x_y 2675 4402 6117 6119
751 SG2[] -> G2_S2t3_S_y_y 1170 2674 6120 6122
309 SG1[] -> G1_S2t3_S_y_y_x 752 1169 6121 6123 6125
281 SG1[] -> G1_S2t1_S_y 282 309 6127
4 SG2[] -> G2_S2t1_S_y_x_y 310 751 6124 6126 6128
0 __top[] -> __top_method 281 4
<==
