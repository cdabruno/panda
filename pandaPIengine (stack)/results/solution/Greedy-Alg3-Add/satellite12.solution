Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite12.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 41 actions.
- Domain contains 55 tasks.
- Domain contains 74 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 55
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.038 seconds
- Visited list time 0.006918 seconds
- Visited list inserts 2640
- Visited list pruned 475
- Visited list contains 2165
- Visited list hash collisions 0
- Generated 9253 search nodes
  Calculated heuristic for 6819 nodes
  One modifications 2214
  Effectless actions 220
- including 2214 one modification actions
- including 0 one modification methods
- and       220 progressions of effectless actions
- Generated 179447 nodes per second
- Final fringe contains 3785 nodes
- Status: Solved
- Found solution of length 26
- Total costs of actions: 16
==>
9207 switch_on[instrument11,satellite1]
9217 turn_to[satellite1,GroundStation1,Phenomenon7]
9219 calibrate[satellite1,instrument11,GroundStation1]
9221 turn_to[satellite1,Phenomenon4,GroundStation1]
9222 take_image[satellite1,Phenomenon4,instrument11,thermograph]
9223 switch_on[instrument03,satellite0]
9235 turn_to[satellite0,GroundStation0,Phenomenon6]
9238 calibrate[satellite0,instrument03,GroundStation0]
9240 turn_to[satellite0,Phenomenon6,GroundStation0]
9241 take_image[satellite0,Phenomenon6,instrument03,hd_video]
9242 switch_off[instrument03,satellite0]
9243 switch_on[instrument02,satellite0]
9247 turn_to[satellite0,GroundStation0,Phenomenon6]
9248 calibrate[satellite0,instrument02,GroundStation0]
9249 turn_to[satellite0,Star5,GroundStation0]
9250 take_image[satellite0,Star5,instrument02,x_ray]
root 0
9246 auto_calibrate[satellite0,instrument02] -> method6 9247 9248
9230 auto_calibrate[satellite0,instrument03] -> method6 9235 9238
9213 auto_calibrate[satellite1,instrument11] -> method6 9217 9219
8252 activate_instrument[satellite0,instrument02] -> method4 9242 9243 9246
411 do_observation[Star5,x_ray] -> method0 8252 9249 9250
396 activate_instrument[satellite0,instrument03] -> method5 9223 9230
49 do_observation[Phenomenon6,hd_video] -> method0 396 9240 9241
42 activate_instrument[satellite1,instrument11] -> method5 9207 9213
13 do_observation[Phenomenon4,thermograph] -> method0 42 9221 9222
0 __top[] -> __top_method 13 411 49
<==
