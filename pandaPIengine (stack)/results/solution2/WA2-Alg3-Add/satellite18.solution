Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite18.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 78 actions.
- Domain contains 98 tasks.
- Domain contains 155 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 98
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.172 seconds
- Visited list time 0.019803 seconds
- Visited list inserts 7947
- Visited list pruned 2065
- Visited list contains 5882
- Visited list hash collisions 2069
- Visited list used hash buckets 5878
- Generated 56849 search nodes
  Calculated heuristic for 44213 nodes
  One modifications 10104
  Effectless actions 2532
- including 10104 one modification actions
- including 0 one modification methods
- and       2532 progressions of effectless actions
- Generated 257052 nodes per second
- Final fringe contains 5638 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 11
==>
56765 switch_on[instrument4,satellite2]
56826 turn_to[satellite2,star0,planet2]
56829 calibrate[satellite2,instrument4,star0]
56830 turn_to[satellite2,planet2,star0]
56836 take_image[satellite2,planet2,instrument4,image0]
56837 turn_to[satellite2,planet4,planet2]
56838 take_image[satellite2,planet4,instrument4,thermograph1]
56839 turn_to[satellite2,phenomenon3,planet4]
56843 take_image[satellite2,phenomenon3,instrument4,thermograph1]
56844 turn_to[satellite2,star5,phenomenon3]
56847 take_image[satellite2,star5,instrument4,thermograph1]
root 0
56846 method1_splitted_1[satellite2,star5,thermograph1] -> _splitting_method_method1_splitted_1 56847
56842 method1_splitted_1[satellite2,phenomenon3,thermograph1] -> _splitting_method_method1_splitted_1 56843
56835 method1_splitted_1[satellite2,planet2,image0] -> _splitting_method_method1_splitted_1 56836
56825 auto_calibrate[satellite2,instrument4] -> method6 56826 56829
56764 do_observation[star5,thermograph1] -> method1 56844 56846
21086 do_observation[planet2,image0] -> method1 56830 56835
21078 activate_instrument[satellite2,instrument4] -> method5 56765 56825
638 do_observation[planet4,thermograph1] -> method0 21078 56837 56838
6 do_observation[phenomenon3,thermograph1] -> method1 56839 56842
0 __top[] -> __top_method 21086 6 638 56764
<==
