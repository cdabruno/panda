Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp9.sas.
- State has 9 bits divided into 9 mutex groups.
- Domain contains 14 actions.
- Domain contains 17 tasks.
- Domain contains 17 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 17
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.147 seconds
- Visited list time 0.011174 seconds
- Visited list inserts 3953
- Visited list pruned 0
- Visited list contains 3953
- Visited list hash collisions 0
- Visited list used hash buckets 3953
- Generated 72426 search nodes
  Calculated heuristic for 31610 nodes
  One modifications 40816
  Effectless actions 0
- including 40816 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 215034 nodes per second
- Final fringe contains 3810 nodes
- Status: Solved
- Found solution of length 37
- Total costs of actions: 26
==>
227 t2G1[]
649 t2G2[]
690 t1G1[]
4187 t1G2[]
4277 t3G1[]
11030 t3G2[]
11104 t2G1[]
72361 t2G2[]
72398 t4G1[]
72399 t4G2[]
72400 cG1[]
72401 cG2[]
72402 bG1[]
72403 bG2[]
72404 aG1[]
72405 aG2[]
72406 aG1[]
72407 aG2[]
72408 aG1[]
72409 aG2[]
72410 cG1[]
72411 cG2[]
72412 bG1[]
72413 bG2[]
72414 aG1[]
72415 aG2[]
root 0
72397 SG2[] -> G2_S2t4_c 72399 72401
72360 SG1[] -> G1_S2t4_c_b_a 72398 72400 72402 72404
11103 SG2[] -> G2_S2t2_S_b_a 72361 72397 72403 72405
11029 SG1[] -> G1_S2t2_S_a 11104 72360 72406
4276 SG2[] -> G2_S2t3_S_a 11030 11103 72407
4186 SG1[] -> G1_S2t3_S_a_c 4277 11029 72408 72410
689 SG2[] -> G2_S2t1_S_a_c 4187 4276 72409 72411
648 SG1[] -> G1_S2t1_S_b 690 4186 72412
226 SG1[] -> G1_S2t2_S_a 227 648 72414
6 SG2[] -> G2_S2t2_S_b_a 649 689 72413 72415
0 __top[] -> __top_method 226 6
<==
