Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite8.sas.
- State has 9 bits divided into 9 mutex groups.
- Domain contains 21 actions.
- Domain contains 29 tasks.
- Domain contains 37 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 29
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
- Starting state heuristic value: 21
Search Results
- Search time 0.005 seconds
- Visited list time 0.001051 seconds
- Visited list inserts 367
- Visited list pruned 7
- Visited list contains 360
- Visited list hash collisions 7
- Visited list used hash buckets 360
- Generated 1490 search nodes
  Calculated heuristic for 1028 nodes
  One modifications 453
  Effectless actions 9
- including 453 one modification actions
- including 0 one modification methods
- and       9 progressions of effectless actions
- Generated 205600 nodes per second
- Final fringe contains 120 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 13
==>
1455 switch_on[instrument02,satellite0]
1467 turn_to[satellite0,GroundStation0,Phenomenon6]
1472 calibrate[satellite0,instrument02,GroundStation0]
1473 turn_to[satellite0,Phenomenon6,GroundStation0]
1474 take_image[satellite0,Phenomenon6,instrument02,x_ray]
1477 turn_to[satellite0,Star5,Phenomenon6]
1478 take_image[satellite0,Star5,instrument02,x_ray]
1479 switch_off[instrument02,satellite0]
1480 switch_on[instrument01,satellite0]
1483 turn_to[satellite0,GroundStation0,Star5]
1484 calibrate[satellite0,instrument01,GroundStation0]
1485 turn_to[satellite0,Phenomenon4,GroundStation0]
1486 take_image[satellite0,Phenomenon4,instrument01,thermograph]
root 0
1482 auto_calibrate[satellite0,instrument01] -> method6 1483 1484
1462 auto_calibrate[satellite0,instrument02] -> method6 1467 1472
1454 activate_instrument[satellite0,instrument02] -> method5 1455 1462
805 activate_instrument[satellite0,instrument01] -> method4 1479 1480 1482
328 do_observation[Phenomenon6,x_ray] -> <method1;method1_splitted_1[satellite0,Phenomenon6,x_ray];_splitting_method_method1_splitted_1;1;0,-1> 1473 1474
31 do_observation[Star5,x_ray] -> method0 1454 1477 1478
5 do_observation[Phenomenon4,thermograph] -> method0 805 1485 1486
0 __top[] -> __top_method 5 31 328
<==
