Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport4.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 47 actions.
- Domain contains 68 tasks.
- Domain contains 63 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
- Starting state heuristic value: 64
Search Results
- Search time 0.029 seconds
- Visited list time 0.00602 seconds
- Visited list inserts 1315
- Visited list pruned 271
- Visited list contains 1044
- Visited list hash collisions 271
- Visited list used hash buckets 1044
- Generated 4404 search nodes
  Calculated heuristic for 3351 nodes
  One modifications 913
  Effectless actions 140
- including 913 one modification actions
- including 0 one modification methods
- and       140 progressions of effectless actions
- Generated 115551 nodes per second
- Final fringe contains 706 nodes
- Status: Solved
- Found solution of length 41
- Total costs of actions: 18
==>
9 noop[truck-0,city-loc-0]
31 pick-up[truck-0,city-loc-0,package-0,capacity-2,capacity-3]
470 drive[truck-0,city-loc-0,city-loc-3]
501 pick-up[truck-0,city-loc-3,package-2,capacity-1,capacity-2]
4225 drive[truck-0,city-loc-3,city-loc-3]
4263 drive[truck-0,city-loc-3,city-loc-2]
4273 pick-up[truck-0,city-loc-2,package-3,capacity-0,capacity-1]
4292 drive[truck-0,city-loc-2,city-loc-1]
4293 noop[truck-0,city-loc-1]
4366 drop[truck-0,city-loc-1,package-2,capacity-0,capacity-1]
4367 pick-up[truck-0,city-loc-1,package-1,capacity-0,capacity-1]
4384 drive[truck-0,city-loc-1,city-loc-2]
4385 drive[truck-0,city-loc-2,city-loc-3]
4389 drop[truck-0,city-loc-3,package-0,capacity-0,capacity-1]
4390 drive[truck-0,city-loc-3,city-loc-0]
4391 noop[truck-0,city-loc-0]
4401 drop[truck-0,city-loc-0,package-1,capacity-1,capacity-2]
4402 drop[truck-0,city-loc-0,package-3,capacity-2,capacity-3]
root 0
4400 unload[truck-0,city-loc-0,package-3] -> m-unload 4402
4395 unload[truck-0,city-loc-0,package-1] -> m-unload 4401
4383 get-to[truck-0,city-loc-2] -> m-drive-to 4384
4381 get-to[truck-0,city-loc-3] -> m-drive-to-via 4383 4385
4374 get-to[truck-0,city-loc-0] -> m-drive-to-via 4381 4390
4365 load[truck-0,city-loc-1,package-1] -> m-load 4367
4362 unload[truck-0,city-loc-1,package-2] -> m-unload 4366
4291 get-to[truck-0,city-loc-0] -> m-i-am-there 4391
4270 load[truck-0,city-loc-2,package-3] -> m-load 4273
4262 unload[truck-0,city-loc-3,package-0] -> m-unload 4389
503 get-to[truck-0,city-loc-1] -> m-i-am-there 4293
496 load[truck-0,city-loc-3,package-2] -> m-load 501
469 get-to[truck-0,city-loc-3] -> m-drive-to 4225
26 get-to[truck-0,city-loc-2] -> m-drive-to 4263
19 get-to[truck-0,city-loc-3] -> m-drive-to 470
16 get-to[truck-0,city-loc-1] -> m-drive-to 4292
13 load[truck-0,city-loc-0,package-0] -> m-load 31
11 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 19 496
8 get-to[truck-0,city-loc-0] -> m-i-am-there 9
6 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 8 13
4 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 26 4270
2 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 16 4365
0 __top[] -> <<<<__top_method;deliver[package-3,city-loc-0];m-deliver;3;0,1,2,-1,-2,-3>;deliver[package-2,city-loc-1];m-deliver;2;0,1,-1,-2,-3,3,4,5>;deliver[package-1,city-loc-0];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7>;deliver[package-0,city-loc-3];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9> 6 469 4262 2 4374 4395 11 503 4362 4 4291 4400
<==
