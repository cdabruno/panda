Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp16.sas.
- State has 7 bits divided into 7 mutex groups.
- Domain contains 10 actions.
- Domain contains 13 tasks.
- Domain contains 13 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 13
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
- Starting state heuristic value: 11
Search Results
- Search time 0.02 seconds
- Visited list time 0.001962 seconds
- Visited list inserts 864
- Visited list pruned 0
- Visited list contains 864
- Visited list hash collisions 0
- Visited list used hash buckets 864
- Generated 12276 search nodes
  Calculated heuristic for 5174 nodes
  One modifications 7102
  Effectless actions 0
- including 7102 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 258700 nodes per second
- Final fringe contains 625 nodes
- Status: Solved
- Found solution of length 37
- Total costs of actions: 26
==>
114 t1G1[]
229 t1G2[]
334 t1G1[]
603 t1G2[]
813 t3G1[]
2428 t3G2[]
2493 t2G1[]
12234 t2G2[]
12246 t2G1[]
12247 t2G2[]
12248 p0G1[]
12249 p0G2[]
12250 p0G1[]
12251 p0G2[]
12252 p0G1[]
12253 p0G2[]
12254 p0G1[]
12255 p0G2[]
12256 p1G1[]
12257 p1G2[]
12258 p1G1[]
12259 p1G2[]
12260 p1G1[]
12261 p1G2[]
12262 p1G1[]
12263 p1G2[]
root 0
12245 SG2[] -> G2_S2t2_0_0 12247 12249 12251
12233 SG1[] -> G1_S2t2_0 12246 12248
2492 SG2[] -> G2_S2t2_S_0_0 12234 12245 12253 12255
2427 SG1[] -> G1_S2t2_S_0 2493 12233 12250
812 SG2[] -> G2_S2t3_S_1_1 2428 2492 12257 12259
602 SG1[] -> G1_S2t3_S_0_0 813 2427 12252 12254
333 SG2[] -> G2_S2t1_S_1 603 812 12261
228 SG1[] -> G1_S2t1_S_1_1 334 602 12256 12258
113 SG1[] -> G1_S2t1_S_1_1 114 228 12260 12262
4 SG2[] -> G2_S2t1_S_1 229 333 12263
0 __top[] -> __top_method 113 4
<==
