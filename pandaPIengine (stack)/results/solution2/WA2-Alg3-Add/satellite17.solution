Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite17.sas.
- State has 21 bits divided into 21 mutex groups.
- Domain contains 72 actions.
- Domain contains 88 tasks.
- Domain contains 135 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 88
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (1 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
- Starting state heuristic value: 26
Search Results
- Search time 0.655 seconds
- Visited list time 0.08408 seconds
- Visited list inserts 31397
- Visited list pruned 4841
- Visited list contains 26556
- Visited list hash collisions 4857
- Visited list used hash buckets 26540
- Generated 198507 search nodes
  Calculated heuristic for 159477 nodes
  One modifications 35625
  Effectless actions 3405
- including 35625 one modification actions
- including 0 one modification methods
- and       3405 progressions of effectless actions
- Generated 243476 nodes per second
- Final fringe contains 18630 nodes
- Status: Solved
- Found solution of length 23
- Total costs of actions: 14
==>
198469 switch_on[instrument1,satellite0]
198477 switch_on[instrument3,satellite1]
198488 turn_to[satellite1,star0,groundstation1]
198491 calibrate[satellite1,instrument3,star0]
198494 turn_to[satellite1,star2,star0]
198495 take_image[satellite1,star2,instrument3,infrared2]
198498 turn_to[satellite0,groundstation1,phenomenon3]
198499 calibrate[satellite0,instrument1,groundstation1]
198500 turn_to[satellite0,phenomenon3,groundstation1]
198501 take_image[satellite0,phenomenon3,instrument1,spectrograph0]
198502 turn_to[satellite0,planet4,phenomenon3]
198503 take_image[satellite0,planet4,instrument1,thermograph1]
198504 turn_to[satellite0,phenomenon5,planet4]
198505 take_image[satellite0,phenomenon5,instrument1,thermograph1]
root 0
198483 auto_calibrate[satellite1,instrument3] -> method6 198488 198491
198473 auto_calibrate[satellite0,instrument1] -> method6 198498 198499
160406 do_observation[planet4,thermograph1] -> <method1;method1_splitted_1[satellite0,planet4,thermograph1];_splitting_method_method1_splitted_1;1;0,-1> 198502 198503
160401 activate_instrument[satellite1,instrument3] -> method5 198477 198483
160399 activate_instrument[satellite0,instrument1] -> method5 198469 198473
51128 do_observation[phenomenon5,thermograph1] -> <method1;method1_splitted_1[satellite0,phenomenon5,thermograph1];_splitting_method_method1_splitted_1;1;0,-1> 198504 198505
3857 do_observation[star2,infrared2] -> method0 160401 198494 198495
15 do_observation[phenomenon3,spectrograph0] -> method0 160399 198500 198501
0 __top[] -> __top_method 3857 15 160406 51128
<==
