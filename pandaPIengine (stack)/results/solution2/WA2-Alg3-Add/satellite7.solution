Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite7.sas.
- State has 7 bits divided into 7 mutex groups.
- Domain contains 17 actions.
- Domain contains 22 tasks.
- Domain contains 29 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 22
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0 seconds
- Visited list time 3.9e-05 seconds
- Visited list inserts 17
- Visited list pruned 0
- Visited list contains 17
- Visited list hash collisions 0
- Visited list used hash buckets 17
- Generated 150 search nodes
  Calculated heuristic for 104 nodes
  One modifications 43
  Effectless actions 3
- including 43 one modification actions
- including 0 one modification methods
- and       3 progressions of effectless actions
- Generated -2147483648 nodes per second
- Final fringe contains 35 nodes
- Status: Solved
- Found solution of length 14
- Total costs of actions: 9
==>
133 switch_on[instrument0,satellite0]
137 turn_to[satellite0,GroundStation2,Phenomenon6]
142 calibrate[satellite0,instrument0,GroundStation2]
143 turn_to[satellite0,Phenomenon6,GroundStation2]
144 take_image[satellite0,Phenomenon6,instrument0,thermograph0]
145 turn_to[satellite0,Star5,Phenomenon6]
146 take_image[satellite0,Star5,instrument0,thermograph0]
147 turn_to[satellite0,Phenomenon4,Star5]
148 take_image[satellite0,Phenomenon4,instrument0,thermograph0]
root 0
136 auto_calibrate[satellite0,instrument0] -> method6 137 142
132 do_observation[Star5,thermograph0] -> <method0;activate_instrument[satellite0,instrument0];method5;0;-1,-2,1,2> 133 136 145 146
27 do_observation[Phenomenon6,thermograph0] -> method1 143 144
1 do_observation[Phenomenon4,thermograph0] -> method1 147 148
0 __top[] -> __top_method 1 132 27
<==
