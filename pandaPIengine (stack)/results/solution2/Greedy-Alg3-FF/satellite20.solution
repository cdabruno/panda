Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite20.sas.
- State has 37 bits divided into 37 mutex groups.
- Domain contains 123 actions.
- Domain contains 139 tasks.
- Domain contains 202 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 139
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
Search Results
- Search time 0.006 seconds
- Visited list time 0.000376 seconds
- Visited list inserts 114
- Visited list pruned 25
- Visited list contains 89
- Visited list hash collisions 25
- Visited list used hash buckets 89
- Generated 1052 search nodes
  Calculated heuristic for 791 nodes
  One modifications 193
  Effectless actions 68
- including 193 one modification actions
- including 0 one modification methods
- and       68 progressions of effectless actions
- Generated 131833 nodes per second
- Final fringe contains 192 nodes
- Status: Solved
- Found solution of length 25
- Total costs of actions: 16
==>
1010 switch_on[instrument3,satellite2]
1024 turn_to[satellite2,groundstation0,planet6]
1027 calibrate[satellite2,instrument3,groundstation0]
1028 turn_to[satellite2,planet2,groundstation0]
1029 take_image[satellite2,planet2,instrument3,infrared2]
1031 turn_to[satellite2,planet4,planet2]
1032 take_image[satellite2,planet4,instrument3,infrared2]
1035 turn_to[satellite2,phenomenon5,planet4]
1036 take_image[satellite2,phenomenon5,instrument3,image4]
1037 switch_on[instrument5,satellite3]
1044 turn_to[satellite3,groundstation0,planet2]
1045 calibrate[satellite3,instrument5,groundstation0]
1046 turn_to[satellite3,planet6,groundstation0]
1047 take_image[satellite3,planet6,instrument5,spectrograph0]
1048 turn_to[satellite3,phenomenon3,planet6]
1049 take_image[satellite3,phenomenon3,instrument5,image1]
root 0
1043 auto_calibrate[satellite3,instrument5] -> method6 1044 1045
1020 auto_calibrate[satellite2,instrument3] -> method6 1024 1027
1009 activate_instrument[satellite3,instrument5] -> method5 1037 1043
626 do_observation[planet6,spectrograph0] -> method0 1009 1046 1047
584 do_observation[phenomenon5,image4] -> <method0;activate_instrument[satellite2,instrument3];method5;0;-1,-2,1,2> 1010 1020 1035 1036
255 do_observation[planet4,infrared2] -> <method1;method1_splitted_1[satellite2,planet4,infrared2];_splitting_method_method1_splitted_1;1;0,-1> 1031 1032
230 do_observation[planet2,infrared2] -> <method1;method1_splitted_1[satellite2,planet2,infrared2];_splitting_method_method1_splitted_1;1;0,-1> 1028 1029
9 do_observation[phenomenon3,image1] -> <method1;method1_splitted_1[satellite3,phenomenon3,image1];_splitting_method_method1_splitted_1;1;0,-1> 1048 1049
0 __top[] -> __top_method 230 9 255 584 626
<==
