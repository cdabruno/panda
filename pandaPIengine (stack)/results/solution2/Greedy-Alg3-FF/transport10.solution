Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport10.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 80 actions.
- Domain contains 116 tasks.
- Domain contains 102 methods.
- The initial state contains 10 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 114
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
Search Results
- Search time 0.003 seconds
- Visited list time 0.000492 seconds
- Visited list inserts 108
- Visited list pruned 6
- Visited list contains 102
- Visited list hash collisions 6
- Visited list used hash buckets 102
- Generated 404 search nodes
  Calculated heuristic for 311 nodes
  One modifications 73
  Effectless actions 20
- including 73 one modification actions
- including 0 one modification methods
- and       20 progressions of effectless actions
- Generated 103666 nodes per second
- Final fringe contains 118 nodes
- Status: Solved
- Found solution of length 75
- Total costs of actions: 33
==>
43 noop[truck-0,city-loc-6]
101 noop[truck-0,city-loc-6]
126 pick-up[truck-0,city-loc-6,package-0,capacity-2,capacity-3]
137 pick-up[truck-0,city-loc-6,package-6,capacity-1,capacity-2]
141 drive[truck-0,city-loc-6,city-loc-0]
142 noop[truck-0,city-loc-0]
143 noop[truck-0,city-loc-0]
165 pick-up[truck-0,city-loc-0,package-2,capacity-0,capacity-1]
171 drive[truck-0,city-loc-0,city-loc-6]
184 drive[truck-0,city-loc-6,city-loc-3]
185 noop[truck-0,city-loc-3]
194 drive[truck-0,city-loc-3,city-loc-6]
200 drop[truck-0,city-loc-6,package-2,capacity-0,capacity-1]
202 drive[truck-0,city-loc-6,city-loc-3]
205 drop[truck-0,city-loc-3,package-6,capacity-1,capacity-2]
206 drop[truck-0,city-loc-3,package-0,capacity-2,capacity-3]
207 pick-up[truck-0,city-loc-3,package-4,capacity-2,capacity-3]
213 drive[truck-0,city-loc-3,city-loc-6]
222 pick-up[truck-0,city-loc-6,package-5,capacity-1,capacity-2]
227 drive[truck-0,city-loc-6,city-loc-3]
230 pick-up[truck-0,city-loc-3,package-1,capacity-0,capacity-1]
236 drive[truck-0,city-loc-3,city-loc-6]
244 drop[truck-0,city-loc-6,package-4,capacity-0,capacity-1]
245 drive[truck-0,city-loc-6,city-loc-0]
261 drop[truck-0,city-loc-0,package-5,capacity-1,capacity-2]
262 pick-up[truck-0,city-loc-0,package-7,capacity-1,capacity-2]
267 pick-up[truck-0,city-loc-0,package-3,capacity-0,capacity-1]
383 drive[truck-0,city-loc-0,city-loc-6]
384 drive[truck-0,city-loc-6,city-loc-3]
396 drop[truck-0,city-loc-3,package-3,capacity-0,capacity-1]
397 drive[truck-0,city-loc-3,city-loc-6]
400 drop[truck-0,city-loc-6,package-7,capacity-1,capacity-2]
401 drop[truck-0,city-loc-6,package-1,capacity-2,capacity-3]
root 0
399 unload[truck-0,city-loc-6,package-7] -> m-unload 400
390 unload[truck-0,city-loc-3,package-3] -> m-unload 396
382 get-to[truck-0,city-loc-6] -> m-drive-to 383
380 get-to[truck-0,city-loc-3] -> m-drive-to-via 382 384
266 get-to[truck-0,city-loc-6] -> m-drive-to 397
249 unload[truck-0,city-loc-0,package-5] -> m-unload 261
243 unload[truck-0,city-loc-6,package-1] -> m-unload 401
235 get-to[truck-0,city-loc-6] -> m-drive-to 236
229 load[truck-0,city-loc-3,package-1] -> m-load 230
223 get-to[truck-0,city-loc-0] -> m-drive-to 245
218 unload[truck-0,city-loc-6,package-4] -> m-unload 244
212 get-to[truck-0,city-loc-6] -> m-drive-to 213
204 load[truck-0,city-loc-3,package-4] -> m-load 207
196 load[truck-0,city-loc-6,package-5] -> m-load 222
193 unload[truck-0,city-loc-3,package-0] -> m-unload 206
188 unload[truck-0,city-loc-3,package-6] -> m-unload 205
177 unload[truck-0,city-loc-6,package-2] -> m-unload 200
170 get-to[truck-0,city-loc-6] -> m-drive-to 171
160 load[truck-0,city-loc-0,package-2] -> m-load 165
155 load[truck-0,city-loc-0,package-7] -> m-load 262
150 load[truck-0,city-loc-0,package-3] -> m-load 267
138 get-to[truck-0,city-loc-3] -> m-drive-to 184
128 get-to[truck-0,city-loc-3] -> m-i-am-there 185
119 get-to[truck-0,city-loc-0] -> m-i-am-there 143
116 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 119 150
115 load[truck-0,city-loc-6,package-6] -> m-load 137
106 get-to[truck-0,city-loc-0] -> m-i-am-there 142
100 get-to[truck-0,city-loc-6] -> m-i-am-there 101
96 m-deliver_splitted_1[truck-0,package-6] -> _splitting_method_m-deliver_splitted_1 100 115
92 load[truck-0,city-loc-6,package-0] -> m-load 126
89 get-to[truck-0,city-loc-3] -> m-drive-to 202
42 get-to[truck-0,city-loc-6] -> m-i-am-there 43
36 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 42 92
28 m-deliver_splitted_1[truck-0,package-4] -> _splitting_method_m-deliver_splitted_1 89 204
26 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 106 160
22 get-to[truck-0,city-loc-3] -> m-drive-to 227
19 get-to[truck-0,city-loc-0] -> m-drive-to 141
9 get-to[truck-0,city-loc-6] -> m-drive-to 194
6 m-deliver_splitted_1[truck-0,package-5] -> _splitting_method_m-deliver_splitted_1 9 196
4 m-deliver_splitted_1[truck-0,package-7] -> _splitting_method_m-deliver_splitted_1 19 155
2 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 22 229
0 __top[] -> <<<<<<<<__top_method;deliver[package-7,city-loc-6];m-deliver;7;0,1,2,3,4,5,6,-1,-2,-3>;deliver[package-6,city-loc-3];m-deliver;6;0,1,2,3,4,5,-1,-2,-3,7,8,9>;deliver[package-5,city-loc-0];m-deliver;5;0,1,2,3,4,-1,-2,-3,6,7,8,9,10,11>;deliver[package-4,city-loc-6];m-deliver;4;0,1,2,3,-1,-2,-3,5,6,7,8,9,10,11,12,13>;deliver[package-3,city-loc-3];m-deliver;3;0,1,2,-1,-2,-3,4,5,6,7,8,9,10,11,12,13,14,15>;deliver[package-2,city-loc-6];m-deliver;2;0,1,-1,-2,-3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17>;deliver[package-1,city-loc-6];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19>;deliver[package-0,city-loc-3];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21> 36 128 193 2 235 243 26 170 177 116 380 390 28 212 218 6 223 249 96 138 188 4 266 399
<==
