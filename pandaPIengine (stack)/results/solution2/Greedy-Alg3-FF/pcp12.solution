Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp12.sas.
- State has 6 bits divided into 6 mutex groups.
- Domain contains 8 actions.
- Domain contains 11 tasks.
- Domain contains 9 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 11
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
Search Results
- Search time 0.005 seconds
- Visited list time 0.00056 seconds
- Visited list inserts 234
- Visited list pruned 0
- Visited list contains 234
- Visited list hash collisions 0
- Visited list used hash buckets 234
- Generated 2213 search nodes
  Calculated heuristic for 930 nodes
  One modifications 1283
  Effectless actions 0
- including 1283 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 186000 nodes per second
- Final fringe contains 55 nodes
- Status: Solved
- Found solution of length 55
- Total costs of actions: 42
==>
56 t1G1[]
68 t1G2[]
244 t1G1[]
264 t1G2[]
650 t1G1[]
672 t1G2[]
745 t2G1[]
992 t2G2[]
1595 t2G1[]
2059 t2G2[]
2175 t2G1[]
2176 t2G2[]
2177 p1G1[]
2178 p1G2[]
2179 p1G1[]
2180 p1G2[]
2181 p1G1[]
2182 p1G2[]
2183 p0G1[]
2184 p0G2[]
2185 p1G1[]
2186 p1G2[]
2187 p1G1[]
2188 p1G2[]
2189 p1G1[]
2190 p1G2[]
2191 p0G1[]
2192 p0G2[]
2193 p1G1[]
2194 p1G2[]
2195 p1G1[]
2196 p1G2[]
2197 p1G1[]
2198 p1G2[]
2199 p0G1[]
2200 p0G2[]
2201 p1G1[]
2202 p1G2[]
2203 p1G1[]
2204 p1G2[]
2205 p1G1[]
2206 p1G2[]
root 0
2174 SG2[] -> G2_S2t2_1_1_1_0 2176 2178 2180 2182 2184
2058 SG1[] -> G1_S2t2_1 2175 2177
1594 SG2[] -> G2_S2t2_S_1_1_1_0 2059 2174 2186 2188 2190 2192
991 SG1[] -> G1_S2t2_S_1 1595 2058 2179
744 SG2[] -> G2_S2t2_S_1_1_1_0 992 1594 2194 2196 2198 2200
671 SG1[] -> G1_S2t2_S_1 745 991 2181
649 SG2[] -> G2_S2t1_S_1 672 744 2202
263 SG1[] -> G1_S2t1_S_0_1_1_1 650 671 2183 2185 2187 2189
243 SG2[] -> G2_S2t1_S_1 264 649 2204
67 SG1[] -> G1_S2t1_S_0_1_1_1 244 263 2191 2193 2195 2197
55 SG1[] -> G1_S2t1_S_0_1_1_1 56 67 2199 2201 2203 2205
3 SG2[] -> G2_S2t1_S_1 68 243 2206
0 __top[] -> __top_method 55 3
<==
