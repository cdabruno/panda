Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp11.sas.
- State has 6 bits divided into 6 mutex groups.
- Domain contains 8 actions.
- Domain contains 11 tasks.
- Domain contains 9 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 11
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 10
Search Results
- Search time 0.002 seconds
- Visited list time 0.000251 seconds
- Visited list inserts 61
- Visited list pruned 0
- Visited list contains 61
- Visited list hash collisions 0
- Visited list used hash buckets 61
- Generated 579 search nodes
  Calculated heuristic for 238 nodes
  One modifications 341
  Effectless actions 0
- including 341 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 119000 nodes per second
- Final fringe contains 20 nodes
- Status: Solved
- Found solution of length 33
- Total costs of actions: 24
==>
56 t1G1[]
64 t1G2[]
257 t1G1[]
279 t1G2[]
388 t2G1[]
547 t2G2[]
555 t2G1[]
556 t2G2[]
557 p1G1[]
558 p1G2[]
559 p1G1[]
560 p1G2[]
561 p0G1[]
562 p0G2[]
563 p1G1[]
564 p1G2[]
565 p1G1[]
566 p1G2[]
567 p0G1[]
568 p0G2[]
569 p1G1[]
570 p1G2[]
571 p1G1[]
572 p1G2[]
root 0
554 SG2[] -> G2_S2t2_1_1_0 556 558 560 562
546 SG1[] -> G1_S2t2_1 555 557
387 SG2[] -> G2_S2t2_S_1_1_0 547 554 564 566 568
278 SG1[] -> G1_S2t2_S_1 388 546 559
256 SG2[] -> G2_S2t1_S_1 279 387 570
63 SG1[] -> G1_S2t1_S_0_1_1 257 278 561 563 565
55 SG1[] -> G1_S2t1_S_0_1_1 56 63 567 569 571
3 SG2[] -> G2_S2t1_S_1 64 256 572
0 __top[] -> __top_method 55 3
<==
