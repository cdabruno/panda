Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp8.sas.
- State has 7 bits divided into 7 mutex groups.
- Domain contains 10 actions.
- Domain contains 13 tasks.
- Domain contains 13 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 13
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
Search Results
- Search time 0.001 seconds
- Visited list time 8.8e-05 seconds
- Visited list inserts 23
- Visited list pruned 0
- Visited list contains 23
- Visited list hash collisions 0
- Visited list used hash buckets 23
- Generated 300 search nodes
  Calculated heuristic for 128 nodes
  One modifications 172
  Effectless actions 0
- including 172 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 128000 nodes per second
- Final fringe contains 11 nodes
- Status: Solved
- Found solution of length 17
- Total costs of actions: 12
==>
249 t3G1[]
251 t3G2[]
278 t1G1[]
279 t1G2[]
280 aG1[]
281 aG2[]
282 aG1[]
283 aG2[]
284 bG1[]
285 bG2[]
286 aG1[]
287 aG2[]
root 0
277 SG2[] -> G2_S2t1_a 279 281
250 SG1[] -> G1_S2t1_a_a 278 280 282
248 SG1[] -> G1_S2t3_S_b_a 249 250 284 286
6 SG2[] -> G2_S2t3_S_a_b_a 251 277 283 285 287
0 __top[] -> __top_method 248 6
<==
