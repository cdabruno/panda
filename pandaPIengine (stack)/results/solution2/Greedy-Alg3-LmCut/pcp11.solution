Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp11.sas.
- State has 6 bits divided into 6 mutex groups.
- Domain contains 8 actions.
- Domain contains 11 tasks.
- Domain contains 9 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 11
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 8
Search Results
- Search time 0.003 seconds
- Visited list time 0.000155 seconds
- Visited list inserts 68
- Visited list pruned 0
- Visited list contains 68
- Visited list hash collisions 0
- Visited list used hash buckets 68
- Generated 637 search nodes
  Calculated heuristic for 266 nodes
  One modifications 371
  Effectless actions 0
- including 371 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 88666 nodes per second
- Final fringe contains 19 nodes
- Status: Solved
- Found solution of length 33
- Total costs of actions: 24
==>
33 t1G1[]
68 t1G2[]
148 t1G1[]
277 t1G2[]
360 t2G1[]
605 t2G2[]
613 t2G1[]
614 t2G2[]
615 p1G1[]
616 p1G2[]
617 p1G1[]
618 p1G2[]
619 p0G1[]
620 p0G2[]
621 p1G1[]
622 p1G2[]
623 p1G1[]
624 p1G2[]
625 p0G1[]
626 p0G2[]
627 p1G1[]
628 p1G2[]
629 p1G1[]
630 p1G2[]
root 0
612 SG2[] -> G2_S2t2_1_1_0 614 616 618 620
604 SG1[] -> G1_S2t2_1 613 615
359 SG2[] -> G2_S2t2_S_1_1_0 605 612 622 624 626
276 SG1[] -> G1_S2t2_S_1 360 604 617
147 SG2[] -> G2_S2t1_S_1 277 359 628
67 SG1[] -> G1_S2t1_S_0_1_1 148 276 619 621 623
32 SG1[] -> G1_S2t1_S_0_1_1 33 67 625 627 629
3 SG2[] -> G2_S2t1_S_1 68 147 630
0 __top[] -> __top_method 32 3
<==
