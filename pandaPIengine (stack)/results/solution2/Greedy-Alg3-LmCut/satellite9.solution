Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite9.sas.
- State has 11 bits divided into 11 mutex groups.
- Domain contains 24 actions.
- Domain contains 34 tasks.
- Domain contains 46 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 34
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
Search Results
- Search time 0.018 seconds
- Visited list time 0.0007 seconds
- Visited list inserts 229
- Visited list pruned 0
- Visited list contains 229
- Visited list hash collisions 0
- Visited list used hash buckets 229
- Generated 1070 search nodes
  Calculated heuristic for 785 nodes
  One modifications 281
  Effectless actions 4
- including 281 one modification actions
- including 0 one modification methods
- and       4 progressions of effectless actions
- Generated 43611 nodes per second
- Final fringe contains 88 nodes
- Status: Solved
- Found solution of length 27
- Total costs of actions: 17
==>
998 switch_on[instrument02,satellite0]
1032 turn_to[satellite0,GroundStation0,Phenomenon6]
1035 calibrate[satellite0,instrument02,GroundStation0]
1037 turn_to[satellite0,Star5,GroundStation0]
1038 take_image[satellite0,Star5,instrument02,x_ray]
1039 switch_off[instrument02,satellite0]
1040 switch_on[instrument03,satellite0]
1052 turn_to[satellite0,GroundStation0,Star5]
1055 calibrate[satellite0,instrument03,GroundStation0]
1057 turn_to[satellite0,Phenomenon6,GroundStation0]
1058 take_image[satellite0,Phenomenon6,instrument03,hd_video]
1059 switch_off[instrument03,satellite0]
1060 switch_on[instrument01,satellite0]
1064 turn_to[satellite0,GroundStation0,Phenomenon6]
1065 calibrate[satellite0,instrument01,GroundStation0]
1066 turn_to[satellite0,Phenomenon4,GroundStation0]
1067 take_image[satellite0,Phenomenon4,instrument01,thermograph]
root 0
1063 auto_calibrate[satellite0,instrument01] -> method6 1064 1065
1041 auto_calibrate[satellite0,instrument03] -> method6 1052 1055
1027 auto_calibrate[satellite0,instrument02] -> method6 1032 1035
997 activate_instrument[satellite0,instrument03] -> method4 1039 1040 1041
573 do_observation[Phenomenon6,hd_video] -> method0 997 1057 1058
562 activate_instrument[satellite0,instrument02] -> method5 998 1027
161 activate_instrument[satellite0,instrument01] -> method4 1059 1060 1063
22 do_observation[Star5,x_ray] -> method0 562 1037 1038
5 do_observation[Phenomenon4,thermograph] -> method0 161 1066 1067
0 __top[] -> __top_method 5 22 573
<==
