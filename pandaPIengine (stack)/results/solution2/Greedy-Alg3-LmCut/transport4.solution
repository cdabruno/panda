Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport4.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 47 actions.
- Domain contains 68 tasks.
- Domain contains 63 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 28
Search Results
- Search time 0.684 seconds
- Visited list time 0.016503 seconds
- Visited list inserts 4699
- Visited list pruned 1419
- Visited list contains 3280
- Visited list hash collisions 1419
- Visited list used hash buckets 3280
- Generated 16439 search nodes
  Calculated heuristic for 13244 nodes
  One modifications 2808
  Effectless actions 387
- including 2808 one modification actions
- including 0 one modification methods
- and       387 progressions of effectless actions
- Generated 19362 nodes per second
- Final fringe contains 1782 nodes
- Status: Solved
- Found solution of length 45
- Total costs of actions: 20
==>
51 drive[truck-0,city-loc-0,city-loc-3]
62 drive[truck-0,city-loc-3,city-loc-2]
71 pick-up[truck-0,city-loc-2,package-3,capacity-2,capacity-3]
75 drive[truck-0,city-loc-2,city-loc-1]
15891 pick-up[truck-0,city-loc-1,package-1,capacity-1,capacity-2]
15905 drive[truck-0,city-loc-1,city-loc-2]
15906 drive[truck-0,city-loc-2,city-loc-3]
15910 drive[truck-0,city-loc-3,city-loc-0]
15911 noop[truck-0,city-loc-0]
16373 drop[truck-0,city-loc-0,package-3,capacity-1,capacity-2]
16374 pick-up[truck-0,city-loc-0,package-0,capacity-1,capacity-2]
16377 drive[truck-0,city-loc-0,city-loc-3]
16390 drop[truck-0,city-loc-3,package-0,capacity-1,capacity-2]
16391 pick-up[truck-0,city-loc-3,package-2,capacity-1,capacity-2]
16409 drive[truck-0,city-loc-3,city-loc-0]
16430 drop[truck-0,city-loc-0,package-1,capacity-1,capacity-2]
16431 drive[truck-0,city-loc-0,city-loc-3]
16432 drive[truck-0,city-loc-3,city-loc-2]
16433 drive[truck-0,city-loc-2,city-loc-1]
16437 drop[truck-0,city-loc-1,package-2,capacity-2,capacity-3]
root 0
16436 unload[truck-0,city-loc-1,package-2] -> m-unload 16437
16422 unload[truck-0,city-loc-0,package-1] -> m-unload 16430
16408 get-to[truck-0,city-loc-3] -> m-drive-to 16431
16403 get-to[truck-0,city-loc-2] -> m-drive-to-via 16408 16432
16397 get-to[truck-0,city-loc-1] -> m-drive-to-via 16403 16433
16386 unload[truck-0,city-loc-3,package-0] -> m-unload 16390
16376 get-to[truck-0,city-loc-3] -> m-drive-to 16377
16372 load[truck-0,city-loc-0,package-0] -> m-load 16374
15915 unload[truck-0,city-loc-0,package-3] -> m-unload 16373
15904 get-to[truck-0,city-loc-2] -> m-drive-to 15905
15902 get-to[truck-0,city-loc-3] -> m-drive-to-via 15904 15906
15895 get-to[truck-0,city-loc-0] -> m-drive-to-via 15902 16409
15890 load[truck-0,city-loc-1,package-1] -> m-load 15891
74 get-to[truck-0,city-loc-0] -> m-i-am-there 15911
65 load[truck-0,city-loc-2,package-3] -> m-load 71
58 load[truck-0,city-loc-3,package-2] -> m-load 16391
50 get-to[truck-0,city-loc-2] -> m-drive-to 62
33 get-to[truck-0,city-loc-1] -> m-drive-to 75
26 get-to[truck-0,city-loc-3] -> m-drive-to 51
11 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 26 58
7 get-to[truck-0,city-loc-0] -> m-drive-to 15910
6 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 7 16372
4 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 50 65
2 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 33 15890
0 __top[] -> <<<<__top_method;deliver[package-3,city-loc-0];m-deliver;3;0,1,2,-1,-2,-3>;deliver[package-2,city-loc-1];m-deliver;2;0,1,-1,-2,-3,3,4,5>;deliver[package-1,city-loc-0];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7>;deliver[package-0,city-loc-3];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9> 6 16376 16386 2 15895 16422 11 16397 16436 4 74 15915
<==
