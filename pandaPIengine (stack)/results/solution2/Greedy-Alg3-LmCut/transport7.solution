Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport7.sas.
- State has 26 bits divided into 26 mutex groups.
- Domain contains 49 actions.
- Domain contains 79 tasks.
- Domain contains 70 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 75
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 41
Search Results
- Search time 0.36 seconds
- Visited list time 0.010954 seconds
- Visited list inserts 3746
- Visited list pruned 1540
- Visited list contains 2206
- Visited list hash collisions 1540
- Visited list used hash buckets 2206
- Generated 13621 search nodes
  Calculated heuristic for 7885 nodes
  One modifications 5211
  Effectless actions 525
- including 5211 one modification actions
- including 0 one modification methods
- and       525 progressions of effectless actions
- Generated 21902 nodes per second
- Final fringe contains 1287 nodes
- Status: Solved
- Found solution of length 67
- Total costs of actions: 30
==>
37 noop[truck-0,city-loc-3]
43 pick-up[truck-0,city-loc-3,package-1,capacity-1,capacity-2]
47 drive[truck-0,city-loc-3,city-loc-4]
51 drive[truck-0,city-loc-4,city-loc-0]
60 pick-up[truck-0,city-loc-0,package-0,capacity-0,capacity-1]
63 drive[truck-0,city-loc-0,city-loc-2]
64 noop[truck-0,city-loc-2]
65 noop[truck-0,city-loc-2]
79 drop[truck-0,city-loc-2,package-1,capacity-0,capacity-1]
80 pick-up[truck-0,city-loc-2,package-2,capacity-0,capacity-1]
112 drop[truck-0,city-loc-2,package-0,capacity-0,capacity-1]
113 drive[truck-0,city-loc-2,city-loc-0]
114 drive[truck-0,city-loc-0,city-loc-4]
7392 drop[truck-0,city-loc-4,package-2,capacity-1,capacity-2]
8258 pick-up[truck-0,city-loc-4,package-4,capacity-1,capacity-2]
10750 drive[truck-0,city-loc-4,city-loc-1]
10751 noop[truck-0,city-loc-1]
13370 pick-up[truck-0,city-loc-1,package-3,capacity-0,capacity-1]
13583 drive[truck-0,city-loc-1,city-loc-4]
13584 drive[truck-0,city-loc-4,city-loc-0]
13585 noop[truck-0,city-loc-0]
13601 drop[truck-0,city-loc-0,package-4,capacity-0,capacity-1]
13602 drive[truck-0,city-loc-0,city-loc-4]
13603 drive[truck-0,city-loc-4,city-loc-1]
13604 pick-up[truck-0,city-loc-1,package-5,capacity-0,capacity-1]
13610 drive[truck-0,city-loc-1,city-loc-4]
13611 drive[truck-0,city-loc-4,city-loc-3]
13612 noop[truck-0,city-loc-3]
13618 drop[truck-0,city-loc-3,package-5,capacity-0,capacity-1]
13619 drop[truck-0,city-loc-3,package-3,capacity-1,capacity-2]
root 0
13617 unload[truck-0,city-loc-3,package-3] -> m-unload 13619
13614 unload[truck-0,city-loc-3,package-5] -> m-unload 13618
13609 get-to[truck-0,city-loc-3] -> m-i-am-there 13612
13596 unload[truck-0,city-loc-0,package-4] -> m-unload 13601
13582 get-to[truck-0,city-loc-4] -> m-drive-to 13583
13579 get-to[truck-0,city-loc-0] -> m-drive-to-via 13582 13584
13433 get-to[truck-0,city-loc-4] -> m-drive-to-via 13579 13602
13388 get-to[truck-0,city-loc-1] -> m-drive-to-via 13433 13603
13381 get-to[truck-0,city-loc-4] -> m-drive-to-via 13388 13610
13373 get-to[truck-0,city-loc-3] -> m-drive-to-via 13381 13611
13246 load[truck-0,city-loc-1,package-3] -> m-load 13370
12983 load[truck-0,city-loc-1,package-5] -> m-load 13604
10749 get-to[truck-0,city-loc-0] -> m-i-am-there 13585
117 unload[truck-0,city-loc-4,package-2] -> m-unload 7392
107 get-to[truck-0,city-loc-0] -> m-drive-to 113
91 get-to[truck-0,city-loc-4] -> m-drive-to-via 107 114
76 load[truck-0,city-loc-2,package-2] -> m-load 80
73 unload[truck-0,city-loc-2,package-0] -> m-unload 112
71 unload[truck-0,city-loc-2,package-1] -> m-unload 79
62 get-to[truck-0,city-loc-2] -> m-i-am-there 65
57 load[truck-0,city-loc-0,package-0] -> m-load 60
50 load[truck-0,city-loc-4,package-4] -> m-load 8258
46 get-to[truck-0,city-loc-2] -> m-i-am-there 64
41 load[truck-0,city-loc-3,package-1] -> m-load 43
36 get-to[truck-0,city-loc-3] -> m-i-am-there 37
31 get-to[truck-0,city-loc-2] -> m-drive-to 63
30 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 31 76
22 get-to[truck-0,city-loc-4] -> m-drive-to 47
20 get-to[truck-0,city-loc-1] -> m-i-am-there 10751
18 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 36 41
14 get-to[truck-0,city-loc-1] -> m-drive-to 10750
13 m-deliver_splitted_1[truck-0,package-4] -> _splitting_method_m-deliver_splitted_1 22 50
7 get-to[truck-0,city-loc-0] -> m-drive-to 51
5 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 7 57
4 m-deliver_splitted_1[truck-0,package-5] -> _splitting_method_m-deliver_splitted_1 14 12983
2 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 20 13246
0 __top[] -> <<<<<<__top_method;deliver[package-5,city-loc-3];m-deliver;5;0,1,2,3,4,-1,-2,-3>;deliver[package-4,city-loc-0];m-deliver;4;0,1,2,3,-1,-2,-3,5,6,7>;deliver[package-3,city-loc-3];m-deliver;3;0,1,2,-1,-2,-3,4,5,6,7,8,9>;deliver[package-2,city-loc-4];m-deliver;2;0,1,-1,-2,-3,3,4,5,6,7,8,9,10,11>;deliver[package-1,city-loc-2];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7,8,9,10,11,12,13>;deliver[package-0,city-loc-2];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15> 5 62 73 18 46 71 30 91 117 2 13373 13617 13 10749 13596 4 13609 13614
<==
