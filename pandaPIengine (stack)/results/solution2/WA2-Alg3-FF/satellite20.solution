Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite20.sas.
- State has 37 bits divided into 37 mutex groups.
- Domain contains 123 actions.
- Domain contains 139 tasks.
- Domain contains 202 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 139
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
- Starting state heuristic value: 22
Search Results
- Search time 0.015 seconds
- Visited list time 0.000924 seconds
- Visited list inserts 260
- Visited list pruned 46
- Visited list contains 214
- Visited list hash collisions 46
- Visited list used hash buckets 214
- Generated 3028 search nodes
  Calculated heuristic for 2157 nodes
  One modifications 612
  Effectless actions 259
- including 612 one modification actions
- including 0 one modification methods
- and       259 progressions of effectless actions
- Generated 143800 nodes per second
- Final fringe contains 495 nodes
- Status: Solved
- Found solution of length 25
- Total costs of actions: 16
==>
2950 switch_on[instrument3,satellite2]
2963 switch_on[instrument2,satellite1]
3011 turn_to[satellite1,star1,phenomenon5]
3013 calibrate[satellite1,instrument2,star1]
3015 turn_to[satellite1,planet6,star1]
3016 take_image[satellite1,planet6,instrument2,spectrograph0]
3017 turn_to[satellite2,groundstation0,planet6]
3018 calibrate[satellite2,instrument3,groundstation0]
3019 turn_to[satellite2,phenomenon3,groundstation0]
3020 take_image[satellite2,phenomenon3,instrument3,image1]
3021 turn_to[satellite2,planet4,phenomenon3]
3022 take_image[satellite2,planet4,instrument3,infrared2]
3023 turn_to[satellite2,planet2,planet4]
3024 take_image[satellite2,planet2,instrument3,infrared2]
3025 turn_to[satellite2,phenomenon5,planet2]
3026 take_image[satellite2,phenomenon5,instrument3,image4]
root 0
2976 auto_calibrate[satellite1,instrument2] -> method6 3011 3013
2960 auto_calibrate[satellite2,instrument3] -> method6 3017 3018
2949 activate_instrument[satellite1,instrument2] -> method5 2963 2976
1736 do_observation[planet6,spectrograph0] -> method0 2949 3015 3016
1606 do_observation[phenomenon5,image4] -> <method1;method1_splitted_1[satellite2,phenomenon5,image4];_splitting_method_method1_splitted_1;1;0,-1> 3025 3026
1554 do_observation[planet2,infrared2] -> <method1;method1_splitted_1[satellite2,planet2,infrared2];_splitting_method_method1_splitted_1;1;0,-1> 3023 3024
856 do_observation[planet4,infrared2] -> <method1;method1_splitted_1[satellite2,planet4,infrared2];_splitting_method_method1_splitted_1;1;0,-1> 3021 3022
24 do_observation[phenomenon3,image1] -> <method0;activate_instrument[satellite2,instrument3];method5;0;-1,-2,1,2> 2950 2960 3019 3020
0 __top[] -> __top_method 1554 24 856 1606 1736
<==
