Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite17.sas.
- State has 21 bits divided into 21 mutex groups.
- Domain contains 72 actions.
- Domain contains 88 tasks.
- Domain contains 135 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 88
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.002 seconds
- Visited list time 0.000283 seconds
- Visited list inserts 108
- Visited list pruned 2
- Visited list contains 106
- Visited list hash collisions 2
- Visited list used hash buckets 106
- Generated 890 search nodes
  Calculated heuristic for 712 nodes
  One modifications 136
  Effectless actions 42
- including 136 one modification actions
- including 0 one modification methods
- and       42 progressions of effectless actions
- Generated 356000 nodes per second
- Final fringe contains 110 nodes
- Status: Solved
- Found solution of length 19
- Total costs of actions: 11
==>
869 switch_on[instrument3,satellite1]
874 turn_to[satellite1,star0,groundstation1]
878 calibrate[satellite1,instrument3,star0]
879 turn_to[satellite1,phenomenon3,star0]
880 take_image[satellite1,phenomenon3,instrument3,spectrograph0]
881 turn_to[satellite1,planet4,phenomenon3]
882 take_image[satellite1,planet4,instrument3,thermograph1]
883 turn_to[satellite1,star2,planet4]
884 take_image[satellite1,star2,instrument3,infrared2]
885 turn_to[satellite1,phenomenon5,star2]
888 take_image[satellite1,phenomenon5,instrument3,thermograph1]
root 0
887 method1_splitted_1[satellite1,phenomenon5,thermograph1] -> _splitting_method_method1_splitted_1 888
873 auto_calibrate[satellite1,instrument3] -> method6 874 878
868 activate_instrument[satellite1,instrument3] -> method5 869 873
821 do_observation[star2,infrared2] -> <method1;method1_splitted_1[satellite1,star2,infrared2];_splitting_method_method1_splitted_1;1;0,-1> 883 884
232 do_observation[planet4,thermograph1] -> method0 868 881 882
188 do_observation[phenomenon5,thermograph1] -> method1 885 887
9 do_observation[phenomenon3,spectrograph0] -> <method1;method1_splitted_1[satellite1,phenomenon3,spectrograph0];_splitting_method_method1_splitted_1;1;0,-1> 879 880
0 __top[] -> __top_method 821 9 232 188
<==
