Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite14.sas.
- State has 25 bits divided into 25 mutex groups.
- Domain contains 53 actions.
- Domain contains 66 tasks.
- Domain contains 90 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 66
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.002 seconds
- Visited list time 0.000351 seconds
- Visited list inserts 130
- Visited list pruned 25
- Visited list contains 105
- Visited list hash collisions 25
- Visited list used hash buckets 105
- Generated 681 search nodes
  Calculated heuristic for 446 nodes
  One modifications 168
  Effectless actions 67
- including 168 one modification actions
- including 0 one modification methods
- and       67 progressions of effectless actions
- Generated 223000 nodes per second
- Final fringe contains 48 nodes
- Status: Solved
- Found solution of length 19
- Total costs of actions: 12
==>
655 switch_on[instrument2,satellite2]
663 turn_to[satellite2,GroundStation1,Phenomenon8]
665 calibrate[satellite2,instrument2,GroundStation1]
667 turn_to[satellite2,Phenomenon4,GroundStation1]
668 take_image[satellite2,Phenomenon4,instrument2,thermograph]
669 switch_on[instrument02,satellite0]
671 turn_to[satellite0,GroundStation0,Phenomenon6]
672 calibrate[satellite0,instrument02,GroundStation0]
673 turn_to[satellite0,Star5,GroundStation0]
674 take_image[satellite0,Star5,instrument02,x_ray]
675 turn_to[satellite0,Phenomenon6,Star5]
676 take_image[satellite0,Phenomenon6,instrument02,x_ray]
root 0
670 auto_calibrate[satellite0,instrument02] -> method6 671 672
659 auto_calibrate[satellite2,instrument2] -> method6 663 665
387 do_observation[Phenomenon6,x_ray] -> <method1;method1_splitted_1[satellite0,Phenomenon6,x_ray];_splitting_method_method1_splitted_1;1;0,-1> 675 676
384 activate_instrument[satellite0,instrument02] -> method5 669 670
108 do_observation[Star5,x_ray] -> method0 384 673 674
13 do_observation[Phenomenon4,thermograph] -> <method0;activate_instrument[satellite2,instrument2];method5;0;-1,-2,1,2> 655 659 667 668
0 __top[] -> __top_method 13 108 387
<==
