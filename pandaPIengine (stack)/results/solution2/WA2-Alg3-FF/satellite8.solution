Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite8.sas.
- State has 9 bits divided into 9 mutex groups.
- Domain contains 21 actions.
- Domain contains 29 tasks.
- Domain contains 37 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 29
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.004 seconds
- Visited list time 0.000742 seconds
- Visited list inserts 205
- Visited list pruned 2
- Visited list contains 203
- Visited list hash collisions 2
- Visited list used hash buckets 203
- Generated 1016 search nodes
  Calculated heuristic for 670 nodes
  One modifications 334
  Effectless actions 12
- including 334 one modification actions
- including 0 one modification methods
- and       12 progressions of effectless actions
- Generated 167500 nodes per second
- Final fringe contains 95 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 13
==>
950 switch_on[instrument01,satellite0]
990 turn_to[satellite0,GroundStation0,Phenomenon6]
995 calibrate[satellite0,instrument01,GroundStation0]
1000 turn_to[satellite0,Phenomenon4,GroundStation0]
1001 take_image[satellite0,Phenomenon4,instrument01,thermograph]
1002 switch_off[instrument01,satellite0]
1003 switch_on[instrument02,satellite0]
1005 turn_to[satellite0,GroundStation0,Phenomenon4]
1010 calibrate[satellite0,instrument02,GroundStation0]
1011 turn_to[satellite0,Phenomenon6,GroundStation0]
1012 take_image[satellite0,Phenomenon6,instrument02,x_ray]
1013 turn_to[satellite0,Star5,Phenomenon6]
1014 take_image[satellite0,Star5,instrument02,x_ray]
root 0
1004 auto_calibrate[satellite0,instrument02] -> method6 1005 1010
985 auto_calibrate[satellite0,instrument01] -> method6 990 995
949 do_observation[Phenomenon6,x_ray] -> <method1;method1_splitted_1[satellite0,Phenomenon6,x_ray];_splitting_method_method1_splitted_1;1;0,-1> 1011 1012
946 activate_instrument[satellite0,instrument01] -> method5 950 985
901 activate_instrument[satellite0,instrument02] -> method4 1002 1003 1004
15 do_observation[Star5,x_ray] -> method0 901 1013 1014
5 do_observation[Phenomenon4,thermograph] -> method0 946 1000 1001
0 __top[] -> __top_method 5 15 949
<==
