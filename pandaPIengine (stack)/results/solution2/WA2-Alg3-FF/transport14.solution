Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport14.sas.
- State has 42 bits divided into 42 mutex groups.
- Domain contains 108 actions.
- Domain contains 175 tasks.
- Domain contains 169 methods.
- The initial state contains 10 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 165
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.048 seconds
- Visited list time 0.005181 seconds
- Visited list inserts 1352
- Visited list pruned 325
- Visited list contains 1027
- Visited list hash collisions 325
- Visited list used hash buckets 1027
- Generated 7499 search nodes
  Calculated heuristic for 5974 nodes
  One modifications 1424
  Effectless actions 101
- including 1424 one modification actions
- including 0 one modification methods
- and       101 progressions of effectless actions
- Generated 124458 nodes per second
- Final fringe contains 1796 nodes
- Status: Solved
- Found solution of length 79
- Total costs of actions: 33
==>
105 noop[truck-1,city-loc-0]
5673 drive[truck-0,city-loc-0,city-loc-5]
5722 drive[truck-0,city-loc-5,city-loc-2]
5730 pick-up[truck-0,city-loc-2,package-1,capacity-1,capacity-2]
5744 drive[truck-0,city-loc-2,city-loc-4]
5745 noop[truck-0,city-loc-4]
5751 drive[truck-0,city-loc-4,city-loc-2]
5906 pick-up[truck-1,city-loc-0,package-3,capacity-1,capacity-2]
6162 drive[truck-1,city-loc-0,city-loc-5]
6165 drive[truck-1,city-loc-5,city-loc-2]
6176 drop[truck-1,city-loc-2,package-3,capacity-1,capacity-2]
6180 drive[truck-0,city-loc-2,city-loc-4]
6213 drop[truck-0,city-loc-4,package-1,capacity-1,capacity-2]
6214 pick-up[truck-0,city-loc-4,package-0,capacity-1,capacity-2]
6858 pick-up[truck-0,city-loc-4,package-2,capacity-0,capacity-1]
6869 drive[truck-0,city-loc-4,city-loc-2]
6870 drive[truck-0,city-loc-2,city-loc-5]
7122 drive[truck-0,city-loc-5,city-loc-0]
7127 drop[truck-0,city-loc-0,package-0,capacity-0,capacity-1]
7128 drive[truck-0,city-loc-0,city-loc-5]
7135 drop[truck-0,city-loc-5,package-2,capacity-1,capacity-2]
7136 drive[truck-0,city-loc-5,city-loc-3]
7137 drive[truck-0,city-loc-3,city-loc-1]
7139 pick-up[truck-0,city-loc-1,package-5,capacity-1,capacity-2]
7472 drive[truck-0,city-loc-1,city-loc-3]
7473 drive[truck-0,city-loc-3,city-loc-5]
7474 drive[truck-0,city-loc-5,city-loc-2]
7479 pick-up[truck-0,city-loc-2,package-4,capacity-0,capacity-1]
7483 drive[truck-0,city-loc-2,city-loc-5]
7484 drive[truck-0,city-loc-5,city-loc-3]
7493 drop[truck-0,city-loc-3,package-5,capacity-0,capacity-1]
7494 drive[truck-0,city-loc-3,city-loc-1]
7497 drop[truck-0,city-loc-1,package-4,capacity-1,capacity-2]
root 0
7496 unload[truck-0,city-loc-1,package-4] -> m-unload 7497
7491 unload[truck-0,city-loc-3,package-5] -> m-unload 7493
7482 get-to[truck-0,city-loc-1] -> m-drive-to 7494
7471 get-to[truck-0,city-loc-3] -> m-drive-to 7472
7453 get-to[truck-0,city-loc-5] -> m-drive-to-via 7471 7473
7280 get-to[truck-0,city-loc-2] -> m-drive-to-via 7453 7474
7180 get-to[truck-0,city-loc-5] -> m-drive-to-via 7280 7483
7145 get-to[truck-0,city-loc-3] -> m-drive-to-via 7180 7484
7138 load[truck-0,city-loc-1,package-5] -> m-load 7139
7132 unload[truck-0,city-loc-5,package-2] -> m-unload 7135
7125 unload[truck-0,city-loc-0,package-0] -> m-unload 7127
6868 get-to[truck-0,city-loc-5] -> m-drive-to 7128
6821 get-to[truck-0,city-loc-2] -> m-drive-to 6869
6661 get-to[truck-0,city-loc-5] -> m-drive-to-via 6821 6870
6220 get-to[truck-0,city-loc-0] -> m-drive-to-via 6661 7122
6188 load[truck-0,city-loc-4,package-0] -> m-load 6214
6173 unload[truck-1,city-loc-2,package-3] -> m-unload 6176
5921 get-to[truck-1,city-loc-5] -> m-drive-to 6162
5917 get-to[truck-1,city-loc-2] -> m-drive-to-via 5921 6165
5755 load[truck-0,city-loc-2,package-4] -> m-load 7479
5748 load[truck-0,city-loc-4,package-2] -> m-load 6858
5746 unload[truck-0,city-loc-4,package-1] -> m-unload 6213
5731 get-to[truck-0,city-loc-4] -> m-drive-to 5744
5725 load[truck-0,city-loc-2,package-1] -> m-load 5730
5670 get-to[truck-0,city-loc-4] -> m-i-am-there 5745
5660 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 5670 5748
5653 get-to[truck-0,city-loc-5] -> m-drive-to 5673
3610 get-to[truck-0,city-loc-2] -> m-drive-to 5751
520 m-deliver_splitted_1[truck-0,package-4] -> _splitting_method_m-deliver_splitted_1 3610 5755
121 get-to[truck-0,city-loc-3] -> m-drive-to-via 5653 7136
111 get-to[truck-0,city-loc-1] -> m-drive-to-via 121 7137
108 load[truck-1,city-loc-0,package-3] -> m-load 5906
104 get-to[truck-1,city-loc-0] -> m-i-am-there 105
102 m-deliver_splitted_1[truck-0,package-5] -> _splitting_method_m-deliver_splitted_1 111 7138
100 deliver[package-2,city-loc-5] -> m-deliver 5660 6868 7132
97 m-deliver_splitted_1[truck-1,package-3] -> _splitting_method_m-deliver_splitted_1 104 108
95 deliver[package-4,city-loc-1] -> m-deliver 520 7482 7496
52 deliver[package-5,city-loc-3] -> m-deliver 102 7145 7491
41 get-to[truck-0,city-loc-4] -> m-drive-to 6180
21 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 41 6188
13 get-to[truck-0,city-loc-2] -> m-drive-to 5722
10 deliver[package-0,city-loc-0] -> m-deliver 21 6220 7125
8 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 13 5725
3 deliver[package-1,city-loc-4] -> m-deliver 8 5731 5746
2 deliver[package-3,city-loc-2] -> m-deliver 97 5917 6173
0 __top[] -> __top_method 10 3 100 2 95 52
<==
