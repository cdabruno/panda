Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport12.sas.
- State has 32 bits divided into 32 mutex groups.
- Domain contains 82 actions.
- Domain contains 129 tasks.
- Domain contains 131 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 121
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 39
   1s visitime    0.17s generated nodes    155057 nodes/sec  151127 cur h   13 mod.depth   30 inserts     54268 dups     12798 size     41470 hash fail  12855 hash buckets  41413
   2s visitime    0.33s generated nodes    310145 nodes/sec  151586 cur h   19 mod.depth   24 inserts    102507 dups     23918 size     78589 hash fail  24094 hash buckets  78413
   3s visitime    0.49s generated nodes    465240 nodes/sec  152138 cur h   15 mod.depth   28 inserts    149516 dups     34543 size    114973 hash fail  34900 hash buckets 114616
   4s visitime    0.64s generated nodes    540271 nodes/sec  132907 cur h   21 mod.depth   23 inserts    174049 dups     41103 size    132946 hash fail  41608 hash buckets 132441
   5s visitime    0.81s generated nodes    615298 nodes/sec  120907 cur h   20 mod.depth   23 inserts    199485 dups     48791 size    150694 hash fail  49435 hash buckets 150050
   6s visitime    0.99s generated nodes    755381 nodes/sec  123569 cur h   19 mod.depth   25 inserts    249141 dups     64409 size    184732 hash fail  65347 hash buckets 183794
   7s visitime    1.18s generated nodes    900432 nodes/sec  126181 cur h   21 mod.depth   23 inserts    304899 dups     85221 size    219678 hash fail  86583 hash buckets 218316
   8s visitime    1.37s generated nodes   1040509 nodes/sec  127873 cur h   16 mod.depth   28 inserts    362904 dups    109928 size    252976 hash fail 111752 hash buckets 251152
   9s visitime    1.52s generated nodes   1150564 nodes/sec  125361 cur h   20 mod.depth   25 inserts    394467 dups    118202 size    276265 hash fail 120400 hash buckets 274067
  10s visitime    1.67s generated nodes   1230598 nodes/sec  120140 cur h   17 mod.depth   28 inserts    414850 dups    122040 size    292810 hash fail 124528 hash buckets 290322
  11s visitime    1.82s generated nodes   1340648 nodes/sec  119020 cur h   20 mod.depth   25 inserts    445445 dups    128876 size    316569 hash fail 131822 hash buckets 313623
  12s visitime    1.98s generated nodes   1490717 nodes/sec  121542 cur h   19 mod.depth   26 inserts    487280 dups    138329 size    348951 hash fail 141966 hash buckets 345314
Search Results
- Search time 12.60 seconds
- Visited list time 2.03 seconds
- Visited list inserts 501513
- Visited list pruned 141703
- Visited list contains 359810
- Visited list hash collisions 145582
- Visited list used hash buckets 355931
- Generated 1540228 search nodes
  Calculated heuristic for 1205605 nodes
  One modifications 286940
  Effectless actions 47683
- including 286940 one modification actions
- including 0 one modification methods
- and       47683 progressions of effectless actions
- Generated 95720 nodes per second
- Final fringe contains 469655 nodes
- Status: Solved
- Found solution of length 45
- Total costs of actions: 18
==>
309124 drive[truck-1,city-loc-1,city-loc-1]
309159 pick-up[truck-1,city-loc-1,package-1,capacity-1,capacity-2]
309161 drive[truck-1,city-loc-1,city-loc-3]
309735 drive[truck-1,city-loc-3,city-loc-2]
309974 drive[truck-1,city-loc-2,city-loc-3]
315797 pick-up[truck-1,city-loc-3,package-2,capacity-0,capacity-1]
315993 drive[truck-1,city-loc-3,city-loc-2]
316006 drop[truck-1,city-loc-2,package-1,capacity-0,capacity-1]
316008 drop[truck-1,city-loc-2,package-2,capacity-1,capacity-2]
316009 drive[truck-1,city-loc-2,city-loc-1]
316011 pick-up[truck-1,city-loc-1,package-3,capacity-1,capacity-2]
316015 drive[truck-1,city-loc-1,city-loc-3]
316020 drop[truck-1,city-loc-3,package-3,capacity-1,capacity-2]
316021 pick-up[truck-1,city-loc-3,package-0,capacity-1,capacity-2]
1370470 drive[truck-1,city-loc-3,city-loc-1]
1370471 drive[truck-1,city-loc-1,city-loc-4]
1370472 drive[truck-1,city-loc-4,city-loc-0]
1370481 drop[truck-1,city-loc-0,package-0,capacity-1,capacity-2]
root 0
1370480 unload[truck-1,city-loc-0,package-0] -> m-unload 1370481
1370469 get-to[truck-1,city-loc-1] -> m-drive-to 1370470
600151 get-to[truck-1,city-loc-4] -> m-drive-to-via 1370469 1370471
316027 get-to[truck-1,city-loc-0] -> m-drive-to-via 600151 1370472
316019 unload[truck-1,city-loc-3,package-3] -> m-unload 316020
316014 get-to[truck-1,city-loc-3] -> m-drive-to 316015
316010 load[truck-1,city-loc-1,package-3] -> m-load 316011
315998 unload[truck-1,city-loc-2,package-2] -> m-unload 316008
315992 get-to[truck-1,city-loc-2] -> m-drive-to 315993
315796 load[truck-1,city-loc-3,package-2] -> m-load 315797
309973 unload[truck-1,city-loc-2,package-1] -> m-unload 316006
309734 load[truck-1,city-loc-3,package-0] -> m-load 316021
309160 get-to[truck-1,city-loc-2] -> m-drive-to 309735
309125 load[truck-1,city-loc-1,package-1] -> m-load 309159
309106 get-to[truck-1,city-loc-1] -> m-drive-to 316009
309071 get-to[truck-1,city-loc-1] -> m-drive-to 309124
309057 m-deliver_splitted_1[truck-1,package-1] -> _splitting_method_m-deliver_splitted_1 309071 309125
309052 get-to[truck-1,city-loc-3] -> m-drive-to 309161
309048 m-deliver_splitted_1[truck-1,package-3] -> _splitting_method_m-deliver_splitted_1 309106 316010
309046 m-deliver_splitted_1[truck-1,package-0] -> _splitting_method_m-deliver_splitted_1 309052 309734
309044 deliver[package-0,city-loc-0] -> m-deliver 309046 316027 1370480
309042 deliver[package-3,city-loc-3] -> m-deliver 309048 316014 316019
72269 get-to[truck-1,city-loc-3] -> m-drive-to 309974
72268 m-deliver_splitted_1[truck-1,package-2] -> _splitting_method_m-deliver_splitted_1 72269 315796
3 deliver[package-2,city-loc-2] -> m-deliver 72268 315992 315998
1 deliver[package-1,city-loc-2] -> m-deliver 309057 309160 309973
0 __top[] -> __top_method 309044 1 3 309042
<==
