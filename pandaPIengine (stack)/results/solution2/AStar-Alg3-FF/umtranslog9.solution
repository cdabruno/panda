Random seed: 42
Time limit: 2 seconds
Reading input from results/grounded/umtranslog9.sas.
- State has 13 bits divided into 13 mutex groups.
- Domain contains 9 actions.
- Domain contains 10 tasks.
- Domain contains 1 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 10
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time0 seconds
- Visited list time 6e-06 seconds
- Visited list inserts 2
- Visited list pruned 0
- Visited list contains 2
- Visited list hash collisions 0
- Visited list used hash buckets 2
- Generated 13 search nodes
  Calculated heuristic for 2 nodes
  One modifications 11
  Effectless actions 0
- including 11 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated -2147483648 nodes per second
- Final fringe contains 0 nodes
- Status: Solved
- Found solution of length 12
- Total costs of actions: 11
==>
1 collect_fees[Briefe]
2 open_door[Eisenbahnwagen]
3 load_package[Briefe,Eisenbahnwagen,HauptbahnhofUlm]
4 close_door[Eisenbahnwagen]
5 attach_train_car[Lokomotive,Eisenbahnwagen,HauptbahnhofUlm]
6 move_vehicle_no_traincar[Lokomotive,HauptbahnhofUlm,UlmMuenchenRailRoute,HauptbahnhofMuenchen]
7 detach_train_car[Lokomotive,Eisenbahnwagen,HauptbahnhofMuenchen]
8 open_door[Eisenbahnwagen]
9 unload_package[Briefe,Eisenbahnwagen,HauptbahnhofMuenchen]
10 close_door[Eisenbahnwagen]
11 deliver_p[Briefe]
root 0
0 __top[] -> <<<<<<<<<<<<<__top_method;transport[Briefe,HauptbahnhofUlm,HauptbahnhofMuenchen];method_transport_pi_ca_de;0;-1,-2,-3>;carry[Briefe,HauptbahnhofUlm,HauptbahnhofMuenchen];method_carry_cd;1;0,-1,2>;carry_direct[Briefe,HauptbahnhofUlm,HauptbahnhofMuenchen];method_carry_direct;1;0,-1,2>;helper_carry_direct[Eisenbahnwagen,Briefe,HauptbahnhofUlm,HauptbahnhofMuenchen];method_helper_carry_direct_noMoveFirst;1;0,-1,-2,-3,2>;unload_top[Briefe,Eisenbahnwagen,HauptbahnhofMuenchen];method_unload_top_normal;3;0,1,2,-1,4>;unload[Briefe,Eisenbahnwagen,HauptbahnhofMuenchen];method_unload_regular;3;0,1,2,-1,-2,-3,4>;move[Eisenbahnwagen,HauptbahnhofUlm,HauptbahnhofMuenchen];method_move_traincar;2;0,1,-1,3,4,5,6>;helper_move_traincar[Eisenbahnwagen,Lokomotive,HauptbahnhofUlm,HauptbahnhofMuenchen];method_helper_move_traincar_noMoveFirst;2;0,1,-1,-2,-3,3,4,5,6>;move[Lokomotive,HauptbahnhofUlm,HauptbahnhofMuenchen];method_move_no_traincar;3;0,1,2,-1,4,5,6,7,8>;load_top[Briefe,Eisenbahnwagen,HauptbahnhofUlm];method_load_top_normal;1;0,-1,2,3,4,5,6,7,8>;load[Briefe,Eisenbahnwagen,HauptbahnhofUlm];method_load_regular;1;0,-1,-2,-3,2,3,4,5,6,7,8>;deliver[Briefe];method_deliver_dp;10;0,1,2,3,4,5,6,7,8,9,-1>;pickup[Briefe];method_pickup_normal;0;-1,1,2,3,4,5,6,7,8,9,10> 1 2 3 4 5 6 7 8 9 10 11
<==
