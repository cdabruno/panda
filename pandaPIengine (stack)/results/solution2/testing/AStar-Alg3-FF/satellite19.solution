Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite19.sas.
- State has 23 bits divided into 23 mutex groups.
- Domain contains 104 actions.
- Domain contains 128 tasks.
- Domain contains 260 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 128
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.164 seconds
- Visited list time 0.007895 seconds
- Visited list inserts 1402
- Visited list pruned 6
- Visited list contains 1396
- Visited list hash collisions 6
- Visited list used hash buckets 1396
- Generated 19450 search nodes
  Calculated heuristic for 17323 nodes
  One modifications 2053
  Effectless actions 74
- including 2053 one modification actions
- including 0 one modification methods
- and       74 progressions of effectless actions
- Generated 105628 nodes per second
- Final fringe contains 3526 nodes
- Status: Solved
- Found solution of length 25
- Total costs of actions: 13
==>
16949 switch_on[instrument1,satellite0]
19417 turn_to[satellite0,star1,star6]
19421 calibrate[satellite0,instrument1,star1]
19422 turn_to[satellite0,planet2,star1]
19424 take_image[satellite0,planet2,instrument1,spectrograph0]
19425 turn_to[satellite0,star6,planet2]
19426 take_image[satellite0,star6,instrument1,thermograph1]
19427 turn_to[satellite0,star4,star6]
19433 take_image[satellite0,star4,instrument1,spectrograph0]
19434 turn_to[satellite0,planet3,star4]
19438 take_image[satellite0,planet3,instrument1,spectrograph0]
19439 turn_to[satellite0,star5,planet3]
19443 take_image[satellite0,star5,instrument1,spectrograph0]
root 0
19442 method1_splitted_1[satellite0,star5,spectrograph0] -> _splitting_method_method1_splitted_1 19443
19437 method1_splitted_1[satellite0,planet3,spectrograph0] -> _splitting_method_method1_splitted_1 19438
19432 method1_splitted_1[satellite0,star4,spectrograph0] -> _splitting_method_method1_splitted_1 19433
19423 method1_splitted_1[satellite0,planet2,spectrograph0] -> _splitting_method_method1_splitted_1 19424
19405 auto_calibrate[satellite0,instrument1] -> method6 19417 19421
16908 activate_instrument[satellite0,instrument1] -> method5 16949 19405
16882 do_observation[star6,thermograph1] -> method0 16908 19425 19426
16800 do_observation[star4,spectrograph0] -> method1 19427 19432
16762 do_observation[planet2,spectrograph0] -> method1 19422 19423
3594 do_observation[star5,spectrograph0] -> method1 19439 19442
12 do_observation[planet3,spectrograph0] -> method1 19434 19437
0 __top[] -> __top_method 16762 12 16800 3594 16882
<==
