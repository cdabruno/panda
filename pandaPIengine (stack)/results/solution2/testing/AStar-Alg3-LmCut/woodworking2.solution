Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/woodworking2.sas.
- State has 10 bits divided into 10 mutex groups.
- Domain contains 8 actions.
- Domain contains 12 tasks.
- Domain contains 9 methods.
- The initial state contains 5 set bits.
- The initial task is "__top[]".
- State-based goal contains 2 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 12
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 10
Variable :+colour[p0,red] Domain size: 1
Variable :+treatment[p0,varnished] Domain size: 1
Variable :+colour[p2,natural] Domain size: 1
Variable :+surface_condition[p2,verysmooth] Domain size: 1
Variable :+treatment[p2,varnished] Domain size: 1
Variable :+treatment[p0,untreated] Domain size: 1
Variable :+colour[p0,natural] Domain size: 1
Variable :+surface_condition[p2,smooth] Domain size: 1
Variable :+treatment[p2,untreated] Domain size: 1
Variable :+colour[p2,red] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+colour[p0,red], +treatment[p0,varnished] Mult size: 1
Var pair:+colour[p0,red], +colour[p2,natural] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,varnished] Mult size: 1
Var pair:+colour[p0,red], +treatment[p0,untreated] Mult size: 1
Var pair:+colour[p0,red], +colour[p0,natural] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p0,red], +colour[p2,red] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p2,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,varnished] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p0,untreated] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p0,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p2,smooth] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,untreated] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p2,red] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,varnished] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p0,untreated] Mult size: 1
Var pair:+colour[p2,natural], +colour[p0,natural] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p2,natural], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,varnished] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p0,untreated] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p0,natural] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +surface_condition[p2,smooth] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,untreated] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p0,untreated] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p0,natural] Mult size: 1
Var pair:+treatment[p2,varnished], +surface_condition[p2,smooth] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p2,untreated] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p2,red] Mult size: 1
Var pair:+treatment[p0,untreated], +colour[p0,natural] Mult size: 1
Var pair:+treatment[p0,untreated], +surface_condition[p2,smooth] Mult size: 1
Var pair:+treatment[p0,untreated], +treatment[p2,untreated] Mult size: 1
Var pair:+treatment[p0,untreated], +colour[p2,red] Mult size: 1
Var pair:+colour[p0,natural], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p0,natural], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p2,untreated] Mult size: 1
Var pair:+surface_condition[p2,smooth], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,untreated], +colour[p2,red] Mult size: 1
Number of variables: 10
Num primitive tasks: 8
Num non-primitive tasks: 4
Total tasks: 12
Number of methods: 9
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 6
Search Results
- Search time 0.001 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 2.5e-05 seconds
- Visited list inserts 6
- Visited list pruned 0
- Visited list contains 6
- Visited list hash collisions 0
- Visited list used hash buckets 6
- Generated 21 search nodes
  Calculated heuristic for 17 nodes
  One modifications 4
  Effectless actions 0
- including 4 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 17000 nodes per second
- Final fringe contains 2 nodes
- Status: Solved
- Found solution of length 6
- Total costs of actions: 3
==>
7 do_plane[p0,smooth,red,varnished]
15 do_plane[p2,verysmooth,natural,varnished]
16 do_spray_varnish[p2,spray_varnisher0,red,smooth]
root 0
14 do_colour[p2,red,spray_varnisher0] -> method1 16
6 __top_method_splitted_1[] -> _splitting_method___top_method_splitted_1 14
0 __top[] -> <<__top_method;grindNplane[p2,verysmooth,natural,varnished,smooth,natural,untreated];method7;2;0,1,-1>;grindNplane[p0,smooth,red,varnished,smooth,natural,untreated];method7;1;0,-1,2> 6 7 15
<==
