Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/umtranslog19.sas.
- State has 21 bits divided into 21 mutex groups.
- Domain contains 18 actions.
- Domain contains 20 tasks.
- Domain contains 3 methods.
- The initial state contains 9 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 20
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Stack Search
- Using Stack Algorithm.
Search Results
- Search time 0 seconds
- Visited list time 1e-05 seconds
- Visited list inserts 3
- Visited list pruned 0
- Visited list contains 3
- Visited list hash collisions 0
- Visited list used hash buckets 3
- Generated 34 search nodes
  Calculated heuristic for 4 nodes
  One modifications 28
  Effectless actions 2
- including 28 one modification actions
- including 0 one modification methods
- and       2 progressions of effectless actions
- Generated -2147483648 nodes per second
- Final fringe contains 0 nodes
- Status: Solved
- Found solution of length 32
- Total costs of actions: 30
==>
1 collect_fees[Wasser]
2 connect_hose[Eisenbahnwagen,Wasser]
3 open_valve[Eisenbahnwagen]
4 fill_tank[Eisenbahnwagen,Wasser,HauptbahnhofStuttgart]
5 close_valve[Eisenbahnwagen]
6 disconnect_hose[Eisenbahnwagen,Wasser]
7 attach_train_car[LokomotiveDB,Eisenbahnwagen,HauptbahnhofStuttgart]
8 move_vehicle_no_traincar[LokomotiveDB,HauptbahnhofStuttgart,Stuttgart_Paris_Rail_Route,GareParisNord]
9 detach_train_car[LokomotiveDB,Eisenbahnwagen,GareParisNord]
10 connect_hose[Eisenbahnwagen,Wasser]
11 open_valve[Eisenbahnwagen]
12 empty_tank[Eisenbahnwagen,Wasser,GareParisNord]
13 close_valve[Eisenbahnwagen]
14 disconnect_hose[Eisenbahnwagen,Wasser]
15 go_through_two_tcenters_via_hub_not_hazardous[HauptbahnhofStuttgart,LondonWaterloo,Stuttgart,London,BadenWuerttemberg,LondonRegion,GareParisNord]
17 connect_hose[Eisenbahnwagen,Wasser]
18 open_valve[Eisenbahnwagen]
19 fill_tank[Eisenbahnwagen,Wasser,GareParisNord]
20 close_valve[Eisenbahnwagen]
21 disconnect_hose[Eisenbahnwagen,Wasser]
22 attach_train_car[LokomotiveSNCF,Eisenbahnwagen,GareParisNord]
23 move_vehicle_no_traincar[LokomotiveSNCF,GareParisNord,Paris_London_Rail_Route,LondonWaterloo]
24 detach_train_car[LokomotiveSNCF,Eisenbahnwagen,LondonWaterloo]
25 connect_hose[Eisenbahnwagen,Wasser]
26 open_valve[Eisenbahnwagen]
27 empty_tank[Eisenbahnwagen,Wasser,LondonWaterloo]
28 close_valve[Eisenbahnwagen]
29 disconnect_hose[Eisenbahnwagen,Wasser]
30 go_through_two_tcenters_tt[HauptbahnhofStuttgart,LondonWaterloo,Stuttgart,London]
31 deliver_p[Wasser]
root 0
16 helper_carry_direct[Eisenbahnwagen,Wasser,GareParisNord,LondonWaterloo] -> <<<<<<<method_helper_carry_direct_noMoveFirst;unload_top[Wasser,Eisenbahnwagen,LondonWaterloo];method_unload_top_normal;2;0,1,-1>;unload[Wasser,Eisenbahnwagen,LondonWaterloo];method_unload_tanker;2;0,1,-1,-2,-3,-4,-5>;move[Eisenbahnwagen,GareParisNord,LondonWaterloo];method_move_traincar;1;0,-1,2,3,4,5,6>;helper_move_traincar[Eisenbahnwagen,LokomotiveSNCF,GareParisNord,LondonWaterloo];method_helper_move_traincar_noMoveFirst;1;0,-1,-2,-3,2,3,4,5,6>;move[LokomotiveSNCF,GareParisNord,LondonWaterloo];method_move_no_traincar;2;0,1,-1,3,4,5,6,7,8>;load_top[Wasser,Eisenbahnwagen,GareParisNord];method_load_top_normal;0;-1,1,2,3,4,5,6,7,8>;load[Wasser,Eisenbahnwagen,GareParisNord];method_load_tanker;0;-1,-2,-3,-4,-5,1,2,3,4,5,6,7,8> 17 18 19 20 21 22 23 24 25 26 27 28 29
0 __top[] -> <<<<<<<<<<<<<<__top_method;transport[Wasser,HauptbahnhofStuttgart,LondonWaterloo];method_transport_pi_ca_de;0;-1,-2,-3>;carry[Wasser,HauptbahnhofStuttgart,LondonWaterloo];method_carry_cvh;1;0,-1,2>;helper_carry_tt[Wasser,HauptbahnhofStuttgart,Stuttgart,LondonWaterloo,London];method_helper_carry_cvh;1;0,-1,-2,2>;carry_via_hub[Wasser,HauptbahnhofStuttgart,LondonWaterloo];method_carry_via_hub_not_hazardous;1;0,-1,2,3>;helper_carry_via_hub_not_hazardous[Wasser,HauptbahnhofStuttgart,Stuttgart,BadenWuerttemberg,GareParisNord,LondonWaterloo,London,LondonRegion];method_helper_carry_via_hub_not_hazardous;1;0,-1,-2,-3,2,3>;carry_direct[Wasser,GareParisNord,LondonWaterloo];method_carry_direct;3;0,1,2,-1,4,5>;carry_direct[Wasser,HauptbahnhofStuttgart,GareParisNord];method_carry_direct;1;0,-1,2,3,4,5>;helper_carry_direct[Eisenbahnwagen,Wasser,HauptbahnhofStuttgart,GareParisNord];<<<method_helper_carry_direct_noMoveFirst;move[Eisenbahnwagen,HauptbahnhofStuttgart,GareParisNord];method_move_traincar;1;0,-1,2>;helper_move_traincar[Eisenbahnwagen,LokomotiveDB,HauptbahnhofStuttgart,GareParisNord];method_helper_move_traincar_noMoveFirst;1;0,-1,-2,-3,2>;move[LokomotiveDB,HauptbahnhofStuttgart,GareParisNord];method_move_no_traincar;2;0,1,-1,3,4>;1;0,-1,-2,-3,-4,-5,2,3,4,5>;unload_top[Wasser,Eisenbahnwagen,GareParisNord];method_unload_top_normal;5;0,1,2,3,4,-1,6,7,8,9>;unload[Wasser,Eisenbahnwagen,GareParisNord];method_unload_tanker;5;0,1,2,3,4,-1,-2,-3,-4,-5,6,7,8,9>;load_top[Wasser,Eisenbahnwagen,HauptbahnhofStuttgart];method_load_top_normal;1;0,-1,2,3,4,5,6,7,8,9,10,11,12,13>;load[Wasser,Eisenbahnwagen,HauptbahnhofStuttgart];method_load_tanker;1;0,-1,-2,-3,-4,-5,2,3,4,5,6,7,8,9,10,11,12,13>;deliver[Wasser];method_deliver_dp;17;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,-1>;pickup[Wasser];method_pickup_normal;0;-1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 30 31
<==
