variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: normal

stages:
  - build
  - test
#  - test-valgrind

.restrict: &restrict
  only:
    - master
    - /^.*-ci$/
    - web
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /@skip-ci/

.job-debian:
  image: debian:stretch
  <<: *restrict

.build-debian:
  extends: .job-debian
  stage: build
  before_script:
    - env
    - apt-get update
    - apt-get install -y make $DEBIAN_PKGS
  script:
    - env
    - make help
    - make third-party
    - make help
    - make
    - make -C bin

.check-debian:
  extends: .job-debian
  stage: test
  before_script:
    - env
    - apt-get update
    - apt-get install -y make python $DEBIAN_PKGS
  script:
    - env
    - make help
    - make third-party
    - make help
    - make
    - make check-ci

#.check-valgrind-debian:
#  extends: .job-debian
#  stage: test-valgrind
#  before_script:
#    - env
#    - apt-get update
#    - apt-get install -y make python valgrind $DEBIAN_PKGS
#  script:
#    - env
#    - make help
#    - make third-party
#    - make help
#    - make
#    - make check-valgrind

build-debian-gcc:
  extends: .build-debian
  variables:
    DEBIAN_PKGS: gcc g++ unzip patch
    CC: gcc
    CXX: g++

build-debian-clang:
  extends: .build-debian
  variables:
    DEBIAN_PKGS: clang unzip patch
    CC: clang
    CXX: clang++



check-debian-gcc:
  extends: .check-debian
  variables:
    DEBIAN_PKGS: gcc g++ unzip patch
    CC: gcc
    CXX: g++

check-debian-clang:
  extends: .check-debian
  variables:
    DEBIAN_PKGS: clang unzip patch
    CC: clang
    CXX: clang++



#check-valgrind-debian-gcc:
#  extends: .check-valgrind-debian
#  variables:
#    DEBIAN_PKGS: gcc g++ unzip patch
#    CC: gcc
#    CXX: g++
#
#check-valgrind-debian-clang:
#  extends: .check-valgrind-debian
#  variables:
#    DEBIAN_PKGS: clang unzip patch
#    CC: clang
#    CXX: clang++
