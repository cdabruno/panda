Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite4.sas.
- State has 9 bits divided into 9 mutex groups.
- Domain contains 17 actions.
- Domain contains 24 tasks.
- Domain contains 29 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 24
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 9
Variable :+power_avail[satellite0] Domain size: 1
Variable :+pointing[satellite0,Phenomenon6] Domain size: 1
Variable :+power_on[instrument01] Domain size: 1
Variable :+power_on[instrument02] Domain size: 1
Variable :+pointing[satellite0,GroundStation0] Domain size: 1
Variable :+pointing[satellite0,Phenomenon4] Domain size: 1
Variable :+pointing[satellite0,Star5] Domain size: 1
Variable :+calibrated[instrument01] Domain size: 1
Variable :+calibrated[instrument02] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+power_avail[satellite0], +pointing[satellite0,Phenomenon6] Mult size: 1
Var pair:+power_avail[satellite0], +power_on[instrument01] Mult size: 1
Var pair:+power_avail[satellite0], +power_on[instrument02] Mult size: 1
Var pair:+power_avail[satellite0], +pointing[satellite0,GroundStation0] Mult size: 1
Var pair:+power_avail[satellite0], +pointing[satellite0,Phenomenon4] Mult size: 1
Var pair:+power_avail[satellite0], +pointing[satellite0,Star5] Mult size: 1
Var pair:+power_avail[satellite0], +calibrated[instrument01] Mult size: 1
Var pair:+power_avail[satellite0], +calibrated[instrument02] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon6], +power_on[instrument01] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon6], +power_on[instrument02] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon6], +pointing[satellite0,GroundStation0] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon6], +pointing[satellite0,Phenomenon4] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon6], +pointing[satellite0,Star5] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon6], +calibrated[instrument01] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon6], +calibrated[instrument02] Mult size: 1
Var pair:+power_on[instrument01], +power_on[instrument02] Mult size: 1
Var pair:+power_on[instrument01], +pointing[satellite0,GroundStation0] Mult size: 1
Var pair:+power_on[instrument01], +pointing[satellite0,Phenomenon4] Mult size: 1
Var pair:+power_on[instrument01], +pointing[satellite0,Star5] Mult size: 1
Var pair:+power_on[instrument01], +calibrated[instrument01] Mult size: 1
Var pair:+power_on[instrument01], +calibrated[instrument02] Mult size: 1
Var pair:+power_on[instrument02], +pointing[satellite0,GroundStation0] Mult size: 1
Var pair:+power_on[instrument02], +pointing[satellite0,Phenomenon4] Mult size: 1
Var pair:+power_on[instrument02], +pointing[satellite0,Star5] Mult size: 1
Var pair:+power_on[instrument02], +calibrated[instrument01] Mult size: 1
Var pair:+power_on[instrument02], +calibrated[instrument02] Mult size: 1
Var pair:+pointing[satellite0,GroundStation0], +pointing[satellite0,Phenomenon4] Mult size: 1
Var pair:+pointing[satellite0,GroundStation0], +pointing[satellite0,Star5] Mult size: 1
Var pair:+pointing[satellite0,GroundStation0], +calibrated[instrument01] Mult size: 1
Var pair:+pointing[satellite0,GroundStation0], +calibrated[instrument02] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon4], +pointing[satellite0,Star5] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon4], +calibrated[instrument01] Mult size: 1
Var pair:+pointing[satellite0,Phenomenon4], +calibrated[instrument02] Mult size: 1
Var pair:+pointing[satellite0,Star5], +calibrated[instrument01] Mult size: 1
Var pair:+pointing[satellite0,Star5], +calibrated[instrument02] Mult size: 1
Var pair:+calibrated[instrument01], +calibrated[instrument02] Mult size: 1
Number of variables: 9
Num primitive tasks: 17
Num non-primitive tasks: 7
Total tasks: 24
Number of methods: 29
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 12
Search Results
- Search time 0.002 seconds
- Depth reached: 10.
- Depth reached expanding abstract methods: 7
- Visited list time 0.000277 seconds
- Visited list inserts 79
- Visited list pruned 0
- Visited list contains 79
- Visited list hash collisions 0
- Visited list used hash buckets 79
- Generated 372 search nodes
  Calculated heuristic for 228 nodes
  One modifications 140
  Effectless actions 4
- including 140 one modification actions
- including 0 one modification methods
- and       4 progressions of effectless actions
- Generated 114000 nodes per second
- Final fringe contains 2 nodes
- Status: Solved
- Found solution of length 18
- Total costs of actions: 11
==>
87 switch_on[instrument02,satellite0]
145 turn_to[satellite0,GroundStation0,Phenomenon6]
357 calibrate[satellite0,instrument02,GroundStation0]
359 turn_to[satellite0,Star5,GroundStation0]
360 take_image[satellite0,Star5,instrument02,x_ray]
361 switch_off[instrument02,satellite0]
362 switch_on[instrument01,satellite0]
365 turn_to[satellite0,GroundStation0,Star5]
366 calibrate[satellite0,instrument01,GroundStation0]
367 turn_to[satellite0,Phenomenon4,GroundStation0]
368 take_image[satellite0,Phenomenon4,instrument01,thermograph]
root 0
364 auto_calibrate[satellite0,instrument01] -> method6 365 366
91 auto_calibrate[satellite0,instrument02] -> method6 145 357
86 activate_instrument[satellite0,instrument01] -> method4 361 362 364
50 do_observation[Phenomenon4,thermograph] -> method0 86 367 368
40 activate_instrument[satellite0,instrument02] -> method5 87 91
7 do_observation[Star5,x_ray] -> method0 40 359 360
0 __top[] -> __top_method 50 7
<==
