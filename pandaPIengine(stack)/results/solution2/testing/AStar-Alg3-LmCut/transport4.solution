Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport4.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 47 actions.
- Domain contains 68 tasks.
- Domain contains 63 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 20
Variable :+at[package-0,city-loc-0] Domain size: 1
Variable :+at[package-1,city-loc-1] Domain size: 1
Variable :+at[package-2,city-loc-3] Domain size: 1
Variable :+at[package-3,city-loc-2] Domain size: 1
Variable :+at[truck-0,city-loc-0] Domain size: 1
Variable :+capacity[truck-0,capacity-3] Domain size: 1
Variable :+at[truck-0,city-loc-3] Domain size: 1
Variable :+in[package-0,truck-0] Domain size: 1
Variable :+capacity[truck-0,capacity-2] Domain size: 1
Variable :+at[truck-0,city-loc-2] Domain size: 1
Variable :+in[package-2,truck-0] Domain size: 1
Variable :+capacity[truck-0,capacity-1] Domain size: 1
Variable :+at[package-0,city-loc-3] Domain size: 1
Variable :+at[truck-0,city-loc-1] Domain size: 1
Variable :+in[package-3,truck-0] Domain size: 1
Variable :+capacity[truck-0,capacity-0] Domain size: 1
Variable :+in[package-1,truck-0] Domain size: 1
Variable :+at[package-2,city-loc-1] Domain size: 1
Variable :+at[package-3,city-loc-0] Domain size: 1
Variable :+at[package-1,city-loc-0] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+at[package-0,city-loc-0], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-2,city-loc-3] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-3,city-loc-2] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +capacity[truck-0,capacity-3] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[truck-0,city-loc-3] Mult size: 1
Var pair:+at[package-0,city-loc-0], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-0,city-loc-0], +in[package-2,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-0,city-loc-3] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-0], +in[package-3,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-2,city-loc-3] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-3,city-loc-2] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +capacity[truck-0,capacity-3] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[truck-0,city-loc-3] Mult size: 1
Var pair:+at[package-1,city-loc-1], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-1,city-loc-1], +in[package-2,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-0,city-loc-3] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-1,city-loc-1], +in[package-3,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[package-3,city-loc-2] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +capacity[truck-0,capacity-3] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[truck-0,city-loc-3] Mult size: 1
Var pair:+at[package-2,city-loc-3], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-2,city-loc-3], +in[package-2,truck-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[package-0,city-loc-3] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-2,city-loc-3], +in[package-3,truck-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-3], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +capacity[truck-0,capacity-3] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[truck-0,city-loc-3] Mult size: 1
Var pair:+at[package-3,city-loc-2], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-3,city-loc-2], +in[package-2,truck-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[package-0,city-loc-3] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-3,city-loc-2], +in[package-3,truck-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[package-3,city-loc-2], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-3] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[truck-0,city-loc-3] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-2,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-0,city-loc-3] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-3,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-1,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +at[truck-0,city-loc-3] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +in[package-0,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +in[package-2,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +at[package-0,city-loc-3] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +in[package-3,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +at[package-2,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +at[package-3,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-3], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +in[package-2,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +at[package-0,city-loc-3] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +in[package-3,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-3], +at[package-1,city-loc-0] Mult size: 1
Var pair:+in[package-0,truck-0], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+in[package-0,truck-0], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+in[package-0,truck-0], +in[package-2,truck-0] Mult size: 1
Var pair:+in[package-0,truck-0], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-0,city-loc-3] Mult size: 1
Var pair:+in[package-0,truck-0], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+in[package-0,truck-0], +in[package-3,truck-0] Mult size: 1
Var pair:+in[package-0,truck-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+in[package-0,truck-0], +in[package-1,truck-0] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-2,city-loc-1] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-3,city-loc-0] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-1,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +in[package-2,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[package-0,city-loc-3] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +in[package-3,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[package-2,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[package-3,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-2,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-0,city-loc-3] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-3,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-1,city-loc-0] Mult size: 1
Var pair:+in[package-2,truck-0], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+in[package-2,truck-0], +at[package-0,city-loc-3] Mult size: 1
Var pair:+in[package-2,truck-0], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+in[package-2,truck-0], +in[package-3,truck-0] Mult size: 1
Var pair:+in[package-2,truck-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+in[package-2,truck-0], +in[package-1,truck-0] Mult size: 1
Var pair:+in[package-2,truck-0], +at[package-2,city-loc-1] Mult size: 1
Var pair:+in[package-2,truck-0], +at[package-3,city-loc-0] Mult size: 1
Var pair:+in[package-2,truck-0], +at[package-1,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-0,city-loc-3] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +in[package-3,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-2,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-3,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-3], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-3], +in[package-3,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-3], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-0,city-loc-3], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-3], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-3], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-3], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +in[package-3,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-2,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-1,city-loc-0] Mult size: 1
Var pair:+in[package-3,truck-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+in[package-3,truck-0], +in[package-1,truck-0] Mult size: 1
Var pair:+in[package-3,truck-0], +at[package-2,city-loc-1] Mult size: 1
Var pair:+in[package-3,truck-0], +at[package-3,city-loc-0] Mult size: 1
Var pair:+in[package-3,truck-0], +at[package-1,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-2,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-3,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-1,city-loc-0] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-2,city-loc-1] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-3,city-loc-0] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-1], +at[package-3,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-1], +at[package-1,city-loc-0] Mult size: 1
Var pair:+at[package-3,city-loc-0], +at[package-1,city-loc-0] Mult size: 1
Number of variables: 20
INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bruno/Desktop/downward/builds/release/bin/translate/translate.py '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/domain-downward.pddl' '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/problem-downward.pddl' --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.008s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 300 rules.
Computing model... [0.000s CPU, 0.001s wall-clock]
246 relevant atoms
0 auxiliary atoms
246 final queue length
353 total queue pushes
Completing instantiation... [0.000s CPU, 0.001s wall-clock]
Instantiating: [0.010s CPU, 0.007s wall-clock]
Computing fact groups...
Finding invariants...
88 initial candidates
Finding invariants: [0.330s CPU, 0.337s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
72 uncovered facts
Choosing groups: [0.010s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.340s CPU, 0.338s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.003s wall-clock]
6 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
5 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]
Reordering and filtering variables...
77 of 77 variables necessary.
12 of 17 mutex groups necessary.
109 of 109 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 77
Translator derived variables: 0
Translator facts: 160
Translator goal facts: 1
Translator mutex groups: 12
Translator total mutex groups size: 24
Translator operators: 109
Translator axioms: 0
Translator task size: 769
Translator peak memory: 44096 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.350s CPU, 0.361s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bruno/Desktop/downward/builds/release/bin/downward --search 'astar(lmcut(), max_time=20)' --internal-plan-file sas_plan < output.sas
[t=2.5627e-05s, 9844 KB] reading input...
[t=0.000646776s, 9844 KB] done reading input!
[t=0.00148836s, 10232 KB] Initializing landmark cut heuristic...
[t=0.00154611s, 10232 KB] Building successor generator...done!
[t=0.00166619s, 10232 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0016832s, 10232 KB] time for successor generation creation: 4.1185e-05s
[t=0.00170191s, 10232 KB] Variables: 77
[t=0.00171888s, 10232 KB] FactPairs: 160
[t=0.00173427s, 10232 KB] Bytes per state: 12
[t=0.00179037s, 10232 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00190482s, 10232 KB] New best heuristic value for lmcut: 28
[t=0.00192458s, 10232 KB] g=0, 1 evaluated, 0 expanded
[t=0.00194157s, 10232 KB] f = 28, 1 evaluated, 0 expanded
[t=0.00195998s, 10232 KB] Initial heuristic value for lmcut: 28
[t=0.00197678s, 10232 KB] pruning method: none
[t=0.00205381s, 10232 KB] New best heuristic value for lmcut: 23
[t=0.00207798s, 10232 KB] g=1, 2 evaluated, 1 expanded
[t=0.00251613s, 10232 KB] New best heuristic value for lmcut: 22
[t=0.00253834s, 10232 KB] g=2, 10 evaluated, 2 expanded
[t=0.0045744s, 10232 KB] New best heuristic value for lmcut: 21
[t=0.00460134s, 10232 KB] g=5, 50 evaluated, 13 expanded
[t=0.0091435s, 10232 KB] New best heuristic value for lmcut: 20
[t=0.00918289s, 10232 KB] g=6, 132 evaluated, 31 expanded
[t=0.00969059s, 10232 KB] New best heuristic value for lmcut: 19
[t=0.00973147s, 10232 KB] g=7, 140 evaluated, 32 expanded
[t=0.0274874s, 10232 KB] New best heuristic value for lmcut: 18
[t=0.0275254s, 10232 KB] g=9, 503 evaluated, 114 expanded
[t=0.0451488s, 10232 KB] New best heuristic value for lmcut: 17
[t=0.0451874s, 10232 KB] g=10, 867 evaluated, 190 expanded
[t=0.198926s, 10368 KB] f = 29, 4175 evaluated, 1013 expanded
[t=0.604045s, 10772 KB] f = 30, 12963 evaluated, 3591 expanded
[t=0.605804s, 10772 KB] New best heuristic value for lmcut: 16
[t=0.605857s, 10772 KB] g=14, 12987 evaluated, 3599 expanded
[t=0.613009s, 10772 KB] New best heuristic value for lmcut: 15
[t=0.613083s, 10772 KB] g=14, 13098 evaluated, 3631 expanded
[t=0.614583s, 10772 KB] New best heuristic value for lmcut: 14
[t=0.614631s, 10772 KB] g=16, 13123 evaluated, 3635 expanded
[t=0.615017s, 10772 KB] New best heuristic value for lmcut: 13
[t=0.615058s, 10772 KB] g=17, 13130 evaluated, 3636 expanded
[t=0.686147s, 10772 KB] New best heuristic value for lmcut: 12
[t=0.686224s, 10772 KB] g=18, 14523 evaluated, 4020 expanded
[t=0.68639s, 10772 KB] New best heuristic value for lmcut: 11
[t=0.686412s, 10772 KB] g=19, 14528 evaluated, 4021 expanded
[t=3.39973s, 12380 KB] New best heuristic value for lmcut: 10
[t=3.39984s, 12380 KB] g=19, 52297 evaluated, 14315 expanded
[t=5.17445s, 14496 KB] f = 31, 99052 evaluated, 26370 expanded
[t=5.17534s, 14496 KB] New best heuristic value for lmcut: 9
[t=5.17537s, 14496 KB] g=22, 99078 evaluated, 26380 expanded
[t=5.17557s, 14496 KB] New best heuristic value for lmcut: 8
[t=5.17559s, 14496 KB] g=23, 99086 evaluated, 26381 expanded
[t=5.17574s, 14496 KB] New best heuristic value for lmcut: 7
[t=5.17576s, 14496 KB] g=24, 99093 evaluated, 26382 expanded
[t=5.1759s, 14496 KB] New best heuristic value for lmcut: 6
[t=5.17592s, 14496 KB] g=25, 99101 evaluated, 26383 expanded
[t=5.17604s, 14496 KB] New best heuristic value for lmcut: 5
[t=5.17606s, 14496 KB] g=26, 99109 evaluated, 26384 expanded
[t=5.17617s, 14496 KB] New best heuristic value for lmcut: 4
[t=5.17619s, 14496 KB] g=27, 99117 evaluated, 26385 expanded
[t=5.17628s, 14496 KB] New best heuristic value for lmcut: 3
[t=5.1763s, 14496 KB] g=28, 99124 evaluated, 26386 expanded
[t=5.17637s, 14496 KB] New best heuristic value for lmcut: 2
[t=5.17639s, 14496 KB] g=29, 99130 evaluated, 26387 expanded
[t=5.17645s, 14496 KB] New best heuristic value for lmcut: 1
[t=5.17647s, 14496 KB] g=30, 99135 evaluated, 26388 expanded
[t=5.17651s, 14496 KB] New best heuristic value for lmcut: 0
[t=5.17653s, 14496 KB] g=31, 99140 evaluated, 26389 expanded
[t=5.17655s, 14496 KB] Solution found!
[t=5.17657s, 14496 KB] Actual search time: 5.17459s
pickmup_truckm0_citymlocm0_packagem0_capacitym2_capacitym3_  (1)
drive_truckm0_citymlocm0_citymlocm3_  (1)
drop_truckm0_citymlocm3_packagem0_capacitym2_capacitym3_  (1)
mmload@load_truckm0_citymlocm0_packagem0_  (1)
mmunload@unload_truckm0_citymlocm3_packagem0_  (1)
pickmup_truckm0_citymlocm3_packagem2_capacitym2_capacitym3_  (1)
mmload@load_truckm0_citymlocm3_packagem2_  (1)
mmdrivemto@getmto_truckm0_citymlocm3_  (1)
x_splitting_method_mmdeliver_splitted_1@mmdeliver_splitted_1_truckm0_packagem2_  (1)
drive_truckm0_citymlocm3_citymlocm2_  (1)
drive_truckm0_citymlocm2_citymlocm1_  (1)
drop_truckm0_citymlocm1_packagem2_capacitym2_capacitym3_  (1)
mmunload@unload_truckm0_citymlocm1_packagem2_  (1)
pickmup_truckm0_citymlocm1_packagem1_capacitym2_capacitym3_  (1)
drive_truckm0_citymlocm1_citymlocm2_  (1)
mmload@load_truckm0_citymlocm1_packagem1_  (1)
mmdrivemto@getmto_truckm0_citymlocm2_  (1)
mmdrivemto@getmto_truckm0_citymlocm1_  (1)
x_splitting_method_mmdeliver_splitted_1@mmdeliver_splitted_1_truckm0_packagem1_  (1)
pickmup_truckm0_citymlocm2_packagem3_capacitym1_capacitym2_  (1)
drive_truckm0_citymlocm2_citymlocm3_  (1)
drive_truckm0_citymlocm3_citymlocm0_  (1)
drop_truckm0_citymlocm0_packagem1_capacitym1_capacitym2_  (1)
drop_truckm0_citymlocm0_packagem3_capacitym2_capacitym3_  (1)
mmload@load_truckm0_citymlocm2_packagem3_  (1)
x_splitting_method_mmdeliver_splitted_1@mmdeliver_splitted_1_truckm0_packagem3_  (1)
mmunload@unload_truckm0_citymlocm0_packagem3_  (1)
mmunload@unload_truckm0_citymlocm0_packagem1_  (1)
mmdrivemto@getmto_truckm0_citymlocm0_  (1)
x_splitting_method_mmdeliver_splitted_1@mmdeliver_splitted_1_truckm0_packagem0_  (1)
x______top_method_deliver_packagem3_citymlocm0__mmdeliver_3_0_1_2_m1_m2_m3__deliver_packagem2_citymlocm1__mmdeliver_2_0_1_m1_m2_m3_3_4_5__deliver_packagem1_citymlocm0__mmdeliver_1_0_m1_m2_m3_2_3_4_5_6_7__deliver_packagem0_citymlocm3__mmdeliver_0_m1_m2_m3_1_2_3_4_5_6_7_8_9_@__top__  (1)
[t=5.1766s, 14496 KB] Plan length: 31 step(s).
[t=5.1766s, 14496 KB] Plan cost: 31
[t=5.1766s, 14496 KB] Expanded 26390 state(s).
[t=5.1766s, 14496 KB] Reopened 0 state(s).
[t=5.1766s, 14496 KB] Evaluated 99140 state(s).
[t=5.1766s, 14496 KB] Evaluations: 99140
[t=5.1766s, 14496 KB] Generated 349992 state(s).
[t=5.1766s, 14496 KB] Dead ends: 0 state(s).
[t=5.1766s, 14496 KB] Expanded until last jump: 26370 state(s).
[t=5.1766s, 14496 KB] Reopened until last jump: 0 state(s).
[t=5.1766s, 14496 KB] Evaluated until last jump: 99052 state(s).
[t=5.1766s, 14496 KB] Generated until last jump: 349547 state(s).
[t=5.1766s, 14496 KB] Number of registered states: 99140
[t=5.1766s, 14496 KB] Int hash set load factor: 99140/131072 = 0.756378
[t=5.1766s, 14496 KB] Int hash set resizes: 17
[t=5.1766s, 14496 KB] Search time: 5.1748s
[t=5.1766s, 14496 KB] Total time: 5.1766s
Solution found.
Peak memory: 14496 KB
Remove intermediate file output.sas
search exit code: 0

Cost of SAS plan on RC model: 31
Cost SAS: 0
Num primitive tasks: 47
Num non-primitive tasks: 21
Total tasks: 68
Number of methods: 63
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 28
   6s visitime    0.00s generated nodes      5011 nodes/sec     828 cur h   30 mod.depth    6 inserts       651 dups       301 size       350 hash fail    301 hash buckets    350
   7s visitime    0.02s generated nodes     15034 nodes/sec    2121 cur h   29 mod.depth    9 inserts      2099 dups      1086 size      1013 hash fail   1086 hash buckets   1013
   8s visitime    0.03s generated nodes     30065 nodes/sec    3636 cur h   31 mod.depth    8 inserts      4109 dups      2132 size      1977 hash fail   2132 hash buckets   1977
   9s visitime    0.04s generated nodes     50107 nodes/sec    5401 cur h   31 mod.depth    9 inserts      6860 dups      3587 size      3273 hash fail   3587 hash buckets   3273
  10s visitime    0.07s generated nodes     70132 nodes/sec    6754 cur h   31 mod.depth   10 inserts     10702 dups      6162 size      4540 hash fail   6163 hash buckets   4539
  11s visitime    0.08s generated nodes     85167 nodes/sec    7165 cur h   31 mod.depth   10 inserts     11807 dups      6336 size      5471 hash fail   6337 hash buckets   5470
  12s visitime    0.09s generated nodes    100213 nodes/sec    7758 cur h   31 mod.depth   10 inserts     13402 dups      6973 size      6429 hash fail   6974 hash buckets   6428
  13s visitime    0.11s generated nodes    120240 nodes/sec    8618 cur h   32 mod.depth   10 inserts     18426 dups     10676 size      7750 hash fail  10678 hash buckets   7748
  15s visitime    0.12s generated nodes    140279 nodes/sec    9275 cur h   32 mod.depth   10 inserts     19836 dups     10885 size      8951 hash fail  10887 hash buckets   8949
  16s visitime    0.13s generated nodes    155306 nodes/sec    9363 cur h   33 mod.depth    9 inserts     21161 dups     11300 size      9861 hash fail  11303 hash buckets   9858
  17s visitime    0.15s generated nodes    175348 nodes/sec    9885 cur h   32 mod.depth   10 inserts     24022 dups     12922 size     11100 hash fail  12927 hash buckets  11095
  18s visitime    0.18s generated nodes    195381 nodes/sec   10415 cur h   34 mod.depth    9 inserts     29922 dups     17544 size     12378 hash fail  17549 hash buckets  12373
  19s visitime    0.18s generated nodes    210417 nodes/sec   10620 cur h   32 mod.depth   11 inserts     30921 dups     17626 size     13295 hash fail  17632 hash buckets  13289
  20s visitime    0.19s generated nodes    220444 nodes/sec   10589 cur h   33 mod.depth   10 inserts     31640 dups     17736 size     13904 hash fail  17742 hash buckets  13898
Reached time limit - stopping search.
Search Results
- Search time 21.31 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 0.20 seconds
- Visited list inserts 32008
- Visited list pruned 17806
- Visited list contains 14202
- Visited list hash collisions 17812
- Visited list used hash buckets 14196
- Generated 225453 search nodes
  Calculated heuristic for 218220 nodes
  One modifications 0
  Effectless actions 7233
- including 0 one modification actions
- including 0 one modification methods
- and       7233 progressions of effectless actions
- Generated 10240 nodes per second
- Final fringe contains 59262 nodes
- Status: Timeout
