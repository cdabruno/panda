Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport1.sas.
- State has 11 bits divided into 11 mutex groups.
- Domain contains 13 actions.
- Domain contains 19 tasks.
- Domain contains 16 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 17
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 11
Variable :+at[package-0,city-loc-1] Domain size: 1
Variable :+at[package-1,city-loc-1] Domain size: 1
Variable :+at[truck-0,city-loc-2] Domain size: 1
Variable :+capacity[truck-0,capacity-1] Domain size: 1
Variable :+at[truck-0,city-loc-1] Domain size: 1
Variable :+at[truck-0,city-loc-0] Domain size: 1
Variable :+in[package-0,truck-0] Domain size: 1
Variable :+capacity[truck-0,capacity-0] Domain size: 1
Variable :+in[package-1,truck-0] Domain size: 1
Variable :+at[package-0,city-loc-0] Domain size: 1
Variable :+at[package-1,city-loc-2] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+at[package-0,city-loc-1], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-0,city-loc-1], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[package-1,city-loc-2] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-1,city-loc-1], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-1,city-loc-2] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-1,city-loc-2] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +in[package-0,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-0,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-1,city-loc-2] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-1,city-loc-2] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-1,city-loc-2] Mult size: 1
Var pair:+in[package-0,truck-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+in[package-0,truck-0], +in[package-1,truck-0] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-1,city-loc-2] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-1,city-loc-2] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-1,city-loc-2] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-1,city-loc-2] Mult size: 1
Number of variables: 11
Num primitive tasks: 13
Num non-primitive tasks: 6
Total tasks: 19
Number of methods: 16
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 12
Search Results
- Search time 0.005 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 0.000193 seconds
- Visited list inserts 46
- Visited list pruned 9
- Visited list contains 37
- Visited list hash collisions 9
- Visited list used hash buckets 37
- Generated 171 search nodes
  Calculated heuristic for 141 nodes
  One modifications 24
  Effectless actions 6
- including 24 one modification actions
- including 0 one modification methods
- and       6 progressions of effectless actions
- Generated 28200 nodes per second
- Final fringe contains 59 nodes
- Avg. ramification degree with depth 0: 1
- Avg. ramification degree with depth 1: 3
- Avg. ramification degree with depth 2: 14
- Avg. ramification degree with depth 3: 42.8571
- Avg. ramification degree with depth 4: 55.8571
- Avg. ramification degree with depth 5: 66.4
- Avg. ramification degree with depth 6: 75.2857
- Avg. ramification degree with depth 7: 71.5
- Avg. ramification degree with depth 8: 54
- Avg. ramification degree with depth 9: 100
- Avg. abstract ramification degree with depth 0: 1
- Avg. abstract ramification degree with depth 1: 3
- Avg. abstract ramification degree with depth 2: 13
- Avg. abstract ramification degree with depth 3: 36
- Avg. abstract ramification degree with depth 4: 47.2857
- Avg. abstract ramification degree with depth 5: 57
- Avg. abstract ramification degree with depth 6: 64.5714
- Avg. abstract ramification degree with depth 7: 61
- Avg. abstract ramification degree with depth 8: 44
- Avg. abstract ramification degree with depth 9: 86
- Avg. primitive ramification degree with depth 0: 0
- Avg. primitive ramification degree with depth 1: 0
- Avg. primitive ramification degree with depth 2: 1
- Avg. primitive ramification degree with depth 3: 6.85714
- Avg. primitive ramification degree with depth 4: 8.57143
- Avg. primitive ramification degree with depth 5: 9.4
- Avg. primitive ramification degree with depth 6: 10.7143
- Avg. primitive ramification degree with depth 7: 10.5
- Avg. primitive ramification degree with depth 8: 10
- Avg. primitive ramification degree with depth 9: 14
RAMIFICATION TOTAL 2.81081- Status: Solved
- Found solution of length 15
- Total costs of actions: 8
==>
57 drive[truck-0,city-loc-2,city-loc-1]
58 pick-up[truck-0,city-loc-1,package-0,capacity-0,capacity-1]
137 drive[truck-0,city-loc-1,city-loc-0]
141 drop[truck-0,city-loc-0,package-0,capacity-0,capacity-1]
142 drive[truck-0,city-loc-0,city-loc-1]
143 pick-up[truck-0,city-loc-1,package-1,capacity-0,capacity-1]
166 drive[truck-0,city-loc-1,city-loc-2]
167 drop[truck-0,city-loc-2,package-1,capacity-0,capacity-1]
root 0
165 get-to[truck-0,city-loc-2] -> m-drive-to 166
136 get-to[truck-0,city-loc-0] -> m-drive-to 137
56 get-to[truck-0,city-loc-1] -> m-drive-to 142
13 m-deliver_splitted_1[truck-0,package-1] -> <_splitting_method_m-deliver_splitted_1;load[truck-0,city-loc-1,package-1];m-load;1;0,-1> 56 143
7 get-to[truck-0,city-loc-1] -> m-drive-to 57
1 m-deliver_splitted_1[truck-0,package-0] -> <_splitting_method_m-deliver_splitted_1;load[truck-0,city-loc-1,package-0];m-load;1;0,-1> 7 58
0 __top[] -> <<<<__top_method;deliver[package-1,city-loc-2];m-deliver;1;0,-1,-2,-3>;unload[truck-0,city-loc-2,package-1];m-unload;3;0,1,2,-1>;deliver[package-0,city-loc-0];m-deliver;0;-1,-2,-3,1,2,3>;unload[truck-0,city-loc-0,package-0];m-unload;2;0,1,-1,3,4,5> 1 136 141 13 165 167
<==
