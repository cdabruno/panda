Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/umtranslog7.sas.
- State has 11 bits divided into 11 mutex groups.
- Domain contains 7 actions.
- Domain contains 8 tasks.
- Domain contains 1 methods.
- The initial state contains 5 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 8
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 11
Variable :+At_Vehicle[Pferd,O27] Domain size: 1
Variable :+Empty[CraneO27] Domain size: 1
Variable :+Empty[CraneO28] Domain size: 1
Variable :+At_Package[Holz,O27] Domain size: 1
Variable :-Fees_Collected[Holz] Domain size: 1
Variable :+At_Vehicle[Pferd,O28] Domain size: 1
Variable :+At_Package[Holz,CraneO27] Domain size: 1
Variable :+Fees_Collected[Holz] Domain size: 1
Variable :+At_Package[Holz,Pferd] Domain size: 1
Variable :+Delivered[Holz] Domain size: 1
Variable :+At_Package[Holz,CraneO28] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+At_Vehicle[Pferd,O27], +Empty[CraneO27] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +Empty[CraneO28] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +At_Package[Holz,O27] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], -Fees_Collected[Holz] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +At_Vehicle[Pferd,O28] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +At_Package[Holz,CraneO27] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +Fees_Collected[Holz] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +At_Package[Holz,Pferd] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +Delivered[Holz] Mult size: 1
Var pair:+At_Vehicle[Pferd,O27], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+Empty[CraneO27], +Empty[CraneO28] Mult size: 1
Var pair:+Empty[CraneO27], +At_Package[Holz,O27] Mult size: 1
Var pair:+Empty[CraneO27], -Fees_Collected[Holz] Mult size: 1
Var pair:+Empty[CraneO27], +At_Vehicle[Pferd,O28] Mult size: 1
Var pair:+Empty[CraneO27], +At_Package[Holz,CraneO27] Mult size: 1
Var pair:+Empty[CraneO27], +Fees_Collected[Holz] Mult size: 1
Var pair:+Empty[CraneO27], +At_Package[Holz,Pferd] Mult size: 1
Var pair:+Empty[CraneO27], +Delivered[Holz] Mult size: 1
Var pair:+Empty[CraneO27], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+Empty[CraneO28], +At_Package[Holz,O27] Mult size: 1
Var pair:+Empty[CraneO28], -Fees_Collected[Holz] Mult size: 1
Var pair:+Empty[CraneO28], +At_Vehicle[Pferd,O28] Mult size: 1
Var pair:+Empty[CraneO28], +At_Package[Holz,CraneO27] Mult size: 1
Var pair:+Empty[CraneO28], +Fees_Collected[Holz] Mult size: 1
Var pair:+Empty[CraneO28], +At_Package[Holz,Pferd] Mult size: 1
Var pair:+Empty[CraneO28], +Delivered[Holz] Mult size: 1
Var pair:+Empty[CraneO28], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+At_Package[Holz,O27], -Fees_Collected[Holz] Mult size: 1
Var pair:+At_Package[Holz,O27], +At_Vehicle[Pferd,O28] Mult size: 1
Var pair:+At_Package[Holz,O27], +At_Package[Holz,CraneO27] Mult size: 1
Var pair:+At_Package[Holz,O27], +Fees_Collected[Holz] Mult size: 1
Var pair:+At_Package[Holz,O27], +At_Package[Holz,Pferd] Mult size: 1
Var pair:+At_Package[Holz,O27], +Delivered[Holz] Mult size: 1
Var pair:+At_Package[Holz,O27], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:-Fees_Collected[Holz], +At_Vehicle[Pferd,O28] Mult size: 1
Var pair:-Fees_Collected[Holz], +At_Package[Holz,CraneO27] Mult size: 1
Var pair:-Fees_Collected[Holz], +Fees_Collected[Holz] Mult size: 1
Var pair:-Fees_Collected[Holz], +At_Package[Holz,Pferd] Mult size: 1
Var pair:-Fees_Collected[Holz], +Delivered[Holz] Mult size: 1
Var pair:-Fees_Collected[Holz], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+At_Vehicle[Pferd,O28], +At_Package[Holz,CraneO27] Mult size: 1
Var pair:+At_Vehicle[Pferd,O28], +Fees_Collected[Holz] Mult size: 1
Var pair:+At_Vehicle[Pferd,O28], +At_Package[Holz,Pferd] Mult size: 1
Var pair:+At_Vehicle[Pferd,O28], +Delivered[Holz] Mult size: 1
Var pair:+At_Vehicle[Pferd,O28], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+At_Package[Holz,CraneO27], +Fees_Collected[Holz] Mult size: 1
Var pair:+At_Package[Holz,CraneO27], +At_Package[Holz,Pferd] Mult size: 1
Var pair:+At_Package[Holz,CraneO27], +Delivered[Holz] Mult size: 1
Var pair:+At_Package[Holz,CraneO27], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+Fees_Collected[Holz], +At_Package[Holz,Pferd] Mult size: 1
Var pair:+Fees_Collected[Holz], +Delivered[Holz] Mult size: 1
Var pair:+Fees_Collected[Holz], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+At_Package[Holz,Pferd], +Delivered[Holz] Mult size: 1
Var pair:+At_Package[Holz,Pferd], +At_Package[Holz,CraneO28] Mult size: 1
Var pair:+Delivered[Holz], +At_Package[Holz,CraneO28] Mult size: 1
Number of variables: 11
INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bruno/Desktop/downward/builds/release/bin/translate/translate.py '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/domain-downward.pddl' '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/problem-downward.pddl' --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 26 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
35 relevant atoms
0 auxiliary atoms
35 final queue length
38 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.002s wall-clock]
Computing fact groups...
Finding invariants...
19 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
10 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
2 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
6 of 12 mutex groups necessary.
8 of 8 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 29
Translator goal facts: 2
Translator mutex groups: 6
Translator total mutex groups size: 15
Translator operators: 8
Translator axioms: 0
Translator task size: 104
Translator peak memory: 39752 KB
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.011s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bruno/Desktop/downward/builds/release/bin/downward --search 'astar(lmcut(), max_time=20)' --internal-plan-file sas_plan < output.sas
[t=2.77e-05s, 9844 KB] reading input...
[t=0.000264147s, 9844 KB] done reading input!
[t=0.00123171s, 10100 KB] Initializing landmark cut heuristic...
[t=0.00130376s, 10100 KB] Building successor generator...done!
[t=0.00138109s, 10100 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00140125s, 10100 KB] time for successor generation creation: 1.0927e-05s
[t=0.00142375s, 10100 KB] Variables: 13
[t=0.0014441s, 10100 KB] FactPairs: 29
[t=0.00146349s, 10100 KB] Bytes per state: 4
[t=0.00153166s, 10100 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00159404s, 10100 KB] New best heuristic value for lmcut: 8
[t=0.00161697s, 10100 KB] g=0, 1 evaluated, 0 expanded
[t=0.00163753s, 10100 KB] f = 8, 1 evaluated, 0 expanded
[t=0.00165975s, 10100 KB] Initial heuristic value for lmcut: 8
[t=0.00167996s, 10100 KB] pruning method: none
[t=0.00171739s, 10100 KB] New best heuristic value for lmcut: 7
[t=0.0017396s, 10100 KB] g=1, 3 evaluated, 1 expanded
[t=0.00179542s, 10100 KB] New best heuristic value for lmcut: 6
[t=0.00183006s, 10100 KB] g=2, 6 evaluated, 2 expanded
[t=0.0018909s, 10100 KB] New best heuristic value for lmcut: 5
[t=0.00192443s, 10100 KB] g=3, 10 evaluated, 3 expanded
[t=0.00196528s, 10100 KB] New best heuristic value for lmcut: 4
[t=0.00198805s, 10100 KB] g=4, 12 evaluated, 4 expanded
[t=0.00201948s, 10100 KB] New best heuristic value for lmcut: 3
[t=0.00204089s, 10100 KB] g=5, 14 evaluated, 5 expanded
[t=0.00207174s, 10100 KB] New best heuristic value for lmcut: 2
[t=0.0020929s, 10100 KB] g=6, 16 evaluated, 6 expanded
[t=0.00212586s, 10100 KB] New best heuristic value for lmcut: 1
[t=0.00214686s, 10100 KB] g=7, 19 evaluated, 7 expanded
[t=0.00217359s, 10100 KB] New best heuristic value for lmcut: 0
[t=0.00219488s, 10100 KB] g=8, 21 evaluated, 8 expanded
[t=0.00221617s, 10100 KB] Solution found!
[t=0.00223774s, 10100 KB] Actual search time: 0.000552828s
collect_fees_holz_  (1)
deliver_p_holz_  (1)
pick_up_package_ground_holz_craneo27_o27_  (1)
put_down_package_vehicle_holz_craneo27_pferd_o27_  (1)
move_vehicle_no_traincar_pferd_o27_james_franck_ring_o28_  (1)
pick_up_package_vehicle_holz_craneo28_pferd_o28_  (1)
put_down_package_ground_holz_craneo28_o28_  (1)
x_____________top_method_transport_holz_o27_o28__method_transport_pi_ca_de_0_m1_m2_m3__carry_holz_o27_o28__method_carry_cd_1_0_m1_2__carry_direct_holz_o27_o28__method_carry_direct_1_0_m1_2__helper_carry_direct_pferd_holz_o27_o28__method_helper_carry_direct_nomovefirst_1_0_m1_m2_m3_2__unload_top_holz_pferd_o28__method_unload_top_normal_3_0_1_2_m1_4__unload_holz_pferd_o28__method_unload_flatbed_3_0_1_2_m1_m2_4__move_pferd_o27_o28__method_move_no_traincar_2_0_1_m1_3_4_5__load_top_holz_pferd_o27__method_load_top_normal_1_0_m1_2_3_4_5__load_holz_pferd_o27__method_load_flatbed_1_0_m1_m2_2_3_4_5__deliver_holz__method_deliver_dp_6_0_1_2_3_4_5_m1__pickup_holz__method_pickup_normal_0_m1_1_2_3_4_5_6_@__top__  (1)
[t=0.00225907s, 10100 KB] Plan length: 8 step(s).
[t=0.00225907s, 10100 KB] Plan cost: 8
[t=0.00225907s, 10100 KB] Expanded 9 state(s).
[t=0.00225907s, 10100 KB] Reopened 0 state(s).
[t=0.00225907s, 10100 KB] Evaluated 21 state(s).
[t=0.00225907s, 10100 KB] Evaluations: 21
[t=0.00225907s, 10100 KB] Generated 20 state(s).
[t=0.00225907s, 10100 KB] Dead ends: 4 state(s).
[t=0.00225907s, 10100 KB] Expanded until last jump: 0 state(s).
[t=0.00225907s, 10100 KB] Reopened until last jump: 0 state(s).
[t=0.00225907s, 10100 KB] Evaluated until last jump: 1 state(s).
[t=0.00225907s, 10100 KB] Generated until last jump: 0 state(s).
[t=0.00225907s, 10100 KB] Number of registered states: 21
[t=0.00225907s, 10100 KB] Int hash set load factor: 21/32 = 0.65625
[t=0.00225907s, 10100 KB] Int hash set resizes: 5
[t=0.00225907s, 10100 KB] Search time: 0.000727978s
[t=0.00225907s, 10100 KB] Total time: 0.00225907s
Solution found.
Peak memory: 10100 KB
Remove intermediate file output.sas
search exit code: 0

Cost of SAS plan on RC model: 8
Cost SAS: 0
Num primitive tasks: 7
Num non-primitive tasks: 1
Total tasks: 8
Number of methods: 1
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 8
Search Results
- Search time 0.109 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 7e-06 seconds
- Visited list inserts 2
- Visited list pruned 0
- Visited list contains 2
- Visited list hash collisions 0
- Visited list used hash buckets 2
- Generated 9 search nodes
  Calculated heuristic for 2 nodes
  One modifications 7
  Effectless actions 0
- including 7 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 18 nodes per second
- Final fringe contains 0 nodes
- Status: Solved
- Found solution of length 8
- Total costs of actions: 7
==>
1 collect_fees[Holz]
2 pick_up_package_ground[Holz,CraneO27,O27]
3 put_down_package_vehicle[Holz,CraneO27,Pferd,O27]
4 move_vehicle_no_traincar[Pferd,O27,James_Franck_Ring,O28]
5 pick_up_package_vehicle[Holz,CraneO28,Pferd,O28]
6 put_down_package_ground[Holz,CraneO28,O28]
7 deliver_p[Holz]
root 0
0 __top[] -> <<<<<<<<<<<__top_method;transport[Holz,O27,O28];method_transport_pi_ca_de;0;-1,-2,-3>;carry[Holz,O27,O28];method_carry_cd;1;0,-1,2>;carry_direct[Holz,O27,O28];method_carry_direct;1;0,-1,2>;helper_carry_direct[Pferd,Holz,O27,O28];method_helper_carry_direct_noMoveFirst;1;0,-1,-2,-3,2>;unload_top[Holz,Pferd,O28];method_unload_top_normal;3;0,1,2,-1,4>;unload[Holz,Pferd,O28];method_unload_flatbed;3;0,1,2,-1,-2,4>;move[Pferd,O27,O28];method_move_no_traincar;2;0,1,-1,3,4,5>;load_top[Holz,Pferd,O27];method_load_top_normal;1;0,-1,2,3,4,5>;load[Holz,Pferd,O27];method_load_flatbed;1;0,-1,-2,2,3,4,5>;deliver[Holz];method_deliver_dp;6;0,1,2,3,4,5,-1>;pickup[Holz];method_pickup_normal;0;-1,1,2,3,4,5,6> 1 2 3 4 5 6 7
<==
