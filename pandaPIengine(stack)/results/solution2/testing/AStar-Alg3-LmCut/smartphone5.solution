Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/smartphone5.sas.
- State has 23 bits divided into 23 mutex groups.
- Domain contains 21 actions.
- Domain contains 26 tasks.
- Domain contains 12 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 26
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 23
Variable :+inMode_Home[] Domain size: 1
Variable :-entered_AnyNumber[] Domain size: 1
Variable :-haveSent[call1] Domain size: 1
Variable :-haveSent[email1] Domain size: 1
Variable :-haveSent[sms1] Domain size: 1
Variable :-inMode_EMail_Inbox[] Domain size: 1
Variable :-inMode_EMail_NewEMail[] Domain size: 1
Variable :-inMode_NewMessage[] Domain size: 1
Variable :+inMode_Telephone[] Domain size: 1
Variable :+inMode_Messages[] Domain size: 1
Variable :+inMode_EMail[] Domain size: 1
Variable :+attached[call1,dateForMeeting] Domain size: 1
Variable :+attached[email1,dateForMeeting] Domain size: 1
Variable :+attached[sms1,dateForMeeting] Domain size: 1
Variable :+entered_NumberOffice[Biundo] Domain size: 1
Variable :+entered_AnyNumber[] Domain size: 1
Variable :+inMode_NewMessage[] Domain size: 1
Variable :+inMode_EMail_NewEMail[] Domain size: 1
Variable :+hasReceived[Biundo,call1] Domain size: 1
Variable :+hasReceived[Biundo,sms1] Domain size: 1
Variable :+entered_EMail[Biundo] Domain size: 1
Variable :+hasInformation_Regular[Biundo,dateForMeeting] Domain size: 1
Variable :+hasReceived[Biundo,email1] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+inMode_Home[], -entered_AnyNumber[] Mult size: 1
Var pair:+inMode_Home[], -haveSent[call1] Mult size: 1
Var pair:+inMode_Home[], -haveSent[email1] Mult size: 1
Var pair:+inMode_Home[], -haveSent[sms1] Mult size: 1
Var pair:+inMode_Home[], -inMode_EMail_Inbox[] Mult size: 1
Var pair:+inMode_Home[], -inMode_EMail_NewEMail[] Mult size: 1
Var pair:+inMode_Home[], -inMode_NewMessage[] Mult size: 1
Var pair:+inMode_Home[], +inMode_Telephone[] Mult size: 1
Var pair:+inMode_Home[], +inMode_Messages[] Mult size: 1
Var pair:+inMode_Home[], +inMode_EMail[] Mult size: 1
Var pair:+inMode_Home[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:+inMode_Home[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:+inMode_Home[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:+inMode_Home[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:+inMode_Home[], +entered_AnyNumber[] Mult size: 1
Var pair:+inMode_Home[], +inMode_NewMessage[] Mult size: 1
Var pair:+inMode_Home[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+inMode_Home[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+inMode_Home[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+inMode_Home[], +entered_EMail[Biundo] Mult size: 1
Var pair:+inMode_Home[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+inMode_Home[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:-entered_AnyNumber[], -haveSent[call1] Mult size: 1
Var pair:-entered_AnyNumber[], -haveSent[email1] Mult size: 1
Var pair:-entered_AnyNumber[], -haveSent[sms1] Mult size: 1
Var pair:-entered_AnyNumber[], -inMode_EMail_Inbox[] Mult size: 1
Var pair:-entered_AnyNumber[], -inMode_EMail_NewEMail[] Mult size: 1
Var pair:-entered_AnyNumber[], -inMode_NewMessage[] Mult size: 1
Var pair:-entered_AnyNumber[], +inMode_Telephone[] Mult size: 1
Var pair:-entered_AnyNumber[], +inMode_Messages[] Mult size: 1
Var pair:-entered_AnyNumber[], +inMode_EMail[] Mult size: 1
Var pair:-entered_AnyNumber[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:-entered_AnyNumber[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:-entered_AnyNumber[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:-entered_AnyNumber[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:-entered_AnyNumber[], +entered_AnyNumber[] Mult size: 1
Var pair:-entered_AnyNumber[], +inMode_NewMessage[] Mult size: 1
Var pair:-entered_AnyNumber[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:-entered_AnyNumber[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:-entered_AnyNumber[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:-entered_AnyNumber[], +entered_EMail[Biundo] Mult size: 1
Var pair:-entered_AnyNumber[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:-entered_AnyNumber[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:-haveSent[call1], -haveSent[email1] Mult size: 1
Var pair:-haveSent[call1], -haveSent[sms1] Mult size: 1
Var pair:-haveSent[call1], -inMode_EMail_Inbox[] Mult size: 1
Var pair:-haveSent[call1], -inMode_EMail_NewEMail[] Mult size: 1
Var pair:-haveSent[call1], -inMode_NewMessage[] Mult size: 1
Var pair:-haveSent[call1], +inMode_Telephone[] Mult size: 1
Var pair:-haveSent[call1], +inMode_Messages[] Mult size: 1
Var pair:-haveSent[call1], +inMode_EMail[] Mult size: 1
Var pair:-haveSent[call1], +attached[call1,dateForMeeting] Mult size: 1
Var pair:-haveSent[call1], +attached[email1,dateForMeeting] Mult size: 1
Var pair:-haveSent[call1], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:-haveSent[call1], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:-haveSent[call1], +entered_AnyNumber[] Mult size: 1
Var pair:-haveSent[call1], +inMode_NewMessage[] Mult size: 1
Var pair:-haveSent[call1], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:-haveSent[call1], +hasReceived[Biundo,call1] Mult size: 1
Var pair:-haveSent[call1], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:-haveSent[call1], +entered_EMail[Biundo] Mult size: 1
Var pair:-haveSent[call1], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:-haveSent[call1], +hasReceived[Biundo,email1] Mult size: 1
Var pair:-haveSent[email1], -haveSent[sms1] Mult size: 1
Var pair:-haveSent[email1], -inMode_EMail_Inbox[] Mult size: 1
Var pair:-haveSent[email1], -inMode_EMail_NewEMail[] Mult size: 1
Var pair:-haveSent[email1], -inMode_NewMessage[] Mult size: 1
Var pair:-haveSent[email1], +inMode_Telephone[] Mult size: 1
Var pair:-haveSent[email1], +inMode_Messages[] Mult size: 1
Var pair:-haveSent[email1], +inMode_EMail[] Mult size: 1
Var pair:-haveSent[email1], +attached[call1,dateForMeeting] Mult size: 1
Var pair:-haveSent[email1], +attached[email1,dateForMeeting] Mult size: 1
Var pair:-haveSent[email1], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:-haveSent[email1], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:-haveSent[email1], +entered_AnyNumber[] Mult size: 1
Var pair:-haveSent[email1], +inMode_NewMessage[] Mult size: 1
Var pair:-haveSent[email1], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:-haveSent[email1], +hasReceived[Biundo,call1] Mult size: 1
Var pair:-haveSent[email1], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:-haveSent[email1], +entered_EMail[Biundo] Mult size: 1
Var pair:-haveSent[email1], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:-haveSent[email1], +hasReceived[Biundo,email1] Mult size: 1
Var pair:-haveSent[sms1], -inMode_EMail_Inbox[] Mult size: 1
Var pair:-haveSent[sms1], -inMode_EMail_NewEMail[] Mult size: 1
Var pair:-haveSent[sms1], -inMode_NewMessage[] Mult size: 1
Var pair:-haveSent[sms1], +inMode_Telephone[] Mult size: 1
Var pair:-haveSent[sms1], +inMode_Messages[] Mult size: 1
Var pair:-haveSent[sms1], +inMode_EMail[] Mult size: 1
Var pair:-haveSent[sms1], +attached[call1,dateForMeeting] Mult size: 1
Var pair:-haveSent[sms1], +attached[email1,dateForMeeting] Mult size: 1
Var pair:-haveSent[sms1], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:-haveSent[sms1], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:-haveSent[sms1], +entered_AnyNumber[] Mult size: 1
Var pair:-haveSent[sms1], +inMode_NewMessage[] Mult size: 1
Var pair:-haveSent[sms1], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:-haveSent[sms1], +hasReceived[Biundo,call1] Mult size: 1
Var pair:-haveSent[sms1], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:-haveSent[sms1], +entered_EMail[Biundo] Mult size: 1
Var pair:-haveSent[sms1], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:-haveSent[sms1], +hasReceived[Biundo,email1] Mult size: 1
Var pair:-inMode_EMail_Inbox[], -inMode_EMail_NewEMail[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], -inMode_NewMessage[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +inMode_Telephone[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +inMode_Messages[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +inMode_EMail[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +entered_AnyNumber[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +inMode_NewMessage[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +entered_EMail[Biundo] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_Inbox[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], -inMode_NewMessage[] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +inMode_Telephone[] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +inMode_Messages[] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +inMode_EMail[] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +entered_AnyNumber[] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +inMode_NewMessage[] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +entered_EMail[Biundo] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:-inMode_EMail_NewEMail[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:-inMode_NewMessage[], +inMode_Telephone[] Mult size: 1
Var pair:-inMode_NewMessage[], +inMode_Messages[] Mult size: 1
Var pair:-inMode_NewMessage[], +inMode_EMail[] Mult size: 1
Var pair:-inMode_NewMessage[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:-inMode_NewMessage[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:-inMode_NewMessage[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:-inMode_NewMessage[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:-inMode_NewMessage[], +entered_AnyNumber[] Mult size: 1
Var pair:-inMode_NewMessage[], +inMode_NewMessage[] Mult size: 1
Var pair:-inMode_NewMessage[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:-inMode_NewMessage[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:-inMode_NewMessage[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:-inMode_NewMessage[], +entered_EMail[Biundo] Mult size: 1
Var pair:-inMode_NewMessage[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:-inMode_NewMessage[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+inMode_Telephone[], +inMode_Messages[] Mult size: 1
Var pair:+inMode_Telephone[], +inMode_EMail[] Mult size: 1
Var pair:+inMode_Telephone[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:+inMode_Telephone[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:+inMode_Telephone[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:+inMode_Telephone[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:+inMode_Telephone[], +entered_AnyNumber[] Mult size: 1
Var pair:+inMode_Telephone[], +inMode_NewMessage[] Mult size: 1
Var pair:+inMode_Telephone[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+inMode_Telephone[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+inMode_Telephone[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+inMode_Telephone[], +entered_EMail[Biundo] Mult size: 1
Var pair:+inMode_Telephone[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+inMode_Telephone[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+inMode_Messages[], +inMode_EMail[] Mult size: 1
Var pair:+inMode_Messages[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:+inMode_Messages[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:+inMode_Messages[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:+inMode_Messages[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:+inMode_Messages[], +entered_AnyNumber[] Mult size: 1
Var pair:+inMode_Messages[], +inMode_NewMessage[] Mult size: 1
Var pair:+inMode_Messages[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+inMode_Messages[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+inMode_Messages[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+inMode_Messages[], +entered_EMail[Biundo] Mult size: 1
Var pair:+inMode_Messages[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+inMode_Messages[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+inMode_EMail[], +attached[call1,dateForMeeting] Mult size: 1
Var pair:+inMode_EMail[], +attached[email1,dateForMeeting] Mult size: 1
Var pair:+inMode_EMail[], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:+inMode_EMail[], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:+inMode_EMail[], +entered_AnyNumber[] Mult size: 1
Var pair:+inMode_EMail[], +inMode_NewMessage[] Mult size: 1
Var pair:+inMode_EMail[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+inMode_EMail[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+inMode_EMail[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+inMode_EMail[], +entered_EMail[Biundo] Mult size: 1
Var pair:+inMode_EMail[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+inMode_EMail[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +attached[email1,dateForMeeting] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +entered_AnyNumber[] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +inMode_NewMessage[] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +entered_EMail[Biundo] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+attached[call1,dateForMeeting], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +attached[sms1,dateForMeeting] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +entered_AnyNumber[] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +inMode_NewMessage[] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +entered_EMail[Biundo] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+attached[email1,dateForMeeting], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +entered_NumberOffice[Biundo] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +entered_AnyNumber[] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +inMode_NewMessage[] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +entered_EMail[Biundo] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+attached[sms1,dateForMeeting], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +entered_AnyNumber[] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +inMode_NewMessage[] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +entered_EMail[Biundo] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+entered_NumberOffice[Biundo], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+entered_AnyNumber[], +inMode_NewMessage[] Mult size: 1
Var pair:+entered_AnyNumber[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+entered_AnyNumber[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+entered_AnyNumber[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+entered_AnyNumber[], +entered_EMail[Biundo] Mult size: 1
Var pair:+entered_AnyNumber[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+entered_AnyNumber[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+inMode_NewMessage[], +inMode_EMail_NewEMail[] Mult size: 1
Var pair:+inMode_NewMessage[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+inMode_NewMessage[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+inMode_NewMessage[], +entered_EMail[Biundo] Mult size: 1
Var pair:+inMode_NewMessage[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+inMode_NewMessage[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+inMode_EMail_NewEMail[], +hasReceived[Biundo,call1] Mult size: 1
Var pair:+inMode_EMail_NewEMail[], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+inMode_EMail_NewEMail[], +entered_EMail[Biundo] Mult size: 1
Var pair:+inMode_EMail_NewEMail[], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+inMode_EMail_NewEMail[], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+hasReceived[Biundo,call1], +hasReceived[Biundo,sms1] Mult size: 1
Var pair:+hasReceived[Biundo,call1], +entered_EMail[Biundo] Mult size: 1
Var pair:+hasReceived[Biundo,call1], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+hasReceived[Biundo,call1], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+hasReceived[Biundo,sms1], +entered_EMail[Biundo] Mult size: 1
Var pair:+hasReceived[Biundo,sms1], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+hasReceived[Biundo,sms1], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+entered_EMail[Biundo], +hasInformation_Regular[Biundo,dateForMeeting] Mult size: 1
Var pair:+entered_EMail[Biundo], +hasReceived[Biundo,email1] Mult size: 1
Var pair:+hasInformation_Regular[Biundo,dateForMeeting], +hasReceived[Biundo,email1] Mult size: 1
Number of variables: 23
INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bruno/Desktop/downward/builds/release/bin/translate/translate.py '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/domain-downward.pddl' '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/problem-downward.pddl' --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 104 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
104 relevant atoms
0 auxiliary atoms
104 final queue length
133 total queue pushes
Completing instantiation... [0.000s CPU, 0.001s wall-clock]
Instantiating: [0.000s CPU, 0.004s wall-clock]
Computing fact groups...
Finding invariants...
49 initial candidates
Finding invariants: [0.300s CPU, 0.294s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
43 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.300s CPU, 0.295s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.001s wall-clock]
34 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Reordering and filtering variables...
46 of 46 variables necessary.
3 of 6 mutex groups necessary.
33 of 33 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 46
Translator derived variables: 0
Translator facts: 92
Translator goal facts: 2
Translator mutex groups: 3
Translator total mutex groups size: 6
Translator operators: 33
Translator axioms: 0
Translator task size: 353
Translator peak memory: 45352 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.300s CPU, 0.308s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bruno/Desktop/downward/builds/release/bin/downward --search 'astar(lmcut(), max_time=20)' --internal-plan-file sas_plan < output.sas
[t=2.5214e-05s, 9844 KB] reading input...
[t=0.000400376s, 9844 KB] done reading input!
[t=0.00132402s, 10100 KB] Initializing landmark cut heuristic...
[t=0.00138346s, 10100 KB] Building successor generator...done!
[t=0.00146495s, 10100 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00148297s, 10100 KB] time for successor generation creation: 1.8945e-05s
[t=0.00150479s, 10100 KB] Variables: 46
[t=0.00152409s, 10100 KB] FactPairs: 92
[t=0.00154159s, 10100 KB] Bytes per state: 8
[t=0.00160413s, 10100 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00167371s, 10100 KB] New best heuristic value for lmcut: 7
[t=0.00169526s, 10100 KB] g=0, 1 evaluated, 0 expanded
[t=0.00171412s, 10100 KB] f = 7, 1 evaluated, 0 expanded
[t=0.00173412s, 10100 KB] Initial heuristic value for lmcut: 7
[t=0.00175305s, 10100 KB] pruning method: none
[t=0.00180851s, 10100 KB] New best heuristic value for lmcut: 6
[t=0.00182875s, 10100 KB] g=1, 3 evaluated, 1 expanded
[t=0.00198525s, 10100 KB] New best heuristic value for lmcut: 5
[t=0.00200639s, 10100 KB] g=2, 12 evaluated, 2 expanded
[t=0.00208808s, 10100 KB] New best heuristic value for lmcut: 4
[t=0.00211861s, 10100 KB] g=3, 16 evaluated, 3 expanded
[t=0.00219313s, 10100 KB] New best heuristic value for lmcut: 3
[t=0.00221354s, 10100 KB] g=4, 21 evaluated, 4 expanded
[t=0.00227687s, 10100 KB] New best heuristic value for lmcut: 2
[t=0.00229731s, 10100 KB] g=5, 26 evaluated, 5 expanded
[t=0.00237488s, 10100 KB] New best heuristic value for lmcut: 1
[t=0.00239482s, 10100 KB] g=6, 35 evaluated, 6 expanded
[t=0.00243581s, 10100 KB] New best heuristic value for lmcut: 0
[t=0.0024554s, 10100 KB] g=7, 40 evaluated, 7 expanded
[t=0.00247578s, 10100 KB] Solution found!
[t=0.00249549s, 10100 KB] Actual search time: 0.00073915s
attachregularinformationtocall_call1_dateformeeting_  (1)
press_home_telephone__  (1)
enter_number_forcall_office_biundo_biundoofficenumber_  (1)
press_telephone_call_office_biundo_call1_  (1)
extractsinformation_regular_biundo_call1_dateformeeting_  (1)
do_entermode_telephone_fromhome@entermode_telephone__  (1)
x_________top_method_extractsinformation_biundo_call1_dateformeeting__do_extractsinformation_regular_2_0_1_m1__contact_biundo_call1__do_call_1_0_m1_2__call_biundo_call1__do_call_enternumber_1_0_m1_m2_m3_2__press_telephone_call_biundo_call1__do_press_call_office_3_0_1_2_m1_4__enter_number_forcall___do_enter_number_forcall_office_2_0_1_m1_3_4__attachinformation_call1_dateformeeting__do_attachinformation_tocall_0_m1_1_2_3_4__attachinformationtocall_call1_dateformeeting__do_attachinformationtocall_regular_0_m1_1_2_3_4_@__top__  (1)
[t=0.00251532s, 10100 KB] Plan length: 7 step(s).
[t=0.00251532s, 10100 KB] Plan cost: 7
[t=0.00251532s, 10100 KB] Expanded 8 state(s).
[t=0.00251532s, 10100 KB] Reopened 0 state(s).
[t=0.00251532s, 10100 KB] Evaluated 40 state(s).
[t=0.00251532s, 10100 KB] Evaluations: 40
[t=0.00251532s, 10100 KB] Generated 46 state(s).
[t=0.00251532s, 10100 KB] Dead ends: 0 state(s).
[t=0.00251532s, 10100 KB] Expanded until last jump: 0 state(s).
[t=0.00251532s, 10100 KB] Reopened until last jump: 0 state(s).
[t=0.00251532s, 10100 KB] Evaluated until last jump: 1 state(s).
[t=0.00251532s, 10100 KB] Generated until last jump: 0 state(s).
[t=0.00251532s, 10100 KB] Number of registered states: 40
[t=0.00251532s, 10100 KB] Int hash set load factor: 40/64 = 0.625
[t=0.00251532s, 10100 KB] Int hash set resizes: 6
[t=0.00251532s, 10100 KB] Search time: 0.000911678s
[t=0.00251532s, 10100 KB] Total time: 0.00251532s
Solution found.
Peak memory: 10100 KB
Remove intermediate file output.sas
search exit code: 0

Cost of SAS plan on RC model: 7
Cost SAS: 0
Num primitive tasks: 21
Num non-primitive tasks: 5
Total tasks: 26
Number of methods: 12
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 7
Search Results
- Search time 0.396 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 5e-06 seconds
- Visited list inserts 1
- Visited list pruned 0
- Visited list contains 1
- Visited list hash collisions 0
- Visited list used hash buckets 1
- Generated 4 search nodes
  Calculated heuristic for 4 nodes
  One modifications 0
  Effectless actions 0
- including 0 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 10 nodes per second
- Final fringe contains 0 nodes
- Status: Proven unsolvable
