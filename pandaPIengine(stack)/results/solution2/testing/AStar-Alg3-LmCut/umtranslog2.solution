Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/umtranslog2.sas.
- State has 13 bits divided into 13 mutex groups.
- Domain contains 11 actions.
- Domain contains 12 tasks.
- Domain contains 1 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 12
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 13
Variable :+Available[Plane_RampStuttgart] Domain size: 1
Variable :+Available[Plane_RampHeathrow] Domain size: 1
Variable :+At_Vehicle[Flugzeug,FlughafenStuttgart] Domain size: 1
Variable :+At_Package[Drucker,FlughafenStuttgart] Domain size: 1
Variable :-Door_Open[Flugzeug] Domain size: 1
Variable :-Fees_Collected[Drucker] Domain size: 1
Variable :+Ramp_Connected[Plane_RampStuttgart,Flugzeug] Domain size: 1
Variable :+At_Vehicle[Flugzeug,HeathrowAirport] Domain size: 1
Variable :+At_Package[Drucker,Flugzeug] Domain size: 1
Variable :+Door_Open[Flugzeug] Domain size: 1
Variable :+Fees_Collected[Drucker] Domain size: 1
Variable :+Ramp_Connected[Plane_RampHeathrow,Flugzeug] Domain size: 1
Variable :+Delivered[Drucker] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+Available[Plane_RampStuttgart], +Available[Plane_RampHeathrow] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +At_Vehicle[Flugzeug,FlughafenStuttgart] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +At_Package[Drucker,FlughafenStuttgart] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], -Door_Open[Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], -Fees_Collected[Drucker] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +Ramp_Connected[Plane_RampStuttgart,Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +At_Vehicle[Flugzeug,HeathrowAirport] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +Door_Open[Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +Fees_Collected[Drucker] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampStuttgart], +Delivered[Drucker] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +At_Vehicle[Flugzeug,FlughafenStuttgart] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +At_Package[Drucker,FlughafenStuttgart] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], -Door_Open[Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], -Fees_Collected[Drucker] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +Ramp_Connected[Plane_RampStuttgart,Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +At_Vehicle[Flugzeug,HeathrowAirport] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +Door_Open[Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +Fees_Collected[Drucker] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+Available[Plane_RampHeathrow], +Delivered[Drucker] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +At_Package[Drucker,FlughafenStuttgart] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], -Door_Open[Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], -Fees_Collected[Drucker] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +Ramp_Connected[Plane_RampStuttgart,Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +At_Vehicle[Flugzeug,HeathrowAirport] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +Door_Open[Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +Fees_Collected[Drucker] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,FlughafenStuttgart], +Delivered[Drucker] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], -Door_Open[Flugzeug] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], -Fees_Collected[Drucker] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], +Ramp_Connected[Plane_RampStuttgart,Flugzeug] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], +At_Vehicle[Flugzeug,HeathrowAirport] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], +Door_Open[Flugzeug] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], +Fees_Collected[Drucker] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+At_Package[Drucker,FlughafenStuttgart], +Delivered[Drucker] Mult size: 1
Var pair:-Door_Open[Flugzeug], -Fees_Collected[Drucker] Mult size: 1
Var pair:-Door_Open[Flugzeug], +Ramp_Connected[Plane_RampStuttgart,Flugzeug] Mult size: 1
Var pair:-Door_Open[Flugzeug], +At_Vehicle[Flugzeug,HeathrowAirport] Mult size: 1
Var pair:-Door_Open[Flugzeug], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:-Door_Open[Flugzeug], +Door_Open[Flugzeug] Mult size: 1
Var pair:-Door_Open[Flugzeug], +Fees_Collected[Drucker] Mult size: 1
Var pair:-Door_Open[Flugzeug], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:-Door_Open[Flugzeug], +Delivered[Drucker] Mult size: 1
Var pair:-Fees_Collected[Drucker], +Ramp_Connected[Plane_RampStuttgart,Flugzeug] Mult size: 1
Var pair:-Fees_Collected[Drucker], +At_Vehicle[Flugzeug,HeathrowAirport] Mult size: 1
Var pair:-Fees_Collected[Drucker], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:-Fees_Collected[Drucker], +Door_Open[Flugzeug] Mult size: 1
Var pair:-Fees_Collected[Drucker], +Fees_Collected[Drucker] Mult size: 1
Var pair:-Fees_Collected[Drucker], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:-Fees_Collected[Drucker], +Delivered[Drucker] Mult size: 1
Var pair:+Ramp_Connected[Plane_RampStuttgart,Flugzeug], +At_Vehicle[Flugzeug,HeathrowAirport] Mult size: 1
Var pair:+Ramp_Connected[Plane_RampStuttgart,Flugzeug], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:+Ramp_Connected[Plane_RampStuttgart,Flugzeug], +Door_Open[Flugzeug] Mult size: 1
Var pair:+Ramp_Connected[Plane_RampStuttgart,Flugzeug], +Fees_Collected[Drucker] Mult size: 1
Var pair:+Ramp_Connected[Plane_RampStuttgart,Flugzeug], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+Ramp_Connected[Plane_RampStuttgart,Flugzeug], +Delivered[Drucker] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,HeathrowAirport], +At_Package[Drucker,Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,HeathrowAirport], +Door_Open[Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,HeathrowAirport], +Fees_Collected[Drucker] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,HeathrowAirport], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+At_Vehicle[Flugzeug,HeathrowAirport], +Delivered[Drucker] Mult size: 1
Var pair:+At_Package[Drucker,Flugzeug], +Door_Open[Flugzeug] Mult size: 1
Var pair:+At_Package[Drucker,Flugzeug], +Fees_Collected[Drucker] Mult size: 1
Var pair:+At_Package[Drucker,Flugzeug], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+At_Package[Drucker,Flugzeug], +Delivered[Drucker] Mult size: 1
Var pair:+Door_Open[Flugzeug], +Fees_Collected[Drucker] Mult size: 1
Var pair:+Door_Open[Flugzeug], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+Door_Open[Flugzeug], +Delivered[Drucker] Mult size: 1
Var pair:+Fees_Collected[Drucker], +Ramp_Connected[Plane_RampHeathrow,Flugzeug] Mult size: 1
Var pair:+Fees_Collected[Drucker], +Delivered[Drucker] Mult size: 1
Var pair:+Ramp_Connected[Plane_RampHeathrow,Flugzeug], +Delivered[Drucker] Mult size: 1
Number of variables: 13
INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bruno/Desktop/downward/builds/release/bin/translate/translate.py '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/domain-downward.pddl' '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/problem-downward.pddl' --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 36 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
49 relevant atoms
0 auxiliary atoms
49 final queue length
53 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.002s wall-clock]
Computing fact groups...
Finding invariants...
25 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
12 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
6 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
18 of 18 variables necessary.
2 of 9 mutex groups necessary.
12 of 12 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 18
Translator derived variables: 0
Translator facts: 37
Translator goal facts: 2
Translator mutex groups: 2
Translator total mutex groups size: 4
Translator operators: 12
Translator axioms: 0
Translator task size: 124
Translator peak memory: 39752 KB
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.010s CPU, 0.009s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bruno/Desktop/downward/builds/release/bin/downward --search 'astar(lmcut(), max_time=20)' --internal-plan-file sas_plan < output.sas
[t=3.1792e-05s, 9844 KB] reading input...
[t=0.000279718s, 9844 KB] done reading input!
[t=0.00133188s, 10100 KB] Initializing landmark cut heuristic...
[t=0.00139509s, 10100 KB] Building successor generator...done!
[t=0.00147105s, 10100 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00148978s, 10100 KB] time for successor generation creation: 1.2081e-05s
[t=0.00151169s, 10100 KB] Variables: 18
[t=0.00153172s, 10100 KB] FactPairs: 37
[t=0.00155102s, 10100 KB] Bytes per state: 4
[t=0.0016253s, 10100 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00169035s, 10100 KB] New best heuristic value for lmcut: 12
[t=0.0017129s, 10100 KB] g=0, 1 evaluated, 0 expanded
[t=0.001733s, 10100 KB] f = 12, 1 evaluated, 0 expanded
[t=0.00175488s, 10100 KB] Initial heuristic value for lmcut: 12
[t=0.00177521s, 10100 KB] pruning method: none
[t=0.00181272s, 10100 KB] New best heuristic value for lmcut: 11
[t=0.00185721s, 10100 KB] g=1, 3 evaluated, 1 expanded
[t=0.00192488s, 10100 KB] New best heuristic value for lmcut: 10
[t=0.00194755s, 10100 KB] g=2, 8 evaluated, 2 expanded
[t=0.00200764s, 10100 KB] New best heuristic value for lmcut: 9
[t=0.00202912s, 10100 KB] g=3, 14 evaluated, 3 expanded
[t=0.00207276s, 10100 KB] New best heuristic value for lmcut: 8
[t=0.00209407s, 10100 KB] g=4, 17 evaluated, 4 expanded
[t=0.00214141s, 10100 KB] New best heuristic value for lmcut: 7
[t=0.00216229s, 10100 KB] g=5, 21 evaluated, 5 expanded
[t=0.0022061s, 10100 KB] New best heuristic value for lmcut: 6
[t=0.00222691s, 10100 KB] g=6, 25 evaluated, 6 expanded
[t=0.00227282s, 10100 KB] New best heuristic value for lmcut: 5
[t=0.00229363s, 10100 KB] g=7, 30 evaluated, 7 expanded
[t=0.00233624s, 10100 KB] New best heuristic value for lmcut: 4
[t=0.00235724s, 10100 KB] g=8, 34 evaluated, 8 expanded
[t=0.00239074s, 10100 KB] New best heuristic value for lmcut: 3
[t=0.00241227s, 10100 KB] g=9, 37 evaluated, 9 expanded
[t=0.00244829s, 10100 KB] New best heuristic value for lmcut: 2
[t=0.00246931s, 10100 KB] g=10, 41 evaluated, 10 expanded
[t=0.00250001s, 10100 KB] New best heuristic value for lmcut: 1
[t=0.00252111s, 10100 KB] g=11, 44 evaluated, 11 expanded
[t=0.00255259s, 10100 KB] New best heuristic value for lmcut: 0
[t=0.00257345s, 10100 KB] g=12, 48 evaluated, 12 expanded
[t=0.00259417s, 10100 KB] Solution found!
[t=0.00261529s, 10100 KB] Actual search time: 0.000837082s
attach_conveyor_ramp_flugzeug_plane_rampstuttgart_flughafenstuttgart_  (1)
detach_conveyor_ramp_flugzeug_plane_rampstuttgart_flughafenstuttgart_  (1)
load_package_drucker_flugzeug_flughafenstuttgart_  (1)
move_vehicle_no_traincar_flugzeug_flughafenstuttgart_stuttart_london_air_route_heathrowairport_  (1)
attach_conveyor_ramp_flugzeug_plane_rampheathrow_heathrowairport_  (1)
detach_conveyor_ramp_flugzeug_plane_rampheathrow_heathrowairport_  (1)
unload_package_drucker_flugzeug_heathrowairport_  (1)
collect_fees_drucker_  (1)
deliver_p_drucker_  (1)
open_door_flugzeug_  (1)
close_door_flugzeug_  (1)
x_____________top_method_transport_drucker_flughafenstuttgart_heathrowairport__method_transport_pi_ca_de_0_m1_m2_m3__carry_drucker_flughafenstuttgart_heathrowairport__method_carry_cd_1_0_m1_2__carry_direct_drucker_flughafenstuttgart_heathrowairport__method_carry_direct_1_0_m1_2__helper_carry_direct_flugzeug_drucker_flughafenstuttgart_heathrowairport__method_helper_carry_direct_nomovefirst_1_0_m1_m2_m3_2__unload_top_drucker_flugzeug_heathrowairport__method_unload_top_normal_3_0_1_2_m1_4__unload_drucker_flugzeug_heathrowairport__method_unload_airplane_3_0_1_2_m1_m2_m3_m4_m5_4__move_flugzeug_flughafenstuttgart_heathrowairport__method_move_no_traincar_2_0_1_m1_3_4_5_6_7_8__load_top_drucker_flugzeug_flughafenstuttgart__method_load_top_normal_1_0_m1_2_3_4_5_6_7_8__load_drucker_flugzeug_flughafenstuttgart__method_load_airplane_1_0_m1_m2_m3_m4_m5_2_3_4_5_6_7_8__deliver_drucker__method_deliver_dp_12_0_1_2_3_4_5_6_7_8_9_10_11_m1__pickup_drucker__method_pickup_normal_0_m1_1_2_3_4_5_6_7_8_9_10_11_12_@__top__  (1)
[t=0.00263709s, 10100 KB] Plan length: 12 step(s).
[t=0.00263709s, 10100 KB] Plan cost: 12
[t=0.00263709s, 10100 KB] Expanded 13 state(s).
[t=0.00263709s, 10100 KB] Reopened 0 state(s).
[t=0.00263709s, 10100 KB] Evaluated 48 state(s).
[t=0.00263709s, 10100 KB] Evaluations: 48
[t=0.00263709s, 10100 KB] Generated 47 state(s).
[t=0.00263709s, 10100 KB] Dead ends: 3 state(s).
[t=0.00263709s, 10100 KB] Expanded until last jump: 0 state(s).
[t=0.00263709s, 10100 KB] Reopened until last jump: 0 state(s).
[t=0.00263709s, 10100 KB] Evaluated until last jump: 1 state(s).
[t=0.00263709s, 10100 KB] Generated until last jump: 0 state(s).
[t=0.00263709s, 10100 KB] Number of registered states: 48
[t=0.00263709s, 10100 KB] Int hash set load factor: 48/64 = 0.75
[t=0.00263709s, 10100 KB] Int hash set resizes: 6
[t=0.00263709s, 10100 KB] Search time: 0.00101244s
[t=0.00263709s, 10100 KB] Total time: 0.00263709s
Solution found.
Peak memory: 10100 KB
Remove intermediate file output.sas
search exit code: 0

Cost of SAS plan on RC model: 12
Cost SAS: 0
Num primitive tasks: 11
Num non-primitive tasks: 1
Total tasks: 12
Number of methods: 1
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 12
Search Results
- Search time 0.098 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 5e-06 seconds
- Visited list inserts 2
- Visited list pruned 0
- Visited list contains 2
- Visited list hash collisions 0
- Visited list used hash buckets 2
- Generated 15 search nodes
  Calculated heuristic for 2 nodes
  One modifications 13
  Effectless actions 0
- including 13 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 20 nodes per second
- Final fringe contains 0 nodes
- Status: Solved
- Found solution of length 14
- Total costs of actions: 13
==>
1 collect_fees[Drucker]
2 attach_conveyor_ramp[Flugzeug,Plane_RampStuttgart,FlughafenStuttgart]
3 open_door[Flugzeug]
4 load_package[Drucker,Flugzeug,FlughafenStuttgart]
5 close_door[Flugzeug]
6 detach_conveyor_ramp[Flugzeug,Plane_RampStuttgart,FlughafenStuttgart]
7 move_vehicle_no_traincar[Flugzeug,FlughafenStuttgart,Stuttart_London_Air_Route,HeathrowAirport]
8 attach_conveyor_ramp[Flugzeug,Plane_RampHeathrow,HeathrowAirport]
9 open_door[Flugzeug]
10 unload_package[Drucker,Flugzeug,HeathrowAirport]
11 close_door[Flugzeug]
12 detach_conveyor_ramp[Flugzeug,Plane_RampHeathrow,HeathrowAirport]
13 deliver_p[Drucker]
root 0
0 __top[] -> <<<<<<<<<<<__top_method;transport[Drucker,FlughafenStuttgart,HeathrowAirport];method_transport_pi_ca_de;0;-1,-2,-3>;carry[Drucker,FlughafenStuttgart,HeathrowAirport];method_carry_cd;1;0,-1,2>;carry_direct[Drucker,FlughafenStuttgart,HeathrowAirport];method_carry_direct;1;0,-1,2>;helper_carry_direct[Flugzeug,Drucker,FlughafenStuttgart,HeathrowAirport];method_helper_carry_direct_noMoveFirst;1;0,-1,-2,-3,2>;unload_top[Drucker,Flugzeug,HeathrowAirport];method_unload_top_normal;3;0,1,2,-1,4>;unload[Drucker,Flugzeug,HeathrowAirport];method_unload_airplane;3;0,1,2,-1,-2,-3,-4,-5,4>;move[Flugzeug,FlughafenStuttgart,HeathrowAirport];method_move_no_traincar;2;0,1,-1,3,4,5,6,7,8>;load_top[Drucker,Flugzeug,FlughafenStuttgart];method_load_top_normal;1;0,-1,2,3,4,5,6,7,8>;load[Drucker,Flugzeug,FlughafenStuttgart];method_load_airplane;1;0,-1,-2,-3,-4,-5,2,3,4,5,6,7,8>;deliver[Drucker];method_deliver_dp;12;0,1,2,3,4,5,6,7,8,9,10,11,-1>;pickup[Drucker];method_pickup_normal;0;-1,1,2,3,4,5,6,7,8,9,10,11,12> 1 2 3 4 5 6 7 8 9 10 11 12 13
<==
