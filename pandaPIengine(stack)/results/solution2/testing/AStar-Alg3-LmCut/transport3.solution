Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport3.sas.
- State has 15 bits divided into 15 mutex groups.
- Domain contains 28 actions.
- Domain contains 44 tasks.
- Domain contains 42 methods.
- The initial state contains 5 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 42
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 15
Variable :+at[package-0,city-loc-1] Domain size: 1
Variable :+at[package-1,city-loc-2] Domain size: 1
Variable :+at[package-2,city-loc-2] Domain size: 1
Variable :+at[truck-0,city-loc-0] Domain size: 1
Variable :+capacity[truck-0,capacity-2] Domain size: 1
Variable :+at[truck-0,city-loc-1] Domain size: 1
Variable :+at[truck-0,city-loc-2] Domain size: 1
Variable :+in[package-0,truck-0] Domain size: 1
Variable :+capacity[truck-0,capacity-1] Domain size: 1
Variable :+in[package-1,truck-0] Domain size: 1
Variable :+in[package-2,truck-0] Domain size: 1
Variable :+capacity[truck-0,capacity-0] Domain size: 1
Variable :+at[package-0,city-loc-0] Domain size: 1
Variable :+at[package-1,city-loc-1] Domain size: 1
Variable :+at[package-2,city-loc-0] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+at[package-0,city-loc-1], +at[package-1,city-loc-2] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[package-2,city-loc-2] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-0,city-loc-1], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-0,city-loc-1], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +in[package-2,truck-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-1], +at[package-2,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-2], +at[package-2,city-loc-2] Mult size: 1
Var pair:+at[package-1,city-loc-2], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-2], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[package-1,city-loc-2], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-1,city-loc-2], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-1,city-loc-2], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-1,city-loc-2], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-2], +in[package-2,truck-0] Mult size: 1
Var pair:+at[package-1,city-loc-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-1,city-loc-2], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-2], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[package-1,city-loc-2], +at[package-2,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-2], +at[truck-0,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-2], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[package-2,city-loc-2], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[package-2,city-loc-2], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[package-2,city-loc-2], +in[package-0,truck-0] Mult size: 1
Var pair:+at[package-2,city-loc-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[package-2,city-loc-2], +in[package-1,truck-0] Mult size: 1
Var pair:+at[package-2,city-loc-2], +in[package-2,truck-0] Mult size: 1
Var pair:+at[package-2,city-loc-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[package-2,city-loc-2], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[package-2,city-loc-2], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[package-2,city-loc-2], +at[package-2,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-2] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +in[package-2,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-0], +at[package-2,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[truck-0,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +in[package-0,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +in[package-2,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[package-0,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[package-1,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-2], +at[package-2,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[truck-0,city-loc-2] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +in[package-2,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-1], +at[package-2,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-0,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-1,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +in[package-2,truck-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-0,city-loc-0] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[truck-0,city-loc-2], +at[package-2,city-loc-0] Mult size: 1
Var pair:+in[package-0,truck-0], +capacity[truck-0,capacity-1] Mult size: 1
Var pair:+in[package-0,truck-0], +in[package-1,truck-0] Mult size: 1
Var pair:+in[package-0,truck-0], +in[package-2,truck-0] Mult size: 1
Var pair:+in[package-0,truck-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-1,city-loc-1] Mult size: 1
Var pair:+in[package-0,truck-0], +at[package-2,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +in[package-1,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +in[package-2,truck-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-0,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-1,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-1], +at[package-2,city-loc-0] Mult size: 1
Var pair:+in[package-1,truck-0], +in[package-2,truck-0] Mult size: 1
Var pair:+in[package-1,truck-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-1,city-loc-1] Mult size: 1
Var pair:+in[package-1,truck-0], +at[package-2,city-loc-0] Mult size: 1
Var pair:+in[package-2,truck-0], +capacity[truck-0,capacity-0] Mult size: 1
Var pair:+in[package-2,truck-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+in[package-2,truck-0], +at[package-1,city-loc-1] Mult size: 1
Var pair:+in[package-2,truck-0], +at[package-2,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-0,city-loc-0] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-1,city-loc-1] Mult size: 1
Var pair:+capacity[truck-0,capacity-0], +at[package-2,city-loc-0] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-1,city-loc-1] Mult size: 1
Var pair:+at[package-0,city-loc-0], +at[package-2,city-loc-0] Mult size: 1
Var pair:+at[package-1,city-loc-1], +at[package-2,city-loc-0] Mult size: 1
Number of variables: 15
INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bruno/Desktop/downward/builds/release/bin/translate/translate.py '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/domain-downward.pddl' '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/problem-downward.pddl' --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.005s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 184 rules.
Computing model... [0.000s CPU, 0.001s wall-clock]
158 relevant atoms
0 auxiliary atoms
158 final queue length
217 total queue pushes
Completing instantiation... [0.010s CPU, 0.001s wall-clock]
Instantiating: [0.010s CPU, 0.004s wall-clock]
Computing fact groups...
Finding invariants...
59 initial candidates
Finding invariants: [0.060s CPU, 0.068s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
47 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.060s CPU, 0.069s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.002s wall-clock]
4 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
6 of 10 mutex groups necessary.
67 of 67 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 106
Translator goal facts: 1
Translator mutex groups: 6
Translator total mutex groups size: 12
Translator operators: 67
Translator axioms: 0
Translator task size: 468
Translator peak memory: 40776 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.080s CPU, 0.084s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bruno/Desktop/downward/builds/release/bin/downward --search 'astar(lmcut(), max_time=20)' --internal-plan-file sas_plan < output.sas
[t=2.3628e-05s, 9844 KB] reading input...
[t=0.000550452s, 9844 KB] done reading input!
[t=0.0014572s, 10232 KB] Initializing landmark cut heuristic...
[t=0.0015277s, 10232 KB] Building successor generator...done!
[t=0.00161025s, 10232 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00162703s, 10232 KB] time for successor generation creation: 2.4588e-05s
[t=0.0016463s, 10232 KB] Variables: 51
[t=0.00166385s, 10232 KB] FactPairs: 106
[t=0.00168015s, 10232 KB] Bytes per state: 8
[t=0.00174236s, 10232 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0018251s, 10232 KB] New best heuristic value for lmcut: 19
[t=0.00185813s, 10232 KB] g=0, 1 evaluated, 0 expanded
[t=0.00187657s, 10232 KB] f = 19, 1 evaluated, 0 expanded
[t=0.00189553s, 10232 KB] Initial heuristic value for lmcut: 19
[t=0.00191319s, 10232 KB] pruning method: none
[t=0.00196838s, 10232 KB] New best heuristic value for lmcut: 18
[t=0.00198711s, 10232 KB] g=1, 2 evaluated, 1 expanded
[t=0.00231406s, 10232 KB] New best heuristic value for lmcut: 17
[t=0.00233657s, 10232 KB] g=2, 13 evaluated, 3 expanded
[t=0.00255184s, 10232 KB] f = 20, 20 evaluated, 5 expanded
[t=0.0028477s, 10232 KB] New best heuristic value for lmcut: 16
[t=0.00288246s, 10232 KB] g=4, 30 evaluated, 8 expanded
[t=0.00302298s, 10232 KB] New best heuristic value for lmcut: 15
[t=0.00304332s, 10232 KB] g=5, 35 evaluated, 9 expanded
[t=0.00509679s, 10232 KB] f = 21, 101 evaluated, 25 expanded
[t=0.0057417s, 10232 KB] New best heuristic value for lmcut: 14
[t=0.00576464s, 10232 KB] g=7, 126 evaluated, 33 expanded
[t=0.0108627s, 10232 KB] f = 22, 307 evaluated, 86 expanded
[t=0.0225338s, 10232 KB] f = 23, 743 evaluated, 232 expanded
[t=0.0252982s, 10232 KB] New best heuristic value for lmcut: 13
[t=0.0253294s, 10232 KB] g=10, 846 evaluated, 267 expanded
[t=0.0288981s, 10232 KB] New best heuristic value for lmcut: 12
[t=0.028928s, 10232 KB] g=11, 984 evaluated, 317 expanded
[t=0.0290764s, 10232 KB] New best heuristic value for lmcut: 11
[t=0.0290973s, 10232 KB] g=12, 991 evaluated, 318 expanded
[t=0.0364851s, 10232 KB] New best heuristic value for lmcut: 10
[t=0.0365269s, 10232 KB] g=13, 1290 evaluated, 413 expanded
[t=0.0367918s, 10232 KB] New best heuristic value for lmcut: 9
[t=0.03682s, 10232 KB] g=14, 1303 evaluated, 414 expanded
[t=0.0370299s, 10232 KB] New best heuristic value for lmcut: 8
[t=0.0370585s, 10232 KB] g=15, 1316 evaluated, 415 expanded
[t=0.0372574s, 10232 KB] New best heuristic value for lmcut: 7
[t=0.0372884s, 10232 KB] g=16, 1329 evaluated, 416 expanded
[t=0.0374622s, 10232 KB] New best heuristic value for lmcut: 6
[t=0.0374965s, 10232 KB] g=17, 1341 evaluated, 417 expanded
[t=0.0376437s, 10232 KB] New best heuristic value for lmcut: 5
[t=0.037676s, 10232 KB] g=18, 1352 evaluated, 418 expanded
[t=0.0378063s, 10232 KB] New best heuristic value for lmcut: 4
[t=0.0378432s, 10232 KB] g=19, 1362 evaluated, 419 expanded
[t=0.0410859s, 10232 KB] New best heuristic value for lmcut: 3
[t=0.0411303s, 10232 KB] g=20, 1704 evaluated, 460 expanded
[t=0.0465408s, 10232 KB] New best heuristic value for lmcut: 2
[t=0.0465708s, 10232 KB] g=21, 2247 evaluated, 533 expanded
[t=0.0466301s, 10232 KB] New best heuristic value for lmcut: 1
[t=0.0466499s, 10232 KB] g=22, 2254 evaluated, 534 expanded
[t=0.0466942s, 10232 KB] New best heuristic value for lmcut: 0
[t=0.0467127s, 10232 KB] g=23, 2260 evaluated, 535 expanded
[t=0.0467394s, 10232 KB] Solution found!
[t=0.04676s, 10232 KB] Actual search time: 0.0448423s
drive_truckm0_citymlocm0_citymlocm1_  (1)
mmdrivemto@getmto_truckm0_citymlocm1_  (1)
drive_truckm0_citymlocm1_citymlocm2_  (1)
pickmup_truckm0_citymlocm2_packagem1_capacitym1_capacitym2_  (1)
mmload@load_truckm0_citymlocm2_packagem1_  (1)
pickmup_truckm0_citymlocm2_packagem2_capacitym0_capacitym1_  (1)
drive_truckm0_citymlocm2_citymlocm1_  (1)
drop_truckm0_citymlocm1_packagem1_capacitym0_capacitym1_  (1)
pickmup_truckm0_citymlocm1_packagem0_capacitym0_capacitym1_  (1)
drive_truckm0_citymlocm1_citymlocm0_  (1)
drop_truckm0_citymlocm0_packagem0_capacitym0_capacitym1_  (1)
drop_truckm0_citymlocm0_packagem2_capacitym1_capacitym2_  (1)
mmload@load_truckm0_citymlocm2_packagem2_  (1)
mmload@load_truckm0_citymlocm1_packagem0_  (1)
x_splitting_method_mmdeliver_splitted_1@mmdeliver_splitted_1_truckm0_packagem0_  (1)
mmunload@unload_truckm0_citymlocm1_packagem1_  (1)
mmunload@unload_truckm0_citymlocm0_packagem2_  (1)
mmunload@unload_truckm0_citymlocm0_packagem0_  (1)
mmdrivemto@getmto_truckm0_citymlocm2_  (1)
x_splitting_method_mmdeliver_splitted_1@mmdeliver_splitted_1_truckm0_packagem2_  (1)
x_splitting_method_mmdeliver_splitted_1@mmdeliver_splitted_1_truckm0_packagem1_  (1)
mmdrivemto@getmto_truckm0_citymlocm0_  (1)
x_____top_method_deliver_packagem2_citymlocm0__mmdeliver_2_0_1_m1_m2_m3__deliver_packagem1_citymlocm1__mmdeliver_1_0_m1_m2_m3_2_3_4__deliver_packagem0_citymlocm0__mmdeliver_0_m1_m2_m3_1_2_3_4_5_6_@__top__  (1)
[t=0.0467786s, 10232 KB] Plan length: 23 step(s).
[t=0.0467786s, 10232 KB] Plan cost: 23
[t=0.0467786s, 10232 KB] Expanded 536 state(s).
[t=0.0467786s, 10232 KB] Reopened 0 state(s).
[t=0.0467786s, 10232 KB] Evaluated 2260 state(s).
[t=0.0467786s, 10232 KB] Evaluations: 2260
[t=0.0467786s, 10232 KB] Generated 6162 state(s).
[t=0.0467786s, 10232 KB] Dead ends: 0 state(s).
[t=0.0467786s, 10232 KB] Expanded until last jump: 232 state(s).
[t=0.0467786s, 10232 KB] Reopened until last jump: 0 state(s).
[t=0.0467786s, 10232 KB] Evaluated until last jump: 743 state(s).
[t=0.0467786s, 10232 KB] Generated until last jump: 1916 state(s).
[t=0.0467786s, 10232 KB] Number of registered states: 2260
[t=0.0467786s, 10232 KB] Int hash set load factor: 2260/4096 = 0.551758
[t=0.0467786s, 10232 KB] Int hash set resizes: 12
[t=0.0467786s, 10232 KB] Search time: 0.0450367s
[t=0.0467786s, 10232 KB] Total time: 0.0467786s
Solution found.
Peak memory: 10232 KB
Remove intermediate file output.sas
search exit code: 0

Cost of SAS plan on RC model: 23
Cost SAS: 0
Num primitive tasks: 28
Num non-primitive tasks: 16
Total tasks: 44
Number of methods: 42
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 22
   1s visitime    0.01s generated nodes     30029 nodes/sec   29239 cur h   26 mod.depth    9 inserts      4121 dups      1915 size      2206 hash fail   1915 hash buckets   2206
   2s visitime    0.04s generated nodes     70075 nodes/sec   33007 cur h   28 mod.depth    8 inserts      9903 dups      4821 size      5082 hash fail   4821 hash buckets   5082
   3s visitime    0.06s generated nodes     90111 nodes/sec   28853 cur h   27 mod.depth   10 inserts     12954 dups      6496 size      6458 hash fail   6496 hash buckets   6458
   4s visitime    0.07s generated nodes    110149 nodes/sec   26282 cur h   28 mod.depth    9 inserts     14412 dups      6609 size      7803 hash fail   6609 hash buckets   7803
   5s visitime    0.09s generated nodes    130172 nodes/sec   24653 cur h   27 mod.depth   10 inserts     16082 dups      6926 size      9156 hash fail   6926 hash buckets   9156
   6s visitime    0.11s generated nodes    165243 nodes/sec   25928 cur h   27 mod.depth   10 inserts     19715 dups      8134 size     11581 hash fail   8135 hash buckets  11580
   7s visitime    0.14s generated nodes    205305 nodes/sec   27344 cur h   28 mod.depth    9 inserts     27857 dups     13304 size     14553 hash fail  13306 hash buckets  14551
   8s visitime    0.16s generated nodes    230328 nodes/sec   26904 cur h   28 mod.depth   10 inserts     32733 dups     16457 size     16276 hash fail  16461 hash buckets  16272
   9s visitime    0.18s generated nodes    250378 nodes/sec   26064 cur h   28 mod.depth   10 inserts     34935 dups     17351 size     17584 hash fail  17355 hash buckets  17580
  10s visitime    0.21s generated nodes    280416 nodes/sec   26364 cur h   28 mod.depth   11 inserts     40634 dups     21024 size     19610 hash fail  21032 hash buckets  19602
  11s visitime    0.22s generated nodes    320490 nodes/sec   27450 cur h   29 mod.depth   10 inserts     43426 dups     21183 size     22243 hash fail  21192 hash buckets  22234
  12s visitime    0.24s generated nodes    355559 nodes/sec   27601 cur h   28 mod.depth   11 inserts     46086 dups     21530 size     24556 hash fail  21543 hash buckets  24543
  13s visitime    0.26s generated nodes    375610 nodes/sec   26904 cur h   29 mod.depth   10 inserts     47721 dups     21822 size     25899 hash fail  21836 hash buckets  25885
  15s visitime    0.27s generated nodes    405662 nodes/sec   26956 cur h   28 mod.depth   11 inserts     50306 dups     22389 size     27917 hash fail  22407 hash buckets  27899
  16s visitime    0.29s generated nodes    445714 nodes/sec   27670 cur h   28 mod.depth   11 inserts     54089 dups     23467 size     30622 hash fail  23491 hash buckets  30598
  17s visitime    0.31s generated nodes    480783 nodes/sec   27766 cur h   28 mod.depth   11 inserts     57784 dups     24778 size     33006 hash fail  24804 hash buckets  32980
  18s visitime    0.33s generated nodes    500802 nodes/sec   27189 cur h   29 mod.depth   10 inserts     60206 dups     25827 size     34379 hash fail  25853 hash buckets  34353
  19s visitime    0.35s generated nodes    525837 nodes/sec   27078 cur h   28 mod.depth   11 inserts     63467 dups     27345 size     36122 hash fail  27372 hash buckets  36095
  20s visitime    0.38s generated nodes    565887 nodes/sec   27570 cur h   28 mod.depth   11 inserts     69608 dups     30650 size     38958 hash fail  30683 hash buckets  38925
Reached time limit - stopping search.
Search Results
- Search time 21.09 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 0.40 seconds
- Visited list inserts 73456
- Visited list pruned 33057
- Visited list contains 40399
- Visited list hash collisions 33092
- Visited list used hash buckets 40364
- Generated 585920 search nodes
  Calculated heuristic for 568905 nodes
  One modifications 0
  Effectless actions 17015
- including 0 one modification actions
- including 0 one modification methods
- and       17015 progressions of effectless actions
- Generated 26978 nodes per second
- Final fringe contains 166550 nodes
- Status: Timeout
