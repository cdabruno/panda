Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/woodworking3.sas.
- State has 19 bits divided into 19 mutex groups.
- Domain contains 18 actions.
- Domain contains 21 tasks.
- Domain contains 15 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 6 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 21
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 19
Variable :+colour[p0,red] Domain size: 1
Variable :+treatment[p0,varnished] Domain size: 1
Variable :+unused[p1] Domain size: 1
Variable :+colour[p2,natural] Domain size: 1
Variable :+surface_condition[p2,verysmooth] Domain size: 1
Variable :+treatment[p2,varnished] Domain size: 1
Variable :+colour[p0,natural] Domain size: 1
Variable :+surface_condition[p2,smooth] Domain size: 1
Variable :+treatment[p2,untreated] Domain size: 1
Variable :+available[p1] Domain size: 1
Variable :+wood[p1,pine] Domain size: 1
Variable :+surface_condition[p1,rough] Domain size: 1
Variable :+colour[p1,natural] Domain size: 1
Variable :+treatment[p1,untreated] Domain size: 1
Variable :+treatment[p2,glazed] Domain size: 1
Variable :+colour[p2,red] Domain size: 1
Variable :+treatment[p1,glazed] Domain size: 1
Variable :+colour[p1,red] Domain size: 1
Variable :+surface_condition[p1,smooth] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+colour[p0,red], +treatment[p0,varnished] Mult size: 1
Var pair:+colour[p0,red], +unused[p1] Mult size: 1
Var pair:+colour[p0,red], +colour[p2,natural] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,varnished] Mult size: 1
Var pair:+colour[p0,red], +colour[p0,natural] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p0,red], +available[p1] Mult size: 1
Var pair:+colour[p0,red], +wood[p1,pine] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p1,rough] Mult size: 1
Var pair:+colour[p0,red], +colour[p1,natural] Mult size: 1
Var pair:+colour[p0,red], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p0,red], +colour[p2,red] Mult size: 1
Var pair:+colour[p0,red], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p0,red], +colour[p1,red] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p0,varnished], +unused[p1] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p2,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,varnished] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p0,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p2,smooth] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,untreated] Mult size: 1
Var pair:+treatment[p0,varnished], +available[p1] Mult size: 1
Var pair:+treatment[p0,varnished], +wood[p1,pine] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p1,rough] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p1,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p1,untreated] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p2,red] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p1,red] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p1,smooth] Mult size: 1
Var pair:+unused[p1], +colour[p2,natural] Mult size: 1
Var pair:+unused[p1], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+unused[p1], +treatment[p2,varnished] Mult size: 1
Var pair:+unused[p1], +colour[p0,natural] Mult size: 1
Var pair:+unused[p1], +surface_condition[p2,smooth] Mult size: 1
Var pair:+unused[p1], +treatment[p2,untreated] Mult size: 1
Var pair:+unused[p1], +available[p1] Mult size: 1
Var pair:+unused[p1], +wood[p1,pine] Mult size: 1
Var pair:+unused[p1], +surface_condition[p1,rough] Mult size: 1
Var pair:+unused[p1], +colour[p1,natural] Mult size: 1
Var pair:+unused[p1], +treatment[p1,untreated] Mult size: 1
Var pair:+unused[p1], +treatment[p2,glazed] Mult size: 1
Var pair:+unused[p1], +colour[p2,red] Mult size: 1
Var pair:+unused[p1], +treatment[p1,glazed] Mult size: 1
Var pair:+unused[p1], +colour[p1,red] Mult size: 1
Var pair:+unused[p1], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,varnished] Mult size: 1
Var pair:+colour[p2,natural], +colour[p0,natural] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p2,natural], +available[p1] Mult size: 1
Var pair:+colour[p2,natural], +wood[p1,pine] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p1,rough] Mult size: 1
Var pair:+colour[p2,natural], +colour[p1,natural] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p2,natural], +colour[p2,red] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p2,natural], +colour[p1,red] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p1,smooth] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,varnished] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p0,natural] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +surface_condition[p2,smooth] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,untreated] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +available[p1] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +wood[p1,pine] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +surface_condition[p1,rough] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p1,natural] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p1,untreated] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,glazed] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p1,glazed] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p1,red] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p0,natural] Mult size: 1
Var pair:+treatment[p2,varnished], +surface_condition[p2,smooth] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p2,untreated] Mult size: 1
Var pair:+treatment[p2,varnished], +available[p1] Mult size: 1
Var pair:+treatment[p2,varnished], +wood[p1,pine] Mult size: 1
Var pair:+treatment[p2,varnished], +surface_condition[p1,rough] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p1,natural] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p1,untreated] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p1,red] Mult size: 1
Var pair:+treatment[p2,varnished], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p0,natural], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p0,natural], +available[p1] Mult size: 1
Var pair:+colour[p0,natural], +wood[p1,pine] Mult size: 1
Var pair:+colour[p0,natural], +surface_condition[p1,rough] Mult size: 1
Var pair:+colour[p0,natural], +colour[p1,natural] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p0,natural], +colour[p2,red] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p0,natural], +colour[p1,red] Mult size: 1
Var pair:+colour[p0,natural], +surface_condition[p1,smooth] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p2,untreated] Mult size: 1
Var pair:+surface_condition[p2,smooth], +available[p1] Mult size: 1
Var pair:+surface_condition[p2,smooth], +wood[p1,pine] Mult size: 1
Var pair:+surface_condition[p2,smooth], +surface_condition[p1,rough] Mult size: 1
Var pair:+surface_condition[p2,smooth], +colour[p1,natural] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p1,untreated] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p2,glazed] Mult size: 1
Var pair:+surface_condition[p2,smooth], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p1,glazed] Mult size: 1
Var pair:+surface_condition[p2,smooth], +colour[p1,red] Mult size: 1
Var pair:+surface_condition[p2,smooth], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p2,untreated], +available[p1] Mult size: 1
Var pair:+treatment[p2,untreated], +wood[p1,pine] Mult size: 1
Var pair:+treatment[p2,untreated], +surface_condition[p1,rough] Mult size: 1
Var pair:+treatment[p2,untreated], +colour[p1,natural] Mult size: 1
Var pair:+treatment[p2,untreated], +treatment[p1,untreated] Mult size: 1
Var pair:+treatment[p2,untreated], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p2,untreated], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,untreated], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p2,untreated], +colour[p1,red] Mult size: 1
Var pair:+treatment[p2,untreated], +surface_condition[p1,smooth] Mult size: 1
Var pair:+available[p1], +wood[p1,pine] Mult size: 1
Var pair:+available[p1], +surface_condition[p1,rough] Mult size: 1
Var pair:+available[p1], +colour[p1,natural] Mult size: 1
Var pair:+available[p1], +treatment[p1,untreated] Mult size: 1
Var pair:+available[p1], +treatment[p2,glazed] Mult size: 1
Var pair:+available[p1], +colour[p2,red] Mult size: 1
Var pair:+available[p1], +treatment[p1,glazed] Mult size: 1
Var pair:+available[p1], +colour[p1,red] Mult size: 1
Var pair:+available[p1], +surface_condition[p1,smooth] Mult size: 1
Var pair:+wood[p1,pine], +surface_condition[p1,rough] Mult size: 1
Var pair:+wood[p1,pine], +colour[p1,natural] Mult size: 1
Var pair:+wood[p1,pine], +treatment[p1,untreated] Mult size: 1
Var pair:+wood[p1,pine], +treatment[p2,glazed] Mult size: 1
Var pair:+wood[p1,pine], +colour[p2,red] Mult size: 1
Var pair:+wood[p1,pine], +treatment[p1,glazed] Mult size: 1
Var pair:+wood[p1,pine], +colour[p1,red] Mult size: 1
Var pair:+wood[p1,pine], +surface_condition[p1,smooth] Mult size: 1
Var pair:+surface_condition[p1,rough], +colour[p1,natural] Mult size: 1
Var pair:+surface_condition[p1,rough], +treatment[p1,untreated] Mult size: 1
Var pair:+surface_condition[p1,rough], +treatment[p2,glazed] Mult size: 1
Var pair:+surface_condition[p1,rough], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p1,rough], +treatment[p1,glazed] Mult size: 1
Var pair:+surface_condition[p1,rough], +colour[p1,red] Mult size: 1
Var pair:+surface_condition[p1,rough], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p1,natural], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p1,natural], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p1,natural], +colour[p2,red] Mult size: 1
Var pair:+colour[p1,natural], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p1,natural], +colour[p1,red] Mult size: 1
Var pair:+colour[p1,natural], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p1,untreated], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p1,untreated], +colour[p2,red] Mult size: 1
Var pair:+treatment[p1,untreated], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p1,untreated], +colour[p1,red] Mult size: 1
Var pair:+treatment[p1,untreated], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p2,glazed], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,glazed], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p2,glazed], +colour[p1,red] Mult size: 1
Var pair:+treatment[p2,glazed], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p2,red], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p2,red], +colour[p1,red] Mult size: 1
Var pair:+colour[p2,red], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p1,glazed], +colour[p1,red] Mult size: 1
Var pair:+treatment[p1,glazed], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p1,red], +surface_condition[p1,smooth] Mult size: 1
Number of variables: 19
Num primitive tasks: 18
Num non-primitive tasks: 3
Total tasks: 21
Number of methods: 15
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 9
Search Results
- Search time 0.001 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 5.7e-05 seconds
- Visited list inserts 22
- Visited list pruned 4
- Visited list contains 18
- Visited list hash collisions 4
- Visited list used hash buckets 18
- Generated 94 search nodes
  Calculated heuristic for 90 nodes
  One modifications 4
  Effectless actions 0
- including 4 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 90000 nodes per second
- Final fringe contains 26 nodes
- Avg. ramification degree with depth 0: 1
- Avg. ramification degree with depth 1: 5
- Avg. ramification degree with depth 2: 20.3333
- Avg. ramification degree with depth 3: 27.6667
- Avg. ramification degree with depth 4: 27.6
- Avg. ramification degree with depth 5: 35.5
- Avg. ramification degree with depth 6: 46
- Avg. abstract ramification degree with depth 0: 1
- Avg. abstract ramification degree with depth 1: 3
- Avg. abstract ramification degree with depth 2: 7.33333
- Avg. abstract ramification degree with depth 3: 8.33333
- Avg. abstract ramification degree with depth 4: 8.2
- Avg. abstract ramification degree with depth 5: 11
- Avg. abstract ramification degree with depth 6: 13
- Avg. primitive ramification degree with depth 0: 0
- Avg. primitive ramification degree with depth 1: 2
- Avg. primitive ramification degree with depth 2: 13
- Avg. primitive ramification degree with depth 3: 19.3333
- Avg. primitive ramification degree with depth 4: 19.4
- Avg. primitive ramification degree with depth 5: 24.5
- Avg. primitive ramification degree with depth 6: 33
RAMIFICATION TOTAL 2.61111- Status: Solved
- Found solution of length 9
- Total costs of actions: 6
==>
31 do_saw_medium[b0,p1,pine,rough,s3,s2,s1]
37 do_plane[p0,smooth,red,varnished]
84 do_plane[p2,verysmooth,natural,varnished]
86 do_glaze[p2,glazer0,red]
87 do_glaze[p1,glazer0,red]
88 do_plane[p1,rough,red,glazed]
root 0
47 __top_method_splitted_14[p2,glazer0] -> <_splitting_method___top_method_splitted_14;do_colour[p2,red,glazer0];method2;0;-1> 86
16 __top_method_splitted_1[p2,smooth,untreated] -> <_splitting_method___top_method_splitted_1;grindNplane[p2,verysmooth,natural,varnished,smooth,natural,untreated];method7;0;-1> 84
0 __top[] -> <<<<<<__top_method;__top_method_splitted_11[p1,rough,red,glazed,smooth,untreated];_splitting_method___top_method_splitted_11;5;0,1,2,3,4,-1>;grindNplane[p1,rough,red,glazed,smooth,natural,untreated];method7;5;0,1,2,3,4,-1>;__top_method_splitted_6[p0,smooth,red,varnished,untreated];_splitting_method___top_method_splitted_6;4;0,1,2,3,-1,5>;grindNplane[p0,smooth,red,varnished,smooth,natural,untreated];method7;4;0,1,2,3,-1,5>;do_saw[b0,p1,pine,rough];method8;3;0,1,2,-1,4,5>;do_colour[p1,red,glazer0];method2;1;0,-1,2,3,4,5> 47 87 16 31 37 88
<==
