Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/woodworking3.sas.
- State has 19 bits divided into 19 mutex groups.
- Domain contains 18 actions.
- Domain contains 21 tasks.
- Domain contains 15 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 6 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 21
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Variable number: 19
Variable :+colour[p0,red] Domain size: 1
Variable :+treatment[p0,varnished] Domain size: 1
Variable :+unused[p1] Domain size: 1
Variable :+colour[p2,natural] Domain size: 1
Variable :+surface_condition[p2,verysmooth] Domain size: 1
Variable :+treatment[p2,varnished] Domain size: 1
Variable :+colour[p0,natural] Domain size: 1
Variable :+surface_condition[p2,smooth] Domain size: 1
Variable :+treatment[p2,untreated] Domain size: 1
Variable :+available[p1] Domain size: 1
Variable :+wood[p1,pine] Domain size: 1
Variable :+surface_condition[p1,rough] Domain size: 1
Variable :+colour[p1,natural] Domain size: 1
Variable :+treatment[p1,untreated] Domain size: 1
Variable :+treatment[p2,glazed] Domain size: 1
Variable :+colour[p2,red] Domain size: 1
Variable :+treatment[p1,glazed] Domain size: 1
Variable :+colour[p1,red] Domain size: 1
Variable :+surface_condition[p1,smooth] Domain size: 1
Min domain: 1
Max domain: 1
Avg domain: 1
Var pair:+colour[p0,red], +treatment[p0,varnished] Mult size: 1
Var pair:+colour[p0,red], +unused[p1] Mult size: 1
Var pair:+colour[p0,red], +colour[p2,natural] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,varnished] Mult size: 1
Var pair:+colour[p0,red], +colour[p0,natural] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p0,red], +available[p1] Mult size: 1
Var pair:+colour[p0,red], +wood[p1,pine] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p1,rough] Mult size: 1
Var pair:+colour[p0,red], +colour[p1,natural] Mult size: 1
Var pair:+colour[p0,red], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p0,red], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p0,red], +colour[p2,red] Mult size: 1
Var pair:+colour[p0,red], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p0,red], +colour[p1,red] Mult size: 1
Var pair:+colour[p0,red], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p0,varnished], +unused[p1] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p2,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,varnished] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p0,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p2,smooth] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,untreated] Mult size: 1
Var pair:+treatment[p0,varnished], +available[p1] Mult size: 1
Var pair:+treatment[p0,varnished], +wood[p1,pine] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p1,rough] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p1,natural] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p1,untreated] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p2,red] Mult size: 1
Var pair:+treatment[p0,varnished], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p0,varnished], +colour[p1,red] Mult size: 1
Var pair:+treatment[p0,varnished], +surface_condition[p1,smooth] Mult size: 1
Var pair:+unused[p1], +colour[p2,natural] Mult size: 1
Var pair:+unused[p1], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+unused[p1], +treatment[p2,varnished] Mult size: 1
Var pair:+unused[p1], +colour[p0,natural] Mult size: 1
Var pair:+unused[p1], +surface_condition[p2,smooth] Mult size: 1
Var pair:+unused[p1], +treatment[p2,untreated] Mult size: 1
Var pair:+unused[p1], +available[p1] Mult size: 1
Var pair:+unused[p1], +wood[p1,pine] Mult size: 1
Var pair:+unused[p1], +surface_condition[p1,rough] Mult size: 1
Var pair:+unused[p1], +colour[p1,natural] Mult size: 1
Var pair:+unused[p1], +treatment[p1,untreated] Mult size: 1
Var pair:+unused[p1], +treatment[p2,glazed] Mult size: 1
Var pair:+unused[p1], +colour[p2,red] Mult size: 1
Var pair:+unused[p1], +treatment[p1,glazed] Mult size: 1
Var pair:+unused[p1], +colour[p1,red] Mult size: 1
Var pair:+unused[p1], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p2,verysmooth] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,varnished] Mult size: 1
Var pair:+colour[p2,natural], +colour[p0,natural] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p2,natural], +available[p1] Mult size: 1
Var pair:+colour[p2,natural], +wood[p1,pine] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p1,rough] Mult size: 1
Var pair:+colour[p2,natural], +colour[p1,natural] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p2,natural], +colour[p2,red] Mult size: 1
Var pair:+colour[p2,natural], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p2,natural], +colour[p1,red] Mult size: 1
Var pair:+colour[p2,natural], +surface_condition[p1,smooth] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,varnished] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p0,natural] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +surface_condition[p2,smooth] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,untreated] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +available[p1] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +wood[p1,pine] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +surface_condition[p1,rough] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p1,natural] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p1,untreated] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p2,glazed] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +treatment[p1,glazed] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +colour[p1,red] Mult size: 1
Var pair:+surface_condition[p2,verysmooth], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p0,natural] Mult size: 1
Var pair:+treatment[p2,varnished], +surface_condition[p2,smooth] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p2,untreated] Mult size: 1
Var pair:+treatment[p2,varnished], +available[p1] Mult size: 1
Var pair:+treatment[p2,varnished], +wood[p1,pine] Mult size: 1
Var pair:+treatment[p2,varnished], +surface_condition[p1,rough] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p1,natural] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p1,untreated] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,varnished], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p2,varnished], +colour[p1,red] Mult size: 1
Var pair:+treatment[p2,varnished], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p0,natural], +surface_condition[p2,smooth] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p2,untreated] Mult size: 1
Var pair:+colour[p0,natural], +available[p1] Mult size: 1
Var pair:+colour[p0,natural], +wood[p1,pine] Mult size: 1
Var pair:+colour[p0,natural], +surface_condition[p1,rough] Mult size: 1
Var pair:+colour[p0,natural], +colour[p1,natural] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p0,natural], +colour[p2,red] Mult size: 1
Var pair:+colour[p0,natural], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p0,natural], +colour[p1,red] Mult size: 1
Var pair:+colour[p0,natural], +surface_condition[p1,smooth] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p2,untreated] Mult size: 1
Var pair:+surface_condition[p2,smooth], +available[p1] Mult size: 1
Var pair:+surface_condition[p2,smooth], +wood[p1,pine] Mult size: 1
Var pair:+surface_condition[p2,smooth], +surface_condition[p1,rough] Mult size: 1
Var pair:+surface_condition[p2,smooth], +colour[p1,natural] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p1,untreated] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p2,glazed] Mult size: 1
Var pair:+surface_condition[p2,smooth], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p2,smooth], +treatment[p1,glazed] Mult size: 1
Var pair:+surface_condition[p2,smooth], +colour[p1,red] Mult size: 1
Var pair:+surface_condition[p2,smooth], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p2,untreated], +available[p1] Mult size: 1
Var pair:+treatment[p2,untreated], +wood[p1,pine] Mult size: 1
Var pair:+treatment[p2,untreated], +surface_condition[p1,rough] Mult size: 1
Var pair:+treatment[p2,untreated], +colour[p1,natural] Mult size: 1
Var pair:+treatment[p2,untreated], +treatment[p1,untreated] Mult size: 1
Var pair:+treatment[p2,untreated], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p2,untreated], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,untreated], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p2,untreated], +colour[p1,red] Mult size: 1
Var pair:+treatment[p2,untreated], +surface_condition[p1,smooth] Mult size: 1
Var pair:+available[p1], +wood[p1,pine] Mult size: 1
Var pair:+available[p1], +surface_condition[p1,rough] Mult size: 1
Var pair:+available[p1], +colour[p1,natural] Mult size: 1
Var pair:+available[p1], +treatment[p1,untreated] Mult size: 1
Var pair:+available[p1], +treatment[p2,glazed] Mult size: 1
Var pair:+available[p1], +colour[p2,red] Mult size: 1
Var pair:+available[p1], +treatment[p1,glazed] Mult size: 1
Var pair:+available[p1], +colour[p1,red] Mult size: 1
Var pair:+available[p1], +surface_condition[p1,smooth] Mult size: 1
Var pair:+wood[p1,pine], +surface_condition[p1,rough] Mult size: 1
Var pair:+wood[p1,pine], +colour[p1,natural] Mult size: 1
Var pair:+wood[p1,pine], +treatment[p1,untreated] Mult size: 1
Var pair:+wood[p1,pine], +treatment[p2,glazed] Mult size: 1
Var pair:+wood[p1,pine], +colour[p2,red] Mult size: 1
Var pair:+wood[p1,pine], +treatment[p1,glazed] Mult size: 1
Var pair:+wood[p1,pine], +colour[p1,red] Mult size: 1
Var pair:+wood[p1,pine], +surface_condition[p1,smooth] Mult size: 1
Var pair:+surface_condition[p1,rough], +colour[p1,natural] Mult size: 1
Var pair:+surface_condition[p1,rough], +treatment[p1,untreated] Mult size: 1
Var pair:+surface_condition[p1,rough], +treatment[p2,glazed] Mult size: 1
Var pair:+surface_condition[p1,rough], +colour[p2,red] Mult size: 1
Var pair:+surface_condition[p1,rough], +treatment[p1,glazed] Mult size: 1
Var pair:+surface_condition[p1,rough], +colour[p1,red] Mult size: 1
Var pair:+surface_condition[p1,rough], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p1,natural], +treatment[p1,untreated] Mult size: 1
Var pair:+colour[p1,natural], +treatment[p2,glazed] Mult size: 1
Var pair:+colour[p1,natural], +colour[p2,red] Mult size: 1
Var pair:+colour[p1,natural], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p1,natural], +colour[p1,red] Mult size: 1
Var pair:+colour[p1,natural], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p1,untreated], +treatment[p2,glazed] Mult size: 1
Var pair:+treatment[p1,untreated], +colour[p2,red] Mult size: 1
Var pair:+treatment[p1,untreated], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p1,untreated], +colour[p1,red] Mult size: 1
Var pair:+treatment[p1,untreated], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p2,glazed], +colour[p2,red] Mult size: 1
Var pair:+treatment[p2,glazed], +treatment[p1,glazed] Mult size: 1
Var pair:+treatment[p2,glazed], +colour[p1,red] Mult size: 1
Var pair:+treatment[p2,glazed], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p2,red], +treatment[p1,glazed] Mult size: 1
Var pair:+colour[p2,red], +colour[p1,red] Mult size: 1
Var pair:+colour[p2,red], +surface_condition[p1,smooth] Mult size: 1
Var pair:+treatment[p1,glazed], +colour[p1,red] Mult size: 1
Var pair:+treatment[p1,glazed], +surface_condition[p1,smooth] Mult size: 1
Var pair:+colour[p1,red], +surface_condition[p1,smooth] Mult size: 1
Number of variables: 19
INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bruno/Desktop/downward/builds/release/bin/translate/translate.py '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/domain-downward.pddl' '/home/bruno/Desktop/newPanda/panda/pandaPIengine(stack)/problem-downward.pddl' --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.008s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 118 rules.
Computing model... [0.010s CPU, 0.001s wall-clock]
92 relevant atoms
0 auxiliary atoms
92 final queue length
142 total queue pushes
Completing instantiation... [0.000s CPU, 0.001s wall-clock]
Instantiating: [0.010s CPU, 0.007s wall-clock]
Computing fact groups...
Finding invariants...
40 initial candidates
Finding invariants: [0.010s CPU, 0.015s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.018s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.004s wall-clock]
15 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]
Reordering and filtering variables...
33 of 33 variables necessary.
17 of 22 mutex groups necessary.
33 of 33 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 33
Translator derived variables: 0
Translator facts: 70
Translator goal facts: 7
Translator mutex groups: 17
Translator total mutex groups size: 37
Translator operators: 33
Translator axioms: 0
Translator task size: 338
Translator peak memory: 40008 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.040s CPU, 0.045s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bruno/Desktop/downward/builds/release/bin/downward --search 'astar(lmcut(), max_time=20)' --internal-plan-file sas_plan < output.sas
[t=4.6635e-05s, 9844 KB] reading input...
[t=0.000694692s, 9844 KB] done reading input!
[t=0.00236123s, 10100 KB] Initializing landmark cut heuristic...
[t=0.00247258s, 10100 KB] Building successor generator...done!
[t=0.00262202s, 10100 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00265541s, 10100 KB] time for successor generation creation: 3.2866e-05s
[t=0.00269436s, 10100 KB] Variables: 33
[t=0.00272945s, 10100 KB] FactPairs: 70
[t=0.00276195s, 10100 KB] Bytes per state: 8
[t=0.0028791s, 10100 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00301415s, 10100 KB] New best heuristic value for lmcut: 9
[t=0.00305582s, 10100 KB] g=0, 1 evaluated, 0 expanded
[t=0.00309078s, 10100 KB] f = 9, 1 evaluated, 0 expanded
[t=0.00312732s, 10100 KB] Initial heuristic value for lmcut: 9
[t=0.00316181s, 10100 KB] pruning method: none
[t=0.00322933s, 10100 KB] New best heuristic value for lmcut: 8
[t=0.0032691s, 10100 KB] g=1, 2 evaluated, 1 expanded
[t=0.00342064s, 10100 KB] New best heuristic value for lmcut: 7
[t=0.00345901s, 10100 KB] g=2, 7 evaluated, 2 expanded
[t=0.00357898s, 10100 KB] New best heuristic value for lmcut: 6
[t=0.00361702s, 10100 KB] g=3, 12 evaluated, 3 expanded
[t=0.00372441s, 10100 KB] New best heuristic value for lmcut: 5
[t=0.00376238s, 10100 KB] g=4, 17 evaluated, 4 expanded
[t=0.00384889s, 10100 KB] New best heuristic value for lmcut: 4
[t=0.00388667s, 10100 KB] g=5, 21 evaluated, 5 expanded
[t=0.00396678s, 10100 KB] New best heuristic value for lmcut: 3
[t=0.00400461s, 10100 KB] g=6, 25 evaluated, 6 expanded
[t=0.00408244s, 10100 KB] New best heuristic value for lmcut: 2
[t=0.00411989s, 10100 KB] g=7, 30 evaluated, 7 expanded
[t=0.00419209s, 10100 KB] New best heuristic value for lmcut: 1
[t=0.00423032s, 10100 KB] g=8, 34 evaluated, 8 expanded
[t=0.00428372s, 10100 KB] New best heuristic value for lmcut: 0
[t=0.00432147s, 10100 KB] g=9, 36 evaluated, 9 expanded
[t=0.00436408s, 10100 KB] Solution found!
[t=0.00440274s, 10100 KB] Actual search time: 0.0012352s
do_plane_p2_verysmooth_natural_varnished_  (1)
do_glaze_p2_glazer0_red_  (1)
x__splitting_method___top_method_splitted_1_grindnplane_p2_verysmooth_natural_varnished_smooth_natural_untreated__method7_0_m1_@__top_method_splitted_1_p2_smooth_untreated_  (1)
do_saw_medium_b0_p1_pine_rough_s3_s2_s1_  (1)
do_glaze_p1_glazer0_red_  (1)
do_plane_p1_rough_red_glazed_  (1)
do_plane_p0_smooth_red_varnished_  (1)
x__splitting_method___top_method_splitted_14_do_colour_p2_red_glazer0__method2_0_m1_@__top_method_splitted_14_p2_glazer0_  (1)
x________top_method___top_method_splitted_11_p1_rough_red_glazed_smooth_untreated___splitting_method___top_method_splitted_11_5_0_1_2_3_4_m1__grindnplane_p1_rough_red_glazed_smooth_natural_untreated__method7_5_0_1_2_3_4_m1____top_method_splitted_6_p0_smooth_red_varnished_untreated___splitting_method___top_method_splitted_6_4_0_1_2_3_m1_5__grindnplane_p0_smooth_red_varnished_smooth_natural_untreated__method7_4_0_1_2_3_m1_5__do_saw_b0_p1_pine_rough__method8_3_0_1_2_m1_4_5__do_colour_p1_red_glazer0__method2_1_0_m1_2_3_4_5_@__top__  (1)
[t=0.00443993s, 10100 KB] Plan length: 9 step(s).
[t=0.00443993s, 10100 KB] Plan cost: 9
[t=0.00443993s, 10100 KB] Expanded 10 state(s).
[t=0.00443993s, 10100 KB] Reopened 0 state(s).
[t=0.00443993s, 10100 KB] Evaluated 37 state(s).
[t=0.00443993s, 10100 KB] Evaluations: 37
[t=0.00443993s, 10100 KB] Generated 43 state(s).
[t=0.00443993s, 10100 KB] Dead ends: 3 state(s).
[t=0.00443993s, 10100 KB] Expanded until last jump: 0 state(s).
[t=0.00443993s, 10100 KB] Reopened until last jump: 0 state(s).
[t=0.00443993s, 10100 KB] Evaluated until last jump: 1 state(s).
[t=0.00443993s, 10100 KB] Generated until last jump: 0 state(s).
[t=0.00443993s, 10100 KB] Number of registered states: 37
[t=0.00443993s, 10100 KB] Int hash set load factor: 37/64 = 0.578125
[t=0.00443993s, 10100 KB] Int hash set resizes: 6
[t=0.00443993s, 10100 KB] Search time: 0.00156189s
[t=0.00443993s, 10100 KB] Total time: 0.00443993s
Solution found.
Peak memory: 10100 KB
Remove intermediate file output.sas
search exit code: 0

Cost of SAS plan on RC model: 9
Cost SAS: 0
Num primitive tasks: 18
Num non-primitive tasks: 3
Total tasks: 21
Number of methods: 15
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 9
Search Results
- Search time 0.21 seconds
- Depth reached: 0.
- Depth reached expanding abstract methods: 0
- Visited list time 9e-06 seconds
- Visited list inserts 1
- Visited list pruned 0
- Visited list contains 1
- Visited list hash collisions 0
- Visited list used hash buckets 1
- Generated 2 search nodes
  Calculated heuristic for 2 nodes
  One modifications 0
  Effectless actions 0
- including 0 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 9 nodes per second
- Final fringe contains 0 nodes
- Status: Proven unsolvable
