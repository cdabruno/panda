Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite18.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 78 actions.
- Domain contains 98 tasks.
- Domain contains 155 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 98
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.222 seconds
- Visited list time 0.020853 seconds
- Visited list inserts 8101
- Visited list pruned 1863
- Visited list contains 6238
- Visited list hash collisions 1868
- Visited list used hash buckets 6233
- Generated 67625 search nodes
  Calculated heuristic for 55022 nodes
  One modifications 10365
  Effectless actions 2238
- including 10365 one modification actions
- including 0 one modification methods
- and       2238 progressions of effectless actions
- Generated 247846 nodes per second
- Final fringe contains 8113 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 11
==>
67560 switch_on[instrument3,satellite2]
67602 turn_to[satellite2,star1,planet2]
67605 calibrate[satellite2,instrument3,star1]
67606 turn_to[satellite2,planet2,star1]
67608 take_image[satellite2,planet2,instrument3,image0]
67609 turn_to[satellite2,phenomenon3,planet2]
67610 take_image[satellite2,phenomenon3,instrument3,thermograph1]
67611 turn_to[satellite2,star5,phenomenon3]
67617 take_image[satellite2,star5,instrument3,thermograph1]
67618 turn_to[satellite2,planet4,star5]
67622 take_image[satellite2,planet4,instrument3,thermograph1]
root 0
67621 method1_splitted_1[satellite2,planet4,thermograph1] -> _splitting_method_method1_splitted_1 67622
67616 method1_splitted_1[satellite2,star5,thermograph1] -> _splitting_method_method1_splitted_1 67617
67607 method1_splitted_1[satellite2,planet2,image0] -> _splitting_method_method1_splitted_1 67608
67601 auto_calibrate[satellite2,instrument3] -> method6 67602 67605
67559 do_observation[star5,thermograph1] -> method1 67611 67616
65163 activate_instrument[satellite2,instrument3] -> method5 67560 67601
9960 do_observation[planet4,thermograph1] -> method1 67618 67621
2824 do_observation[planet2,image0] -> method1 67606 67607
26 do_observation[phenomenon3,thermograph1] -> method0 65163 67609 67610
0 __top[] -> __top_method 2824 26 9960 67559
<==
