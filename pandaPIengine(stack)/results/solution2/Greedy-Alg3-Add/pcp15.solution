Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp15.sas.
- State has 6 bits divided into 6 mutex groups.
- Domain contains 8 actions.
- Domain contains 11 tasks.
- Domain contains 9 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 11
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 11
Search Results
- Search time 0.002 seconds
- Visited list time 0.000207 seconds
- Visited list inserts 78
- Visited list pruned 0
- Visited list contains 78
- Visited list hash collisions 0
- Visited list used hash buckets 78
- Generated 778 search nodes
  Calculated heuristic for 306 nodes
  One modifications 472
  Effectless actions 0
- including 472 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 153000 nodes per second
- Final fringe contains 27 nodes
- Status: Solved
- Found solution of length 33
- Total costs of actions: 24
==>
110 t2G1[]
154 t2G2[]
175 t2G1[]
379 t2G2[]
420 t1G1[]
746 t1G2[]
752 t1G1[]
753 t1G2[]
754 p0G1[]
755 p0G2[]
756 p0G1[]
757 p0G2[]
758 p1G1[]
759 p1G2[]
760 p0G1[]
761 p0G2[]
762 p0G1[]
763 p0G2[]
764 p1G1[]
765 p1G2[]
766 p0G1[]
767 p0G2[]
768 p0G1[]
769 p0G2[]
root 0
751 SG2[] -> G2_S2t1_0 753 755
745 SG1[] -> G1_S2t1_0_0_1 752 754 756 758
419 SG2[] -> G2_S2t1_S_0 746 751 757
378 SG1[] -> G1_S2t1_S_0_0_1 420 745 760 762 764
174 SG2[] -> G2_S2t2_S_1_0_0 379 419 759 761 763
153 SG1[] -> G1_S2t2_S_0 175 378 766
109 SG1[] -> G1_S2t2_S_0 110 153 768
4 SG2[] -> G2_S2t2_S_1_0_0 154 174 765 767 769
0 __top[] -> __top_method 109 4
<==
