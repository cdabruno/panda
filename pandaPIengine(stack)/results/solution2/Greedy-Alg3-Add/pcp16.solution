Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp16.sas.
- State has 7 bits divided into 7 mutex groups.
- Domain contains 10 actions.
- Domain contains 13 tasks.
- Domain contains 13 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 13
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 11
Search Results
- Search time 0.025 seconds
- Visited list time 0.00233 seconds
- Visited list inserts 961
- Visited list pruned 0
- Visited list contains 961
- Visited list hash collisions 0
- Visited list used hash buckets 961
- Generated 13932 search nodes
  Calculated heuristic for 5756 nodes
  One modifications 8176
  Effectless actions 0
- including 8176 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 230240 nodes per second
- Final fringe contains 639 nodes
- Status: Solved
- Found solution of length 37
- Total costs of actions: 26
==>
142 t2G1[]
154 t2G2[]
201 t2G1[]
680 t2G2[]
759 t3G1[]
4083 t3G2[]
4144 t1G1[]
13862 t1G2[]
13904 t1G1[]
13905 t1G2[]
13906 p1G1[]
13907 p1G2[]
13908 p1G1[]
13909 p1G2[]
13910 p1G1[]
13911 p1G2[]
13912 p1G1[]
13913 p1G2[]
13914 p0G1[]
13915 p0G2[]
13916 p0G1[]
13917 p0G2[]
13918 p0G1[]
13919 p0G2[]
13920 p0G1[]
13921 p0G2[]
root 0
13903 SG2[] -> G2_S2t1_1 13905 13907
13861 SG1[] -> G1_S2t1_1_1 13904 13906 13908
4143 SG2[] -> G2_S2t1_S_1 13862 13903 13909
4082 SG1[] -> G1_S2t1_S_1_1 4144 13861 13910 13912
758 SG2[] -> G2_S2t3_S_1_1 4083 4143 13911 13913
679 SG1[] -> G1_S2t3_S_0_0 759 4082 13914 13916
200 SG2[] -> G2_S2t2_S_0_0 680 758 13915 13917
153 SG1[] -> G1_S2t2_S_0 201 679 13918
141 SG1[] -> G1_S2t2_S_0 142 153 13920
5 SG2[] -> G2_S2t2_S_0_0 154 200 13919 13921
0 __top[] -> __top_method 141 5
<==
