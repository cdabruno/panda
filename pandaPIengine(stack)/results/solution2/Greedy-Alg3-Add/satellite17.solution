Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite17.sas.
- State has 21 bits divided into 21 mutex groups.
- Domain contains 72 actions.
- Domain contains 88 tasks.
- Domain contains 135 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 88
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 26
Search Results
- Search time 0.745 seconds
- Visited list time 0.103216 seconds
- Visited list inserts 39353
- Visited list pruned 6202
- Visited list contains 33151
- Visited list hash collisions 6227
- Visited list used hash buckets 33126
- Generated 233375 search nodes
  Calculated heuristic for 185341 nodes
  One modifications 43834
  Effectless actions 4200
- including 43834 one modification actions
- including 0 one modification methods
- and       4200 progressions of effectless actions
- Generated 248779 nodes per second
- Final fringe contains 17983 nodes
- Status: Solved
- Found solution of length 23
- Total costs of actions: 14
==>
233337 switch_on[instrument1,satellite0]
233346 switch_on[instrument3,satellite1]
233356 turn_to[satellite1,star0,groundstation1]
233359 calibrate[satellite1,instrument3,star0]
233362 turn_to[satellite1,star2,star0]
233363 take_image[satellite1,star2,instrument3,infrared2]
233366 turn_to[satellite0,groundstation1,phenomenon3]
233367 calibrate[satellite0,instrument1,groundstation1]
233368 turn_to[satellite0,phenomenon3,groundstation1]
233369 take_image[satellite0,phenomenon3,instrument1,spectrograph0]
233370 turn_to[satellite0,planet4,phenomenon3]
233371 take_image[satellite0,planet4,instrument1,thermograph1]
233372 turn_to[satellite0,phenomenon5,planet4]
233373 take_image[satellite0,phenomenon5,instrument1,thermograph1]
root 0
233351 auto_calibrate[satellite1,instrument3] -> method6 233356 233359
233341 auto_calibrate[satellite0,instrument1] -> method6 233366 233367
233336 activate_instrument[satellite1,instrument3] -> method5 233346 233351
17073 do_observation[star2,infrared2] -> method0 233336 233362 233363
12091 do_observation[planet4,thermograph1] -> <method1;method1_splitted_1[satellite0,planet4,thermograph1];_splitting_method_method1_splitted_1;1;0,-1> 233370 233371
6036 do_observation[phenomenon5,thermograph1] -> <method1;method1_splitted_1[satellite0,phenomenon5,thermograph1];_splitting_method_method1_splitted_1;1;0,-1> 233372 233373
6032 activate_instrument[satellite0,instrument1] -> method5 233337 233341
15 do_observation[phenomenon3,spectrograph0] -> method0 6032 233368 233369
0 __top[] -> __top_method 17073 15 12091 6036
<==
