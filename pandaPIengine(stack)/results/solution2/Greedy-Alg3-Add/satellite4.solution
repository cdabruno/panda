Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite4.sas.
- State has 9 bits divided into 9 mutex groups.
- Domain contains 17 actions.
- Domain contains 24 tasks.
- Domain contains 29 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 24
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
- Starting state heuristic value: 15
Search Results
- Search time 0.001 seconds
- Visited list time 0.000142 seconds
- Visited list inserts 55
- Visited list pruned 0
- Visited list contains 55
- Visited list hash collisions 0
- Visited list used hash buckets 55
- Generated 251 search nodes
  Calculated heuristic for 162 nodes
  One modifications 87
  Effectless actions 2
- including 87 one modification actions
- including 0 one modification methods
- and       2 progressions of effectless actions
- Generated 162000 nodes per second
- Final fringe contains 4 nodes
- Status: Solved
- Found solution of length 18
- Total costs of actions: 11
==>
218 switch_on[instrument01,satellite0]
233 turn_to[satellite0,GroundStation0,Phenomenon6]
236 calibrate[satellite0,instrument01,GroundStation0]
238 turn_to[satellite0,Phenomenon4,GroundStation0]
239 take_image[satellite0,Phenomenon4,instrument01,thermograph]
240 switch_off[instrument01,satellite0]
241 switch_on[instrument02,satellite0]
245 turn_to[satellite0,GroundStation0,Phenomenon4]
246 calibrate[satellite0,instrument02,GroundStation0]
247 turn_to[satellite0,Star5,GroundStation0]
248 take_image[satellite0,Star5,instrument02,x_ray]
root 0
244 auto_calibrate[satellite0,instrument02] -> method6 245 246
222 auto_calibrate[satellite0,instrument01] -> method6 233 236
217 activate_instrument[satellite0,instrument02] -> method4 240 241 244
216 activate_instrument[satellite0,instrument01] -> method5 218 222
36 do_observation[Phenomenon4,thermograph] -> method0 216 238 239
7 do_observation[Star5,x_ray] -> method0 217 247 248
0 __top[] -> __top_method 36 7
<==
