Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite16.sas.
- State has 11 bits divided into 11 mutex groups.
- Domain contains 43 actions.
- Domain contains 55 tasks.
- Domain contains 92 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 55
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.025 seconds
- Visited list time 0.001922 seconds
- Visited list inserts 775
- Visited list pruned 0
- Visited list contains 775
- Visited list hash collisions 0
- Visited list used hash buckets 775
- Generated 7455 search nodes
  Calculated heuristic for 6837 nodes
  One modifications 535
  Effectless actions 83
- including 535 one modification actions
- including 0 one modification methods
- and       83 progressions of effectless actions
- Generated 273480 nodes per second
- Final fringe contains 2210 nodes
- Status: Solved
- Found solution of length 19
- Total costs of actions: 10
==>
6980 switch_on[instrument0,satellite0]
7438 calibrate[satellite0,instrument0,star0]
7439 turn_to[satellite0,planet3,star0]
7440 take_image[satellite0,planet3,instrument0,infrared2]
7441 turn_to[satellite0,planet5,planet3]
7443 take_image[satellite0,planet5,instrument0,infrared2]
7444 turn_to[satellite0,planet2,planet5]
7448 take_image[satellite0,planet2,instrument0,infrared2]
7449 turn_to[satellite0,star4,planet2]
7450 take_image[satellite0,star4,instrument0,infrared0]
root 0
7447 method1_splitted_1[satellite0,planet2,infrared2] -> _splitting_method_method1_splitted_1 7448
7442 method1_splitted_1[satellite0,planet5,infrared2] -> _splitting_method_method1_splitted_1 7443
7437 auto_calibrate[satellite0,instrument0] -> method7 7438
6979 do_observation[planet2,infrared2] -> method1 7444 7447
4722 activate_instrument[satellite0,instrument0] -> method5 6980 7437
1420 do_observation[planet5,infrared2] -> method1 7441 7442
233 do_observation[star4,infrared0] -> <method1;method1_splitted_1[satellite0,star4,infrared0];_splitting_method_method1_splitted_1;1;0,-1> 7449 7450
18 do_observation[planet3,infrared2] -> method0 4722 7439 7440
0 __top[] -> __top_method 6979 18 233 1420
<==
