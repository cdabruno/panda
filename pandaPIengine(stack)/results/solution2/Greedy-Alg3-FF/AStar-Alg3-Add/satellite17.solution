Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite17.sas.
- State has 21 bits divided into 21 mutex groups.
- Domain contains 72 actions.
- Domain contains 88 tasks.
- Domain contains 135 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 88
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.62 seconds
- Visited list time 0.077166 seconds
- Visited list inserts 29868
- Visited list pruned 4302
- Visited list contains 25566
- Visited list hash collisions 4322
- Visited list used hash buckets 25546
- Generated 197432 search nodes
  Calculated heuristic for 160858 nodes
  One modifications 33274
  Effectless actions 3300
- including 33274 one modification actions
- including 0 one modification methods
- and       3300 progressions of effectless actions
- Generated 259448 nodes per second
- Final fringe contains 20251 nodes
- Status: Solved
- Found solution of length 23
- Total costs of actions: 14
==>
197395 switch_on[instrument1,satellite0]
197403 switch_on[instrument3,satellite1]
197413 turn_to[satellite1,star0,groundstation1]
197416 calibrate[satellite1,instrument3,star0]
197419 turn_to[satellite1,star2,star0]
197420 take_image[satellite1,star2,instrument3,infrared2]
197423 turn_to[satellite0,groundstation1,phenomenon3]
197424 calibrate[satellite0,instrument1,groundstation1]
197425 turn_to[satellite0,phenomenon3,groundstation1]
197426 take_image[satellite0,phenomenon3,instrument1,spectrograph0]
197427 turn_to[satellite0,planet4,phenomenon3]
197428 take_image[satellite0,planet4,instrument1,thermograph1]
197429 turn_to[satellite0,phenomenon5,planet4]
197430 take_image[satellite0,phenomenon5,instrument1,thermograph1]
root 0
197408 auto_calibrate[satellite1,instrument3] -> method6 197413 197416
197398 auto_calibrate[satellite0,instrument1] -> method6 197423 197424
76725 do_observation[phenomenon5,thermograph1] -> <method1;method1_splitted_1[satellite0,phenomenon5,thermograph1];_splitting_method_method1_splitted_1;1;0,-1> 197429 197430
62227 activate_instrument[satellite1,instrument3] -> method5 197403 197408
62225 activate_instrument[satellite0,instrument1] -> method5 197395 197398
36089 do_observation[planet4,thermograph1] -> <method1;method1_splitted_1[satellite0,planet4,thermograph1];_splitting_method_method1_splitted_1;1;0,-1> 197427 197428
3073 do_observation[star2,infrared2] -> method0 62227 197419 197420
15 do_observation[phenomenon3,spectrograph0] -> method0 62225 197425 197426
0 __top[] -> __top_method 3073 15 36089 76725
<==
