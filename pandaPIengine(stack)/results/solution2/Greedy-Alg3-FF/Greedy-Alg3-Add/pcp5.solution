Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp5.sas.
- State has 8 bits divided into 8 mutex groups.
- Domain contains 12 actions.
- Domain contains 15 tasks.
- Domain contains 17 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 15
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: greedy
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy Search
Search Results
- Search time 0.041 seconds
- Visited list time 0.002818 seconds
- Visited list inserts 1136
- Visited list pruned 0
- Visited list contains 1136
- Visited list hash collisions 0
- Visited list used hash buckets 1136
- Generated 20638 search nodes
  Calculated heuristic for 9074 nodes
  One modifications 11564
  Effectless actions 0
- including 11564 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 221317 nodes per second
- Final fringe contains 1153 nodes
- Status: Solved
- Found solution of length 39
- Total costs of actions: 30
==>
121 t1G1[]
208 t1G2[]
264 t4G1[]
3888 t4G2[]
3979 t3G1[]
20563 t3G2[]
20598 t1G1[]
20599 t1G2[]
20600 aG1[]
20601 aG2[]
20602 bG1[]
20603 bG2[]
20604 aG1[]
20605 aG2[]
20606 bG1[]
20607 bG2[]
20608 aG1[]
20609 aG2[]
20610 aG1[]
20611 aG2[]
20612 bG1[]
20613 bG2[]
20614 bG1[]
20615 bG2[]
20616 aG1[]
20617 aG2[]
20618 bG1[]
20619 bG2[]
20620 aG1[]
20621 aG2[]
root 0
20597 SG2[] -> G2_S2t1_a 20599 20601
20562 SG1[] -> G1_S2t1_a_b_a 20598 20600 20602 20604
3978 SG2[] -> G2_S2t3_S_b_a_b_a 20563 20597 20603 20605 20607 20609
3887 SG1[] -> G1_S2t3_S_b_a_a 3979 20562 20606 20608 20610
263 SG2[] -> G2_S2t4_S_a_b_b_a_b 3888 3978 20611 20613 20615 20617 20619
207 SG1[] -> G1_S2t4_S_b_b 264 3887 20612 20614
120 SG1[] -> G1_S2t1_S_a_b_a 121 207 20616 20618 20620
5 SG2[] -> G2_S2t1_S_a 208 263 20621
0 __top[] -> __top_method 120 5
<==
