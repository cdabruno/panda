Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/pcp11.sas.
- State has 6 bits divided into 6 mutex groups.
- Domain contains 8 actions.
- Domain contains 11 tasks.
- Domain contains 9 methods.
- The initial state contains 1 set bits.
- The initial task is "__top[]".
- State-based goal contains 1 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 11
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 2
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
- Starting state heuristic value: 8
Search Results
- Search time 0.004 seconds
- Visited list time 0.000285 seconds
- Visited list inserts 71
- Visited list pruned 0
- Visited list contains 71
- Visited list hash collisions 0
- Visited list used hash buckets 71
- Generated 669 search nodes
  Calculated heuristic for 278 nodes
  One modifications 391
  Effectless actions 0
- including 391 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 69500 nodes per second
- Final fringe contains 24 nodes
- Status: Solved
- Found solution of length 33
- Total costs of actions: 24
==>
21 t1G1[]
68 t1G2[]
148 t1G1[]
222 t1G2[]
376 t2G1[]
637 t2G2[]
645 t2G1[]
646 t2G2[]
647 p1G1[]
648 p1G2[]
649 p1G1[]
650 p1G2[]
651 p0G1[]
652 p0G2[]
653 p1G1[]
654 p1G2[]
655 p1G1[]
656 p1G2[]
657 p0G1[]
658 p0G2[]
659 p1G1[]
660 p1G2[]
661 p1G1[]
662 p1G2[]
root 0
644 SG2[] -> G2_S2t2_1_1_0 646 648 650 652
636 SG1[] -> G1_S2t2_1 645 647
375 SG2[] -> G2_S2t2_S_1_1_0 637 644 654 656 658
221 SG1[] -> G1_S2t2_S_1 376 636 649
147 SG2[] -> G2_S2t1_S_1 222 375 660
67 SG1[] -> G1_S2t1_S_0_1_1 148 221 651 653 655
20 SG1[] -> G1_S2t1_S_0_1_1 21 67 657 659 661
3 SG2[] -> G2_S2t1_S_1 68 147 662
0 __top[] -> __top_method 20 3
<==
