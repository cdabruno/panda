Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/entertainment2.sas.
- State has 10 bits divided into 10 mutex groups.
- Domain contains 11 actions.
- Domain contains 21 tasks.
- Domain contains 20 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 21
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
- Starting state heuristic value: 7
Search Results
- Search time 0 seconds
- Visited list time 2.6e-05 seconds
- Visited list inserts 13
- Visited list pruned 2
- Visited list contains 11
- Visited list hash collisions 2
- Visited list used hash buckets 11
- Generated 28 search nodes
  Calculated heuristic for 21 nodes
  One modifications 6
  Effectless actions 1
- including 6 one modification actions
- including 0 one modification methods
- and       1 progressions of effectless actions
- Generated -2147483648 nodes per second
- Final fringe contains 2 nodes
- Status: Solved
- Found solution of length 11
- Total costs of actions: 3
==>
6 plug|instance_1[dvd-1,dvd-1-scart-1,scart-to-cinch-cable-1,scart-to-cinch-cable-1-scart-1]
18 plug|instance_2[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-3,simple-tv-1,simple-tv-1-cinch-1]
24 plug|instance_4[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2]
root 0
23 plug[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2] -> _method_for_multiple_expansions_of_plug|instance_4 24
22 direct_a_connect[scart-to-cinch-cable-1,simple-tv-1] -> m-dconnect-a 23
17 plug[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-3,simple-tv-1,simple-tv-1-cinch-1] -> _method_for_multiple_expansions_of_plug|instance_2 18
10 direct_v_connect[scart-to-cinch-cable-1,simple-tv-1] -> m-dconnect-v 17
8 av_connect[scart-to-cinch-cable-1,simple-tv-1] -> <<m-connect-split-1;a_connect[scart-to-cinch-cable-1,simple-tv-1];m-connect-direct-a;1;0,-1>;v_connect[scart-to-cinch-cable-1,simple-tv-1];m-connect-direct-v;0;-1,1> 10 22
5 direct_av_connect[dvd-1,scart-to-cinch-cable-1] -> <m-dconnect-av;plug[dvd-1,dvd-1-scart-1,scart-to-cinch-cable-1,scart-to-cinch-cable-1-scart-1];_method_for_multiple_expansions_of_plug|instance_1;0;-1> 6
1 av_connect[dvd-1,simple-tv-1] -> m-connect-rec-av-1 5 8
0 __top[] -> __top_method 1
<==
