Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport4.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 47 actions.
- Domain contains 68 tasks.
- Domain contains 63 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 32
Search Results
- Search time 0.215 seconds
- Visited list time 0.034057 seconds
- Visited list inserts 12354
- Visited list pruned 2032
- Visited list contains 10322
- Visited list hash collisions 2034
- Visited list used hash buckets 10320
- Generated 48710 search nodes
  Calculated heuristic for 36051 nodes
  One modifications 11086
  Effectless actions 1573
- including 11086 one modification actions
- including 0 one modification methods
- and       1573 progressions of effectless actions
- Generated 167679 nodes per second
- Final fringe contains 12112 nodes
- Status: Solved
- Found solution of length 41
- Total costs of actions: 18
==>
9 noop[truck-0,city-loc-0]
4208 pick-up[truck-0,city-loc-0,package-0,capacity-2,capacity-3]
4267 drive[truck-0,city-loc-0,city-loc-3]
4275 pick-up[truck-0,city-loc-3,package-2,capacity-1,capacity-2]
7357 drive[truck-0,city-loc-3,city-loc-2]
7618 pick-up[truck-0,city-loc-2,package-3,capacity-0,capacity-1]
7623 drive[truck-0,city-loc-2,city-loc-1]
7624 noop[truck-0,city-loc-1]
11679 drop[truck-0,city-loc-1,package-2,capacity-0,capacity-1]
11680 pick-up[truck-0,city-loc-1,package-1,capacity-0,capacity-1]
31303 drive[truck-0,city-loc-1,city-loc-2]
31304 drive[truck-0,city-loc-2,city-loc-3]
31305 drive[truck-0,city-loc-3,city-loc-0]
31306 noop[truck-0,city-loc-0]
48701 drop[truck-0,city-loc-0,package-1,capacity-0,capacity-1]
48703 drop[truck-0,city-loc-0,package-3,capacity-1,capacity-2]
48704 drive[truck-0,city-loc-0,city-loc-3]
48706 drop[truck-0,city-loc-3,package-0,capacity-2,capacity-3]
root 0
48705 unload[truck-0,city-loc-3,package-0] -> m-unload 48706
31314 unload[truck-0,city-loc-0,package-3] -> m-unload 48703
31310 unload[truck-0,city-loc-0,package-1] -> m-unload 48701
31302 get-to[truck-0,city-loc-2] -> m-drive-to 31303
27375 get-to[truck-0,city-loc-3] -> m-drive-to-via 31302 31304
11687 get-to[truck-0,city-loc-0] -> m-drive-to-via 27375 31305
11678 load[truck-0,city-loc-1,package-1] -> m-load 11680
11672 unload[truck-0,city-loc-1,package-2] -> m-unload 11679
7622 get-to[truck-0,city-loc-0] -> m-i-am-there 31306
7615 load[truck-0,city-loc-2,package-3] -> m-load 7618
7356 get-to[truck-0,city-loc-1] -> m-i-am-there 7624
4269 load[truck-0,city-loc-3,package-2] -> m-load 4275
4215 get-to[truck-0,city-loc-3] -> m-drive-to 48704
4198 get-to[truck-0,city-loc-3] -> m-drive-to 4267
4126 load[truck-0,city-loc-0,package-0] -> m-load 4208
4123 get-to[truck-0,city-loc-1] -> m-drive-to 7623
18 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 4198 4269
13 get-to[truck-0,city-loc-2] -> m-drive-to 7357
8 get-to[truck-0,city-loc-0] -> m-i-am-there 9
6 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 8 4126
4 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 13 7615
2 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 4123 11678
0 __top[] -> <<<<__top_method;deliver[package-3,city-loc-0];m-deliver;3;0,1,2,-1,-2,-3>;deliver[package-2,city-loc-1];m-deliver;2;0,1,-1,-2,-3,3,4,5>;deliver[package-1,city-loc-0];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7>;deliver[package-0,city-loc-3];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9> 6 4215 48705 2 11687 31310 18 7356 11672 4 7622 31314
<==
