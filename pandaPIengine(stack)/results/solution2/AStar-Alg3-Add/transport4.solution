Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/transport4.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 47 actions.
- Domain contains 68 tasks.
- Domain contains 63 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 64
Search Results
- Search time 0.007 seconds
- Visited list time 0.001192 seconds
- Visited list inserts 240
- Visited list pruned 10
- Visited list contains 230
- Visited list hash collisions 10
- Visited list used hash buckets 230
- Generated 952 search nodes
  Calculated heuristic for 742 nodes
  One modifications 174
  Effectless actions 36
- including 174 one modification actions
- including 0 one modification methods
- and       36 progressions of effectless actions
- Generated 106000 nodes per second
- Final fringe contains 280 nodes
- Status: Solved
- Found solution of length 41
- Total costs of actions: 18
==>
9 noop[truck-0,city-loc-0]
51 pick-up[truck-0,city-loc-0,package-0,capacity-2,capacity-3]
113 drive[truck-0,city-loc-0,city-loc-3]
130 pick-up[truck-0,city-loc-3,package-2,capacity-1,capacity-2]
338 drive[truck-0,city-loc-3,city-loc-3]
382 drop[truck-0,city-loc-3,package-0,capacity-1,capacity-2]
383 drive[truck-0,city-loc-3,city-loc-2]
393 pick-up[truck-0,city-loc-2,package-3,capacity-1,capacity-2]
398 drive[truck-0,city-loc-2,city-loc-1]
399 noop[truck-0,city-loc-1]
471 drop[truck-0,city-loc-1,package-2,capacity-1,capacity-2]
472 pick-up[truck-0,city-loc-1,package-1,capacity-1,capacity-2]
933 drive[truck-0,city-loc-1,city-loc-2]
934 drive[truck-0,city-loc-2,city-loc-3]
935 drive[truck-0,city-loc-3,city-loc-0]
936 noop[truck-0,city-loc-0]
947 drop[truck-0,city-loc-0,package-1,capacity-1,capacity-2]
948 drop[truck-0,city-loc-0,package-3,capacity-2,capacity-3]
root 0
946 unload[truck-0,city-loc-0,package-3] -> m-unload 948
941 unload[truck-0,city-loc-0,package-1] -> m-unload 947
932 get-to[truck-0,city-loc-2] -> m-drive-to 933
585 get-to[truck-0,city-loc-3] -> m-drive-to-via 932 934
477 get-to[truck-0,city-loc-0] -> m-drive-to-via 585 935
470 load[truck-0,city-loc-1,package-1] -> m-load 472
467 unload[truck-0,city-loc-1,package-2] -> m-unload 471
397 get-to[truck-0,city-loc-0] -> m-i-am-there 936
387 load[truck-0,city-loc-2,package-3] -> m-load 393
351 unload[truck-0,city-loc-3,package-0] -> m-unload 382
132 get-to[truck-0,city-loc-1] -> m-i-am-there 399
125 load[truck-0,city-loc-3,package-2] -> m-load 130
112 get-to[truck-0,city-loc-3] -> m-drive-to 338
46 get-to[truck-0,city-loc-2] -> m-drive-to 383
39 get-to[truck-0,city-loc-3] -> m-drive-to 113
16 get-to[truck-0,city-loc-1] -> m-drive-to 398
13 load[truck-0,city-loc-0,package-0] -> m-load 51
11 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 39 125
8 get-to[truck-0,city-loc-0] -> m-i-am-there 9
6 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 8 13
4 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 46 387
2 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 16 470
0 __top[] -> <<<<__top_method;deliver[package-3,city-loc-0];m-deliver;3;0,1,2,-1,-2,-3>;deliver[package-2,city-loc-1];m-deliver;2;0,1,-1,-2,-3,3,4,5>;deliver[package-1,city-loc-0];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7>;deliver[package-0,city-loc-3];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9> 6 112 351 2 477 941 11 132 467 4 397 946
<==
