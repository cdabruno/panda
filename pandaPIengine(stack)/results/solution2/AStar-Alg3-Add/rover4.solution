Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/rover4.sas.
- State has 29 bits divided into 29 mutex groups.
- Domain contains 61 actions.
- Domain contains 81 tasks.
- Domain contains 61 methods.
- The initial state contains 14 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 81
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Utilizing heuristics.
- A* Search
- Distance G is "modification depth"
- Starting state heuristic value: 33
Search Results
- Search time 0.002 seconds
- Visited list time 0.000164 seconds
- Visited list inserts 29
- Visited list pruned 0
- Visited list contains 29
- Visited list hash collisions 0
- Visited list used hash buckets 29
- Generated 169 search nodes
  Calculated heuristic for 109 nodes
  One modifications 19
  Effectless actions 41
- including 19 one modification actions
- including 0 one modification methods
- and       41 progressions of effectless actions
- Generated 54500 nodes per second
- Final fringe contains 56 nodes
- Status: Solved
- Found solution of length 33
- Total costs of actions: 8
==>
10 __method_precondition_m-navigate_abs-1[rover1,waypoint2]
17 __method_precondition_m-navigate_abs-1[rover0,waypoint3]
21 __method_precondition_m-empty-store-1[rover0store]
57 calibrate[rover1,camera0,objective0,waypoint2]
68 __method_precondition_m-navigate_abs-1[rover1,waypoint2]
77 sample_soil[rover0,rover0store,waypoint3]
84 __method_precondition_m-navigate_abs-1[rover0,waypoint3]
85 communicate_soil_data[rover0,general,waypoint3,waypoint3,waypoint2]
86 take_image[rover1,waypoint2,objective0,camera0,high_res]
143 __method_precondition_m-navigate_abs-3[rover1,waypoint2,waypoint1]
144 navigate[rover1,waypoint2,waypoint1]
145 __method_precondition_m-navigate_abs-2[rover1,waypoint1]
146 communicate_image_data[rover1,general,objective0,high_res,waypoint1,waypoint2]
154 __method_precondition_m-empty-store-1[rover1store]
155 sample_rock[rover1,rover1store,waypoint1]
162 __method_precondition_m-navigate_abs-2[rover1,waypoint1]
163 communicate_rock_data[rover1,general,waypoint1,waypoint1,waypoint2]
root 0
161 navigate_abs[rover1,waypoint1] -> m-navigate_abs-2 162
157 m-send_rock_data_splitted_12[rover1,general,waypoint1] -> <_splitting_method_m-send_rock_data_splitted_12;m-send_rock_data_splitted_7[rover1,general,waypoint1,waypoint1];_splitting_method_m-send_rock_data_splitted_7;1;0,-1> 161 163
153 empty-store[rover1store,rover1] -> m-empty-store-1 154
142 navigate_abs[rover1,waypoint1] -> m-navigate_abs-3 143 144
133 m-send_image_data_splitted_11[rover1,general,objective0,high_res] -> <_splitting_method_m-send_image_data_splitted_11;m-send_image_data_splitted_6[rover1,general,objective0,high_res,waypoint1];_splitting_method_m-send_image_data_splitted_6;1;0,-1> 142 146
83 navigate_abs[rover0,waypoint3] -> m-navigate_abs-2 84
80 m-send_soil_data_splitted_13[rover0,general,waypoint3] -> <_splitting_method_m-send_soil_data_splitted_13;m-send_soil_data_splitted_8[rover0,general,waypoint3,waypoint3];_splitting_method_m-send_soil_data_splitted_8;1;0,-1> 83 85
67 navigate_abs[rover1,waypoint2] -> m-navigate_abs-2 68
61 m-get_image_data_splitted_2[rover1,objective0,camera0,high_res] -> _splitting_method_m-get_image_data_splitted_2 67 86
43 navigate_abs[rover1,waypoint1] -> m-navigate_abs-2 145
20 empty-store[rover0store,rover0] -> m-empty-store-1 21
16 navigate_abs[rover0,waypoint3] -> m-navigate_abs-2 17
9 navigate_abs[rover1,waypoint2] -> m-navigate_abs-2 10
6 m-calibrate_abs_splitted_9[rover1,camera0] -> <_splitting_method_m-calibrate_abs_splitted_9;m-calibrate_abs_splitted_1[rover1,camera0,waypoint2];_splitting_method_m-calibrate_abs_splitted_1;1;0,-1> 9 57
1 get_soil_data[waypoint3] -> <<m-get_soil_data;m-get_soil_data_splitted_4[rover0,waypoint3];_splitting_method_m-get_soil_data_splitted_4;1;0,-1,-2,2>;send_soil_data[rover0,waypoint3];m-send_soil_data;3;0,1,2,-1> 16 20 77 80
0 __top[] -> <<<<<<<__top_method;get_image_data[objective0,high_res];m-get_image_data;2;0,1,-1,-2>;m-get_image_data_splitted_10[rover1,high_res,objective0];_splitting_method_m-get_image_data_splitted_10;2;0,1,-1,-2,3>;calibrate_abs[rover1,camera0];m-calibrate_abs;2;0,1,-1,3,4>;send_image_data[rover1,objective0,high_res];m-send_image_data;4;0,1,2,3,-1>;get_rock_data[waypoint1];m-get_rock_data;1;0,-1,-2,-3,2,3,4>;m-get_rock_data_splitted_3[rover1,waypoint1];_splitting_method_m-get_rock_data_splitted_3;2;0,1,-1,-2,3,4,5,6>;send_rock_data[rover1,waypoint1];m-send_rock_data;4;0,1,2,3,-1,5,6,7> 1 43 153 155 157 6 61 133
<==
