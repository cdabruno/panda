Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/satellite20.sas.
- State has 37 bits divided into 37 mutex groups.
- Domain contains 123 actions.
- Domain contains 139 tasks.
- Domain contains 202 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 139
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Stack Search
- Using Stack Algorithm.
Search Results
- Search time 0.146 seconds
- Visited list time 0.0326 seconds
- Visited list inserts 9859
- Visited list pruned 4293
- Visited list contains 5566
- Visited list hash collisions 4296
- Visited list used hash buckets 5563
- Generated 26981 search nodes
  Calculated heuristic for 22467 nodes
  One modifications 2979
  Effectless actions 1535
- including 2979 one modification actions
- including 0 one modification methods
- and       1535 progressions of effectless actions
- Generated 153883 nodes per second
- Final fringe contains 70 nodes
- Status: Solved
- Found solution of length 30
- Total costs of actions: 19
==>
26906 switch_on[instrument0,satellite0]
26914 calibrate[satellite0,instrument0,groundstation0]
26915 turn_to[satellite0,phenomenon3,groundstation0]
26916 take_image[satellite0,phenomenon3,instrument0,image1]
26921 turn_to[satellite0,phenomenon5,phenomenon3]
26922 take_image[satellite0,phenomenon5,instrument0,image4]
26925 switch_on[instrument5,satellite3]
26958 turn_to[satellite3,groundstation0,planet2]
26961 calibrate[satellite3,instrument5,groundstation0]
26963 turn_to[satellite3,planet6,groundstation0]
26964 take_image[satellite3,planet6,instrument5,spectrograph0]
26965 switch_off[instrument5,satellite3]
26966 switch_on[instrument4,satellite3]
26972 turn_to[satellite3,star1,planet6]
26973 calibrate[satellite3,instrument4,star1]
26974 turn_to[satellite3,planet2,star1]
26975 take_image[satellite3,planet2,instrument4,infrared2]
26976 turn_to[satellite3,planet4,planet2]
26977 take_image[satellite3,planet4,instrument4,infrared2]
root 0
26971 auto_calibrate[satellite3,instrument4] -> method6 26972 26973
26952 auto_calibrate[satellite3,instrument5] -> method6 26958 26961
26910 auto_calibrate[satellite0,instrument0] -> method7 26914
26816 activate_instrument[satellite3,instrument4] -> method4 26965 26966 26971
25897 do_observation[planet2,infrared2] -> method0 26816 26974 26975
25876 activate_instrument[satellite3,instrument5] -> method5 26925 26952
20137 do_observation[phenomenon5,image4] -> <method0;activate_instrument[satellite0,instrument0];method5;0;-1,-2,1,2> 26906 26910 26921 26922
81 do_observation[planet6,spectrograph0] -> method0 25876 26963 26964
50 do_observation[planet4,infrared2] -> <method1;method1_splitted_1[satellite3,planet4,infrared2];_splitting_method_method1_splitted_1;1;0,-1> 26976 26977
21 do_observation[phenomenon3,image1] -> <method1;method1_splitted_1[satellite0,phenomenon3,image1];_splitting_method_method1_splitted_1;1;0,-1> 26915 26916
0 __top[] -> __top_method 25897 21 50 20137 81
<==
