Random seed: 42
Time limit: 20 seconds
Reading input from results/grounded/woodworking9.sas.
- State has 76 bits divided into 76 mutex groups.
- Domain contains 400 actions.
- Domain contains 672 tasks.
- Domain contains 1142 methods.
- The initial state contains 11 set bits.
- The initial task is "__top[]".
- State-based goal contains 14 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 672
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Stack Search
- Using Stack Algorithm.
Search Results
- Search time 0.005 seconds
- Visited list time 0.000112 seconds
- Visited list inserts 31
- Visited list pruned 0
- Visited list contains 31
- Visited list hash collisions 0
- Visited list used hash buckets 31
- Generated 181 search nodes
  Calculated heuristic for 178 nodes
  One modifications 3
  Effectless actions 0
- including 3 one modification actions
- including 0 one modification methods
- and       0 progressions of effectless actions
- Generated 35600 nodes per second
- Final fringe contains 59 nodes
- Status: Solved
- Found solution of length 32
- Total costs of actions: 9
==>
129 do_saw_medium[b3,p7,mahogany,smooth,s3,s2,s1]
141 do_saw_large[b3,p8,mahogany,smooth,s3,s1,s2,s0]
148 do_saw_small[b3,p6,mahogany,smooth,s3,s2]
156 do_plane[p5,rough,blue,glazed]
164 do_glaze[p8,glazer0,mauve]
168 do_spray_varnish[p6,spray_varnisher0,natural,smooth]
171 do_spray_varnish[p5,spray_varnisher0,natural,smooth]
172 do_grind[p7,smooth,natural,untreated,untreated]
178 do_immersion_varnish[p7,immersion_varnisher0,mauve,verysmooth]
root 0
177 do_colour[p7,mauve,immersion_varnisher0] -> method0 178
173 method14_splitted_4[p7,mauve] -> _splitting_method_method14_splitted_4 177
161 method12_splitted_3[p5,natural] -> <_splitting_method_method12_splitted_3;do_colour[p5,natural,spray_varnisher0];method1;0;-1> 171
154 do_colour[p6,natural,spray_varnisher0] -> method1 168
152 method11_splitted_2[p6,natural] -> _splitting_method_method11_splitted_2 154
146 method11_splitted_2[p8,mauve] -> <_splitting_method_method11_splitted_2;do_colour[p8,mauve,glazer0];method2;0;-1> 164
138 grindNplane[p7,smooth,natural,untreated,verysmooth,natural,untreated] -> method3 172
137 method14_splitted_9[p7,smooth,verysmooth,untreated] -> _splitting_method_method14_splitted_9 138
124 do_saw[b3,p7,mahogany,smooth] -> method8 129
123 method14_splitted_12[p7,smooth] -> <_splitting_method_method14_splitted_12;cut_and_saw[b3,p7,mahogany,smooth];method10;0;-1> 124
119 do_saw[b3,p6,mahogany,smooth] -> method5 148
118 method11_splitted_7[p8,smooth] -> <<_splitting_method_method11_splitted_7;cut_and_saw[b3,p8,mahogany,smooth];method10;0;-1>;do_saw[b3,p8,mahogany,smooth];method9;0;-1> 141
116 cut_and_saw[b3,p6,mahogany,smooth] -> method10 119
114 method11_splitted_7[p6,smooth] -> _splitting_method_method11_splitted_7 116
98 method12_splitted_8[p5,rough,smooth,untreated] -> <_splitting_method_method12_splitted_8;grindNplane[p5,rough,blue,glazed,smooth,natural,untreated];method7;0;-1> 156
96 process[p8,mauve,smooth,smooth] -> method11 118 146
93 process[p6,natural,smooth,smooth] -> method11 114 152
76 __top_method_splitted_14[p8] -> _splitting_method___top_method_splitted_14 96
60 __top_method_splitted_1[p5,rough,smooth] -> <_splitting_method___top_method_splitted_1;process[p5,natural,rough,smooth];method12;0;-1,-2> 98 161
55 __top_method_splitted_6[p6] -> _splitting_method___top_method_splitted_6 93
31 process[p7,mauve,smooth,verysmooth] -> method14 123 137 173
6 __top_method_splitted_11[p7] -> _splitting_method___top_method_splitted_11 31
0 __top[] -> __top_method 55 6 76 60
<==
