Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite4.sas.
- State has 9 bits divided into 9 mutex groups.
- Domain contains 17 actions.
- Domain contains 24 tasks.
- Domain contains 29 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 24
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: cost optimal
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.005 seconds
- Visited list time 0.000988 seconds
- Visited list inserts 537
- Visited list pruned 27
- Visited list contains 510
- Visited list hash collisions 0
- Generated 2648 search nodes
  Calculated heuristic for 1612 nodes
  One modifications 973
  Effectless actions 63
- including 973 one modification actions
- including 0 one modification methods
- and       63 progressions of effectless actions
- Generated 322400 nodes per second
- Final fringe contains 3 nodes
- Status: Solved
- Found solution of length 18
- Total costs of actions: 11
==>
2522 switch_on[instrument01,satellite0]
2578 turn_to[satellite0,GroundStation0,Phenomenon6]
2606 calibrate[satellite0,instrument01,GroundStation0]
2608 turn_to[satellite0,Phenomenon4,GroundStation0]
2609 take_image[satellite0,Phenomenon4,instrument01,thermograph]
2610 switch_off[instrument01,satellite0]
2611 switch_on[instrument02,satellite0]
2642 turn_to[satellite0,GroundStation0,Phenomenon4]
2643 calibrate[satellite0,instrument02,GroundStation0]
2644 turn_to[satellite0,Star5,GroundStation0]
2645 take_image[satellite0,Star5,instrument02,x_ray]
root 0
2641 auto_calibrate[satellite0,instrument02] -> method6 2642 2643
2542 auto_calibrate[satellite0,instrument01] -> method6 2578 2606
2521 activate_instrument[satellite0,instrument02] -> method4 2610 2611 2641
2520 activate_instrument[satellite0,instrument01] -> method5 2522 2542
1485 do_observation[Phenomenon4,thermograph] -> method0 2520 2608 2609
7 do_observation[Star5,x_ray] -> method0 2521 2644 2645
0 __top[] -> __top_method 1485 7
<==
