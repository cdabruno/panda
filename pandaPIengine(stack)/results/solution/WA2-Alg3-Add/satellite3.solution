Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite3.sas.
- State has 7 bits divided into 7 mutex groups.
- Domain contains 13 actions.
- Domain contains 17 tasks.
- Domain contains 21 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 17
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: cost optimal
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.002 seconds
- Visited list time 0.000167 seconds
- Visited list inserts 64
- Visited list pruned 0
- Visited list contains 64
- Visited list hash collisions 0
- Generated 367 search nodes
  Calculated heuristic for 238 nodes
  One modifications 119
  Effectless actions 10
- including 119 one modification actions
- including 0 one modification methods
- and       10 progressions of effectless actions
- Generated 119000 nodes per second
- Final fringe contains 8 nodes
- Status: Solved
- Found solution of length 11
- Total costs of actions: 7
==>
234 switch_on[instrument0,satellite0]
357 turn_to[satellite0,GroundStation2,Phenomenon6]
358 calibrate[satellite0,instrument0,GroundStation2]
359 turn_to[satellite0,Phenomenon4,GroundStation2]
360 take_image[satellite0,Phenomenon4,instrument0,thermograph0]
361 turn_to[satellite0,Star5,Phenomenon4]
362 take_image[satellite0,Star5,instrument0,thermograph0]
root 0
356 auto_calibrate[satellite0,instrument0] -> method6 357 358
233 do_observation[Phenomenon4,thermograph0] -> <method0;activate_instrument[satellite0,instrument0];method5;0;-1,-2,1,2> 234 356 359 360
3 do_observation[Star5,thermograph0] -> method1 361 362
0 __top[] -> __top_method 233 3
<==
