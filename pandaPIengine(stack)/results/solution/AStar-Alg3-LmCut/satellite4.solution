Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite4.sas.
- State has 9 bits divided into 9 mutex groups.
- Domain contains 17 actions.
- Domain contains 24 tasks.
- Domain contains 29 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 24
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.008 seconds
- Visited list time 0.001211 seconds
- Visited list inserts 612
- Visited list pruned 32
- Visited list contains 580
- Visited list hash collisions 0
- Generated 3102 search nodes
  Calculated heuristic for 1850 nodes
  One modifications 1158
  Effectless actions 94
- including 1158 one modification actions
- including 0 one modification methods
- and       94 progressions of effectless actions
- Generated 231250 nodes per second
- Final fringe contains 3 nodes
- Status: Solved
- Found solution of length 18
- Total costs of actions: 11
==>
2692 switch_on[instrument01,satellite0]
2729 turn_to[satellite0,GroundStation0,Phenomenon6]
2757 calibrate[satellite0,instrument01,GroundStation0]
2759 turn_to[satellite0,Phenomenon4,GroundStation0]
2760 take_image[satellite0,Phenomenon4,instrument01,thermograph]
2761 switch_off[instrument01,satellite0]
2762 switch_on[instrument02,satellite0]
3096 turn_to[satellite0,GroundStation0,Phenomenon4]
3097 calibrate[satellite0,instrument02,GroundStation0]
3098 turn_to[satellite0,Star5,GroundStation0]
3099 take_image[satellite0,Star5,instrument02,x_ray]
root 0
3095 auto_calibrate[satellite0,instrument02] -> method6 3096 3097
2693 auto_calibrate[satellite0,instrument01] -> method6 2729 2757
2691 activate_instrument[satellite0,instrument01] -> method5 2692 2693
1585 do_observation[Phenomenon4,thermograph] -> method0 2691 2759 2760
1280 activate_instrument[satellite0,instrument02] -> method4 2761 2762 3095
7 do_observation[Star5,x_ray] -> method0 1280 3098 3099
0 __top[] -> __top_method 1585 7
<==
