Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite21.sas.
- State has 17 bits divided into 17 mutex groups.
- Domain contains 67 actions.
- Domain contains 76 tasks.
- Domain contains 120 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 76
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.004 seconds
- Visited list time 0.000425 seconds
- Visited list inserts 74
- Visited list pruned 5
- Visited list contains 69
- Visited list hash collisions 0
- Generated 698 search nodes
  Calculated heuristic for 357 nodes
  One modifications 317
  Effectless actions 24
- including 317 one modification actions
- including 0 one modification methods
- and       24 progressions of effectless actions
- Generated 89250 nodes per second
- Final fringe contains 160 nodes
- Status: Solved
- Found solution of length 23
- Total costs of actions: 15
==>
654 switch_on[instrument0,satellite0]
678 turn_to[satellite0,star0,star3]
684 calibrate[satellite0,instrument0,star0]
685 turn_to[satellite0,star4,star0]
686 take_image[satellite0,star4,instrument0,spectrograph0]
687 turn_to[satellite0,star7,star4]
688 take_image[satellite0,star7,instrument0,spectrograph0]
689 turn_to[satellite0,star3,star7]
690 take_image[satellite0,star3,instrument0,infrared1]
691 turn_to[satellite0,phenomenon5,star3]
692 take_image[satellite0,phenomenon5,instrument0,spectrograph0]
693 turn_to[satellite0,phenomenon6,phenomenon5]
694 take_image[satellite0,phenomenon6,instrument0,infrared1]
695 turn_to[satellite0,star2,phenomenon6]
696 take_image[satellite0,star2,instrument0,infrared1]
root 0
658 auto_calibrate[satellite0,instrument0] -> method6 678 684
309 do_observation[star2,infrared1] -> <method0;activate_instrument[satellite0,instrument0];method5;0;-1,-2,1,2> 654 658 695 696
70 do_observation[star3,infrared1] -> <method1;method1_splitted_1[satellite0,star3,infrared1];_splitting_method_method1_splitted_1;1;0,-1> 689 690
53 do_observation[star4,spectrograph0] -> <method1;method1_splitted_1[satellite0,star4,spectrograph0];_splitting_method_method1_splitted_1;1;0,-1> 685 686
38 do_observation[star7,spectrograph0] -> <method1;method1_splitted_1[satellite0,star7,spectrograph0];_splitting_method_method1_splitted_1;1;0,-1> 687 688
21 do_observation[phenomenon6,infrared1] -> <method1;method1_splitted_1[satellite0,phenomenon6,infrared1];_splitting_method_method1_splitted_1;1;0,-1> 693 694
4 do_observation[phenomenon5,spectrograph0] -> <method1;method1_splitted_1[satellite0,phenomenon5,spectrograph0];_splitting_method_method1_splitted_1;1;0,-1> 691 692
0 __top[] -> __top_method 309 70 53 4 21 38
<==
