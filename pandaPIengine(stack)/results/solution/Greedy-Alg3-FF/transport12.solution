Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/transport12.sas.
- State has 32 bits divided into 32 mutex groups.
- Domain contains 82 actions.
- Domain contains 129 tasks.
- Domain contains 131 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 121
- The problem is cyclic
- Number of cyclic SCCs: 2
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
   1s visitime    0.19s generated nodes    135048 nodes/sec  131497 cur h   20 mod.depth   36 inserts     46804 duplicates     10829 size     35975 hash fail      0
   2s visitime    0.39s generated nodes    260094 nodes/sec  126999 cur h   19 mod.depth   38 inserts     94570 duplicates     23912 size     70658 hash fail      0
   3s visitime    0.59s generated nodes    385158 nodes/sec  126033 cur h   21 mod.depth   38 inserts    138927 duplicates     35194 size    103733 hash fail      0
   4s visitime    0.80s generated nodes    510221 nodes/sec  124656 cur h   20 mod.depth   37 inserts    183072 duplicates     45495 size    137577 hash fail      0
   5s visitime    1.01s generated nodes    635272 nodes/sec  124270 cur h   17 mod.depth   36 inserts    228021 duplicates     56113 size    171908 hash fail      0
   6s visitime    1.21s generated nodes    800423 nodes/sec  130553 cur h   18 mod.depth   36 inserts    277727 duplicates     69734 size    207993 hash fail      0
   7s visitime    1.41s generated nodes    955519 nodes/sec  133919 cur h   19 mod.depth   39 inserts    323643 duplicates     83036 size    240607 hash fail      0
   8s visitime    1.61s generated nodes   1105637 nodes/sec  135911 cur h   19 mod.depth   38 inserts    366803 duplicates     94823 size    271980 hash fail      0
   9s visitime    1.83s generated nodes   1250714 nodes/sec  136511 cur h   19 mod.depth   37 inserts    412589 duplicates    107796 size    304793 hash fail      0
Search Results
- Search time 9.37 seconds
- Visited list time 1.87 seconds
- Visited list inserts 422359
- Visited list pruned 110860
- Visited list contains 311499
- Visited list hash collisions 0
- Generated 1285409 search nodes
  Calculated heuristic for 1138433 nodes
  One modifications 127195
  Effectless actions 19781
- including 127195 one modification actions
- including 0 one modification methods
- and       19781 progressions of effectless actions
- Generated 121536 nodes per second
- Final fringe contains 713647 nodes
- Status: Solved
- Found solution of length 45
- Total costs of actions: 18
==>
34 noop[truck-1,city-loc-1]
46 noop[truck-1,city-loc-1]
59 pick-up[truck-1,city-loc-1,package-1,capacity-1,capacity-2]
67 pick-up[truck-1,city-loc-1,package-3,capacity-0,capacity-1]
625594 drive[truck-1,city-loc-1,city-loc-2]
1275256 drop[truck-1,city-loc-2,package-1,capacity-0,capacity-1]
1275257 drive[truck-0,city-loc-1,city-loc-3]
1275258 noop[truck-0,city-loc-3]
1284838 drive[truck-1,city-loc-2,city-loc-3]
1284844 drop[truck-1,city-loc-3,package-3,capacity-1,capacity-2]
1284845 pick-up[truck-0,city-loc-3,package-0,capacity-1,capacity-2]
1285355 pick-up[truck-0,city-loc-3,package-2,capacity-0,capacity-1]
1285388 drive[truck-0,city-loc-3,city-loc-2]
1285401 drop[truck-0,city-loc-2,package-2,capacity-0,capacity-1]
1285402 drive[truck-0,city-loc-2,city-loc-1]
1285403 drive[truck-0,city-loc-1,city-loc-4]
1285404 drive[truck-0,city-loc-4,city-loc-0]
1285406 drop[truck-0,city-loc-0,package-0,capacity-1,capacity-2]
root 0
1285405 unload[truck-0,city-loc-0,package-0] -> m-unload 1285406
1285393 unload[truck-0,city-loc-2,package-2] -> m-unload 1285401
1285387 get-to[truck-0,city-loc-2] -> m-drive-to 1285388
1285354 get-to[truck-0,city-loc-1] -> m-drive-to 1285402
1285071 get-to[truck-0,city-loc-4] -> m-drive-to-via 1285354 1285403
1284853 get-to[truck-0,city-loc-0] -> m-drive-to-via 1285071 1285404
1284840 unload[truck-1,city-loc-3,package-3] -> m-unload 1284844
1275262 load[truck-0,city-loc-3,package-2] -> m-load 1285355
1275260 load[truck-0,city-loc-3,package-0] -> m-load 1284845
625596 unload[truck-1,city-loc-2,package-1] -> m-unload 1275256
69 get-to[truck-1,city-loc-3] -> m-drive-to 1284838
61 get-to[truck-1,city-loc-2] -> m-drive-to 625594
53 load[truck-1,city-loc-1,package-1] -> m-load 59
52 load[truck-1,city-loc-1,package-3] -> m-load 67
45 get-to[truck-1,city-loc-1] -> m-i-am-there 46
40 m-deliver_splitted_1[truck-1,package-3] -> _splitting_method_m-deliver_splitted_1 45 52
33 get-to[truck-1,city-loc-1] -> m-i-am-there 34
22 get-to[truck-0,city-loc-3] -> m-i-am-there 1275258
19 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 22 1275260
17 m-deliver_splitted_1[truck-1,package-1] -> _splitting_method_m-deliver_splitted_1 33 53
14 deliver[package-0,city-loc-0] -> m-deliver 19 1284853 1285405
10 get-to[truck-0,city-loc-3] -> m-drive-to 1275257
8 deliver[package-3,city-loc-3] -> m-deliver 40 69 1284840
6 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 10 1275262
4 deliver[package-2,city-loc-2] -> m-deliver 6 1285387 1285393
1 deliver[package-1,city-loc-2] -> m-deliver 17 61 625596
0 __top[] -> __top_method 14 1 4 8
<==
