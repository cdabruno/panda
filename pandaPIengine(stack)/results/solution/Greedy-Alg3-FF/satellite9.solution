Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite9.sas.
- State has 11 bits divided into 11 mutex groups.
- Domain contains 24 actions.
- Domain contains 34 tasks.
- Domain contains 46 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 34
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.005 seconds
- Visited list time 0.000727 seconds
- Visited list inserts 133
- Visited list pruned 0
- Visited list contains 133
- Visited list hash collisions 0
- Generated 649 search nodes
  Calculated heuristic for 460 nodes
  One modifications 178
  Effectless actions 11
- including 178 one modification actions
- including 0 one modification methods
- and       11 progressions of effectless actions
- Generated 92000 nodes per second
- Final fringe contains 300 nodes
- Status: Solved
- Found solution of length 27
- Total costs of actions: 17
==>
463 switch_on[instrument02,satellite0]
611 turn_to[satellite0,GroundStation0,Phenomenon6]
614 calibrate[satellite0,instrument02,GroundStation0]
616 turn_to[satellite0,Star5,GroundStation0]
617 take_image[satellite0,Star5,instrument02,x_ray]
618 switch_off[instrument02,satellite0]
619 switch_on[instrument01,satellite0]
631 turn_to[satellite0,GroundStation0,Star5]
634 calibrate[satellite0,instrument01,GroundStation0]
636 turn_to[satellite0,Phenomenon4,GroundStation0]
637 take_image[satellite0,Phenomenon4,instrument01,thermograph]
638 switch_off[instrument01,satellite0]
639 switch_on[instrument03,satellite0]
642 turn_to[satellite0,GroundStation0,Phenomenon4]
643 calibrate[satellite0,instrument03,GroundStation0]
644 turn_to[satellite0,Phenomenon6,GroundStation0]
645 take_image[satellite0,Phenomenon6,instrument03,hd_video]
root 0
641 auto_calibrate[satellite0,instrument03] -> method6 642 643
620 auto_calibrate[satellite0,instrument01] -> method6 631 634
606 auto_calibrate[satellite0,instrument02] -> method6 611 614
462 activate_instrument[satellite0,instrument03] -> method4 638 639 641
147 do_observation[Phenomenon6,hd_video] -> method0 462 644 645
127 activate_instrument[satellite0,instrument01] -> method4 618 619 620
94 activate_instrument[satellite0,instrument02] -> method5 463 606
22 do_observation[Star5,x_ray] -> method0 94 616 617
5 do_observation[Phenomenon4,thermograph] -> method0 127 636 637
0 __top[] -> __top_method 5 22 147
<==
