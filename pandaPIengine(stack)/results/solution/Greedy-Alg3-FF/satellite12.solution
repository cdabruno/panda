Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite12.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 41 actions.
- Domain contains 55 tasks.
- Domain contains 74 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 55
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.005 seconds
- Visited list time 0.000618 seconds
- Visited list inserts 158
- Visited list pruned 2
- Visited list contains 156
- Visited list hash collisions 0
- Generated 711 search nodes
  Calculated heuristic for 518 nodes
  One modifications 178
  Effectless actions 15
- including 178 one modification actions
- including 0 one modification methods
- and       15 progressions of effectless actions
- Generated 103600 nodes per second
- Final fringe contains 353 nodes
- Status: Solved
- Found solution of length 27
- Total costs of actions: 17
==>
613 switch_on[instrument01,satellite0]
673 turn_to[satellite0,GroundStation0,Phenomenon6]
676 calibrate[satellite0,instrument01,GroundStation0]
678 turn_to[satellite0,Phenomenon4,GroundStation0]
679 take_image[satellite0,Phenomenon4,instrument01,thermograph]
680 switch_off[instrument01,satellite0]
681 switch_on[instrument02,satellite0]
693 turn_to[satellite0,GroundStation0,Phenomenon4]
696 calibrate[satellite0,instrument02,GroundStation0]
698 turn_to[satellite0,Star5,GroundStation0]
699 take_image[satellite0,Star5,instrument02,x_ray]
700 switch_off[instrument02,satellite0]
701 switch_on[instrument03,satellite0]
704 turn_to[satellite0,GroundStation0,Star5]
705 calibrate[satellite0,instrument03,GroundStation0]
706 turn_to[satellite0,Phenomenon6,GroundStation0]
707 take_image[satellite0,Phenomenon6,instrument03,hd_video]
root 0
703 auto_calibrate[satellite0,instrument03] -> method6 704 705
682 auto_calibrate[satellite0,instrument02] -> method6 693 696
668 auto_calibrate[satellite0,instrument01] -> method6 673 676
612 activate_instrument[satellite0,instrument03] -> method4 700 701 703
57 do_observation[Phenomenon6,hd_video] -> method0 612 706 707
37 activate_instrument[satellite0,instrument02] -> method4 680 681 682
35 activate_instrument[satellite0,instrument01] -> method5 613 668
31 do_observation[Star5,x_ray] -> method0 37 698 699
11 do_observation[Phenomenon4,thermograph] -> method0 35 678 679
0 __top[] -> __top_method 11 31 57
<==
