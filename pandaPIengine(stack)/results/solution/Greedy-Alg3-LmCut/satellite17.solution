Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite17.sas.
- State has 21 bits divided into 21 mutex groups.
- Domain contains 72 actions.
- Domain contains 88 tasks.
- Domain contains 135 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 88
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (1 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.039 seconds
- Visited list time 0.000423 seconds
- Visited list inserts 130
- Visited list pruned 2
- Visited list contains 128
- Visited list hash collisions 0
- Generated 1558 search nodes
  Calculated heuristic for 1313 nodes
  One modifications 224
  Effectless actions 21
- including 224 one modification actions
- including 0 one modification methods
- and       21 progressions of effectless actions
- Generated 33666 nodes per second
- Final fringe contains 904 nodes
- Status: Solved
- Found solution of length 19
- Total costs of actions: 11
==>
1536 switch_on[instrument3,satellite1]
1541 turn_to[satellite1,star0,groundstation1]
1546 calibrate[satellite1,instrument3,star0]
1547 turn_to[satellite1,phenomenon3,star0]
1548 take_image[satellite1,phenomenon3,instrument3,spectrograph0]
1549 turn_to[satellite1,star2,phenomenon3]
1550 take_image[satellite1,star2,instrument3,infrared2]
1551 turn_to[satellite1,phenomenon5,star2]
1552 take_image[satellite1,phenomenon5,instrument3,thermograph1]
1553 turn_to[satellite1,planet4,phenomenon5]
1556 take_image[satellite1,planet4,instrument3,thermograph1]
root 0
1555 method1_splitted_1[satellite1,planet4,thermograph1] -> _splitting_method_method1_splitted_1 1556
1540 auto_calibrate[satellite1,instrument3] -> method6 1541 1546
1535 activate_instrument[satellite1,instrument3] -> method5 1536 1540
626 do_observation[phenomenon5,thermograph1] -> method0 1535 1551 1552
148 do_observation[star2,infrared2] -> <method1;method1_splitted_1[satellite1,star2,infrared2];_splitting_method_method1_splitted_1;1;0,-1> 1549 1550
67 do_observation[planet4,thermograph1] -> method1 1553 1555
9 do_observation[phenomenon3,spectrograph0] -> <method1;method1_splitted_1[satellite1,phenomenon3,spectrograph0];_splitting_method_method1_splitted_1;1;0,-1> 1547 1548
0 __top[] -> __top_method 148 9 67 626
<==
