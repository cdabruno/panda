Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite5.sas.
- State has 14 bits divided into 14 mutex groups.
- Domain contains 26 actions.
- Domain contains 31 tasks.
- Domain contains 41 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 31
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.003 seconds
- Visited list time 5.5e-05 seconds
- Visited list inserts 10
- Visited list pruned 0
- Visited list contains 10
- Visited list hash collisions 0
- Generated 92 search nodes
  Calculated heuristic for 64 nodes
  One modifications 24
  Effectless actions 4
- including 24 one modification actions
- including 0 one modification methods
- and       4 progressions of effectless actions
- Generated 21333 nodes per second
- Final fringe contains 28 nodes
- Status: Solved
- Found solution of length 11
- Total costs of actions: 7
==>
30 switch_on[instrument1,satellite1]
83 turn_to[satellite1,GroundStation1,Phenomenon7]
86 calibrate[satellite1,instrument1,GroundStation1]
87 turn_to[satellite1,Star5,GroundStation1]
88 take_image[satellite1,Star5,instrument1,thermograph]
89 turn_to[satellite1,Phenomenon4,Star5]
90 take_image[satellite1,Phenomenon4,instrument1,thermograph]
root 0
82 auto_calibrate[satellite1,instrument1] -> method6 83 86
29 do_observation[Phenomenon4,thermograph] -> <method0;activate_instrument[satellite1,instrument1];method5;0;-1,-2,1,2> 30 82 89 90
6 do_observation[Star5,thermograph] -> <method1;method1_splitted_1[satellite1,Star5,thermograph];_splitting_method_method1_splitted_1;1;0,-1> 87 88
0 __top[] -> __top_method 29 6
<==
