Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite18.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 78 actions.
- Domain contains 98 tasks.
- Domain contains 155 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 98
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.205 seconds
- Visited list time 0.002454 seconds
- Visited list inserts 708
- Visited list pruned 98
- Visited list contains 610
- Visited list hash collisions 0
- Generated 7650 search nodes
  Calculated heuristic for 6072 nodes
  One modifications 1392
  Effectless actions 186
- including 1392 one modification actions
- including 0 one modification methods
- and       186 progressions of effectless actions
- Generated 29619 nodes per second
- Final fringe contains 4696 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 11
==>
7588 switch_on[instrument3,satellite2]
7627 turn_to[satellite2,star1,planet2]
7630 calibrate[satellite2,instrument3,star1]
7631 turn_to[satellite2,phenomenon3,star1]
7633 take_image[satellite2,phenomenon3,instrument3,thermograph1]
7634 turn_to[satellite2,planet4,phenomenon3]
7635 take_image[satellite2,planet4,instrument3,thermograph1]
7636 turn_to[satellite2,star5,planet4]
7642 take_image[satellite2,star5,instrument3,thermograph1]
7643 turn_to[satellite2,planet2,star5]
7647 take_image[satellite2,planet2,instrument3,image0]
root 0
7646 method1_splitted_1[satellite2,planet2,image0] -> _splitting_method_method1_splitted_1 7647
7641 method1_splitted_1[satellite2,star5,thermograph1] -> _splitting_method_method1_splitted_1 7642
7632 method1_splitted_1[satellite2,phenomenon3,thermograph1] -> _splitting_method_method1_splitted_1 7633
7626 auto_calibrate[satellite2,instrument3] -> method6 7627 7630
7587 do_observation[planet2,image0] -> method1 7643 7646
7549 do_observation[star5,thermograph1] -> method1 7636 7641
218 activate_instrument[satellite2,instrument3] -> method5 7588 7626
105 do_observation[planet4,thermograph1] -> method0 218 7634 7635
7 do_observation[phenomenon3,thermograph1] -> method1 7631 7632
0 __top[] -> __top_method 7587 7 105 7549
<==
