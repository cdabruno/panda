Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/transport5.sas.
- State has 23 bits divided into 23 mutex groups.
- Domain contains 56 actions.
- Domain contains 81 tasks.
- Domain contains 74 methods.
- The initial state contains 7 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 78
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
   1s visitime    0.05s generated nodes     40035 nodes/sec   39560 cur h   21 mod.depth   59 inserts     10619 duplicates      3418 size      7201 hash fail      0
   2s visitime    0.10s generated nodes     80059 nodes/sec   38996 cur h   21 mod.depth   53 inserts     21811 duplicates      7578 size     14233 hash fail      0
   3s visitime    0.16s generated nodes    120077 nodes/sec   38697 cur h   20 mod.depth   54 inserts     33109 duplicates     11948 size     21161 hash fail      0
   4s visitime    0.21s generated nodes    160094 nodes/sec   38679 cur h   22 mod.depth   60 inserts     43682 duplicates     15247 size     28435 hash fail      0
   5s visitime    0.27s generated nodes    200105 nodes/sec   38415 cur h   22 mod.depth   57 inserts     55264 duplicates     19777 size     35487 hash fail      0
   6s visitime    0.33s generated nodes    240133 nodes/sec   38189 cur h   18 mod.depth   56 inserts     66438 duplicates     24093 size     42345 hash fail      0
   7s visitime    0.39s generated nodes    285161 nodes/sec   38587 cur h   16 mod.depth   53 inserts     79406 duplicates     28998 size     50408 hash fail      0
   8s visitime    0.44s generated nodes    325196 nodes/sec   38741 cur h   21 mod.depth   53 inserts     91213 duplicates     34316 size     56897 hash fail      0
   9s visitime    0.49s generated nodes    365232 nodes/sec   38587 cur h   22 mod.depth   41 inserts    103408 duplicates     39408 size     64000 hash fail      0
  10s visitime    0.55s generated nodes    405276 nodes/sec   38675 cur h   22 mod.depth   54 inserts    115076 duplicates     44312 size     70764 hash fail      0
  11s visitime    0.61s generated nodes    445298 nodes/sec   38527 cur h   22 mod.depth   54 inserts    126745 duplicates     49380 size     77365 hash fail      0
  12s visitime    0.67s generated nodes    485324 nodes/sec   38511 cur h   21 mod.depth   52 inserts    137494 duplicates     53088 size     84406 hash fail      0
Search Results
- Search time 13.09 seconds
- Visited list time 0.69 seconds
- Visited list inserts 143055
- Visited list pruned 54959
- Visited list contains 88096
- Visited list hash collisions 0
- Generated 505210 search nodes
  Calculated heuristic for 314120 nodes
  One modifications 175933
  Effectless actions 15157
- including 175933 one modification actions
- including 0 one modification methods
- and       15157 progressions of effectless actions
- Generated 24002 nodes per second
- Final fringe contains 39038 nodes
- Status: Solved
- Found solution of length 66
- Total costs of actions: 30
==>
58 drive[truck-0,city-loc-1,city-loc-1]
61 pick-up[truck-0,city-loc-1,package-4,capacity-2,capacity-3]
93 drive[truck-0,city-loc-1,city-loc-3]
99 drive[truck-0,city-loc-3,city-loc-2]
102 drive[truck-0,city-loc-2,city-loc-0]
103 noop[truck-0,city-loc-0]
104 noop[truck-0,city-loc-0]
139 pick-up[truck-0,city-loc-0,package-0,capacity-1,capacity-2]
499406 drive[truck-0,city-loc-0,city-loc-2]
499588 drop[truck-0,city-loc-2,package-4,capacity-1,capacity-2]
499589 drive[truck-0,city-loc-2,city-loc-3]
499591 drive[truck-0,city-loc-3,city-loc-2]
499595 pick-up[truck-0,city-loc-2,package-1,capacity-1,capacity-2]
499635 drive[truck-0,city-loc-2,city-loc-0]
499638 pick-up[truck-0,city-loc-0,package-2,capacity-0,capacity-1]
505138 drive[truck-0,city-loc-0,city-loc-2]
505139 drive[truck-0,city-loc-2,city-loc-3]
505150 drive[truck-0,city-loc-3,city-loc-1]
505174 drop[truck-0,city-loc-1,package-0,capacity-0,capacity-1]
505175 drive[truck-0,city-loc-1,city-loc-3]
505176 drop[truck-0,city-loc-3,package-1,capacity-1,capacity-2]
505177 drive[truck-0,city-loc-3,city-loc-2]
505178 drive[truck-0,city-loc-2,city-loc-0]
505183 pick-up[truck-0,city-loc-0,package-3,capacity-1,capacity-2]
505195 drive[truck-0,city-loc-0,city-loc-2]
505196 drive[truck-0,city-loc-2,city-loc-3]
505197 drive[truck-0,city-loc-3,city-loc-1]
505198 noop[truck-0,city-loc-1]
505206 drop[truck-0,city-loc-1,package-2,capacity-1,capacity-2]
505207 drop[truck-0,city-loc-1,package-3,capacity-2,capacity-3]
root 0
505205 unload[truck-0,city-loc-1,package-2] -> m-unload 505206
505201 unload[truck-0,city-loc-1,package-3] -> m-unload 505207
505194 get-to[truck-0,city-loc-1] -> m-i-am-there 505198
505153 unload[truck-0,city-loc-1,package-0] -> m-unload 505174
505149 unload[truck-0,city-loc-3,package-1] -> m-unload 505176
505137 get-to[truck-0,city-loc-3] -> m-drive-to 505175
501840 get-to[truck-0,city-loc-2] -> m-drive-to-via 505137 505177
501732 get-to[truck-0,city-loc-0] -> m-drive-to-via 501840 505178
500191 get-to[truck-0,city-loc-2] -> m-drive-to-via 501732 505195
499859 get-to[truck-0,city-loc-3] -> m-drive-to-via 500191 505196
499650 get-to[truck-0,city-loc-1] -> m-drive-to-via 499859 505197
499634 get-to[truck-0,city-loc-0] -> m-drive-to 499635
499633 get-to[truck-0,city-loc-2] -> m-drive-to-via 499634 505138
499601 get-to[truck-0,city-loc-3] -> m-drive-to-via 499633 505139
499594 load[truck-0,city-loc-2,package-1] -> m-load 499595
499373 get-to[truck-0,city-loc-2] -> m-drive-to 499406
457560 get-to[truck-0,city-loc-3] -> m-drive-to-via 499373 499589
100428 get-to[truck-0,city-loc-1] -> m-drive-to-via 457560 505150
120 load[truck-0,city-loc-0,package-2] -> m-load 499638
112 load[truck-0,city-loc-0,package-0] -> m-load 139
111 load[truck-0,city-loc-0,package-3] -> m-load 505183
101 unload[truck-0,city-loc-2,package-4] -> m-unload 499588
92 get-to[truck-0,city-loc-3] -> m-drive-to 93
67 get-to[truck-0,city-loc-2] -> m-drive-to-via 92 99
60 load[truck-0,city-loc-1,package-4] -> m-load 61
57 get-to[truck-0,city-loc-0] -> m-i-am-there 104
54 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 57 112
48 get-to[truck-0,city-loc-0] -> m-i-am-there 103
44 get-to[truck-0,city-loc-0] -> m-drive-to 102
28 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 48 111
17 get-to[truck-0,city-loc-1] -> m-drive-to 58
11 m-deliver_splitted_1[truck-0,package-4] -> _splitting_method_m-deliver_splitted_1 17 60
6 get-to[truck-0,city-loc-2] -> m-drive-to 499591
4 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 44 120
2 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 6 499594
0 __top[] -> <<<<<__top_method;deliver[package-4,city-loc-2];m-deliver;4;0,1,2,3,-1,-2,-3>;deliver[package-3,city-loc-1];m-deliver;3;0,1,2,-1,-2,-3,4,5,6>;deliver[package-2,city-loc-1];m-deliver;2;0,1,-1,-2,-3,3,4,5,6,7,8>;deliver[package-1,city-loc-3];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7,8,9,10>;deliver[package-0,city-loc-1];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12> 54 100428 505153 2 499601 505149 4 499650 505205 28 505194 505201 11 67 101
<==
