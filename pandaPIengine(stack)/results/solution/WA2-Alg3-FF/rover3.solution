Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/rover3.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 66 actions.
- Domain contains 89 tasks.
- Domain contains 71 methods.
- The initial state contains 15 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 89
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: cost optimal
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time 0.004 seconds
- Visited list time 0.000325 seconds
- Visited list inserts 66
- Visited list pruned 3
- Visited list contains 63
- Visited list hash collisions 0
- Generated 356 search nodes
  Calculated heuristic for 206 nodes
  One modifications 56
  Effectless actions 94
- including 56 one modification actions
- including 0 one modification methods
- and       94 progressions of effectless actions
- Generated 51500 nodes per second
- Final fringe contains 50 nodes
- Status: Solved
- Found solution of length 41
- Total costs of actions: 15
==>
43 __method_precondition_m-navigate_abs-3[rover1,waypoint1,waypoint0]
60 __method_precondition_m-navigate_abs-3[rover1,waypoint0,waypoint1]
61 navigate[rover1,waypoint3,waypoint0]
86 __method_precondition_m-empty-store-1[rover1store]
91 sample_rock[rover1,rover1store,waypoint0]
98 navigate[rover1,waypoint0,waypoint1]
99 __method_precondition_m-navigate_abs-1[rover1,waypoint1]
100 communicate_rock_data[rover1,general,waypoint0,waypoint1,waypoint0]
101 calibrate[rover1,camera1,objective0,waypoint1]
273 __method_precondition_m-navigate_abs-3[rover1,waypoint1,waypoint0]
274 navigate[rover1,waypoint1,waypoint0]
275 take_image[rover1,waypoint0,objective0,camera1,colour]
321 __method_precondition_m-navigate_abs-4_base[rover1,waypoint2,waypoint3]
324 navigate[rover1,waypoint0,waypoint3]
325 visit[waypoint3]
326 navigate[rover1,waypoint3,waypoint2]
327 __method_precondition_m-navigate_abs-2[rover1,waypoint2]
332 __method_precondition_m-empty-store-2[rover1store]
333 unvisit[waypoint3]
334 communicate_image_data[rover1,general,objective0,colour,waypoint2,waypoint0]
335 drop[rover1,rover1store]
336 sample_soil[rover1,rover1store,waypoint2]
351 __method_precondition_m-navigate_abs-2[rover1,waypoint2]
352 communicate_soil_data[rover1,general,waypoint2,waypoint2,waypoint0]
root 0
350 navigate_abs[rover1,waypoint2] -> m-navigate_abs-2 351
338 m-send_soil_data_splitted_13[rover1,general,waypoint2] -> <_splitting_method_m-send_soil_data_splitted_13;m-send_soil_data_splitted_8[rover1,general,waypoint2,waypoint2];_splitting_method_m-send_soil_data_splitted_8;1;0,-1> 350 352
331 empty-store[rover1store,rover1] -> m-empty-store-2 332 335
323 m-navigate_abs-4_splitted_5[rover1,waypoint3,waypoint2] -> _splitting_method_m-navigate_abs-4_splitted_5 324
320 navigate_abs[rover1,waypoint2] -> m-navigate_abs-4 321 323 325 326 333
282 m-send_image_data_splitted_11[rover1,general,objective0,colour] -> <_splitting_method_m-send_image_data_splitted_11;m-send_image_data_splitted_6[rover1,general,objective0,colour,waypoint2];_splitting_method_m-send_image_data_splitted_6;1;0,-1> 320 334
272 navigate_abs[rover1,waypoint0] -> m-navigate_abs-3 273 274
146 m-get_image_data_splitted_2[rover1,objective0,camera1,colour] -> _splitting_method_m-get_image_data_splitted_2 272 275
97 navigate_abs[rover1,waypoint1] -> m-navigate_abs-2 99
94 m-send_rock_data_splitted_12[rover1,general,waypoint0] -> <_splitting_method_m-send_rock_data_splitted_12;m-send_rock_data_splitted_7[rover1,general,waypoint0,waypoint1];_splitting_method_m-send_rock_data_splitted_7;1;0,-1> 97 100
85 empty-store[rover1store,rover1] -> m-empty-store-1 86
59 navigate_abs[rover1,waypoint1] -> m-navigate_abs-3 60 98
42 navigate_abs[rover1,waypoint0] -> m-navigate_abs-3 43 61
15 get_rock_data[waypoint0] -> <<m-get_rock_data;m-get_rock_data_splitted_3[rover1,waypoint0];_splitting_method_m-get_rock_data_splitted_3;1;0,-1,-2,2>;send_rock_data[rover1,waypoint0];m-send_rock_data;3;0,1,2,-1> 42 85 91 94
9 m-calibrate_abs_splitted_9[rover1,camera1] -> <_splitting_method_m-calibrate_abs_splitted_9;m-calibrate_abs_splitted_1[rover1,camera1,waypoint1];_splitting_method_m-calibrate_abs_splitted_1;1;0,-1> 59 101
3 navigate_abs[rover1,waypoint2] -> m-navigate_abs-2 327
0 __top[] -> <<<<<<<__top_method;get_image_data[objective0,colour];m-get_image_data;2;0,1,-1,-2>;m-get_image_data_splitted_10[rover1,colour,objective0];_splitting_method_m-get_image_data_splitted_10;2;0,1,-1,-2,3>;calibrate_abs[rover1,camera1];m-calibrate_abs;2;0,1,-1,3,4>;send_image_data[rover1,objective0,colour];m-send_image_data;4;0,1,2,3,-1>;get_soil_data[waypoint2];m-get_soil_data;0;-1,-2,-3,1,2,3,4>;m-get_soil_data_splitted_4[rover1,waypoint2];_splitting_method_m-get_soil_data_splitted_4;1;0,-1,-2,2,3,4,5,6>;send_soil_data[rover1,waypoint2];m-send_soil_data;3;0,1,2,-1,4,5,6,7> 3 331 336 338 15 9 146 282
<==
