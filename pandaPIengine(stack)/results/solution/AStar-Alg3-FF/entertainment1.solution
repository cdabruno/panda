Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/entertainment1.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 24 actions.
- Domain contains 44 tasks.
- Domain contains 45 methods.
- The initial state contains 10 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 44
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.002 seconds
- Visited list time 0.000172 seconds
- Visited list inserts 36
- Visited list pruned 4
- Visited list contains 32
- Visited list hash collisions 0
- Generated 89 search nodes
  Calculated heuristic for 68 nodes
  One modifications 16
  Effectless actions 5
- including 16 one modification actions
- including 0 one modification methods
- and       5 progressions of effectless actions
- Generated 34000 nodes per second
- Final fringe contains 3 nodes
- Status: Solved
- Found solution of length 15
- Total costs of actions: 5
==>
8 plug|instance_1[dvd-1,dvd-1-scart-1,scart-to-cinch-1,scart-to-cinch-1-scart-1]
63 plug|instance_2[scart-to-cinch-1,scart-to-cinch-1-cinch-3,cinch-cable-2,cinch-cable-2-cinch-1]
66 plug|instance_3[cinch-cable-2,cinch-cable-2-cinch-2,simple-tv-1,simple-tv-1-cinch-1]
73 plug|instance_4[scart-to-cinch-1,scart-to-cinch-1-cinch-2,cinch-cable-1,cinch-cable-1-cinch-1]
87 plug|instance_7[cinch-cable-1,cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2]
root 0
86 direct_a_connect[cinch-cable-1,simple-tv-1] -> <m-dconnect-a;plug[cinch-cable-1,cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2];_method_for_multiple_expansions_of_plug|instance_7;0;-1> 87
72 direct_a_connect[scart-to-cinch-1,cinch-cable-1] -> <m-dconnect-a;plug[scart-to-cinch-1,scart-to-cinch-1-cinch-2,cinch-cable-1,cinch-cable-1-cinch-1];_method_for_multiple_expansions_of_plug|instance_4;0;-1> 73
68 a_connect[scart-to-cinch-1,simple-tv-1] -> <m-connect-rec-a;a_connect[scart-to-cinch-1,cinch-cable-1];m-connect-direct-a;0;-1,1> 72 86
65 direct_v_connect[cinch-cable-2,simple-tv-1] -> <m-dconnect-v;plug[cinch-cable-2,cinch-cable-2-cinch-2,simple-tv-1,simple-tv-1-cinch-1];_method_for_multiple_expansions_of_plug|instance_3;0;-1> 66
62 direct_v_connect[scart-to-cinch-1,cinch-cable-2] -> <m-dconnect-v;plug[scart-to-cinch-1,scart-to-cinch-1-cinch-3,cinch-cable-2,cinch-cable-2-cinch-1];_method_for_multiple_expansions_of_plug|instance_2;0;-1> 63
49 v_connect[scart-to-cinch-1,simple-tv-1] -> <m-connect-rec-v;v_connect[scart-to-cinch-1,cinch-cable-2];m-connect-direct-v;0;-1,1> 62 65
13 av_connect[scart-to-cinch-1,simple-tv-1] -> m-connect-split-1 49 68
7 direct_av_connect[dvd-1,scart-to-cinch-1] -> <m-dconnect-av;plug[dvd-1,dvd-1-scart-1,scart-to-cinch-1,scart-to-cinch-1-scart-1];_method_for_multiple_expansions_of_plug|instance_1;0;-1> 8
1 av_connect[dvd-1,simple-tv-1] -> m-connect-rec-av-1 7 13
0 __top[] -> __top_method 1
<==
