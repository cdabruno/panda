Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite9.sas.
- State has 11 bits divided into 11 mutex groups.
- Domain contains 24 actions.
- Domain contains 34 tasks.
- Domain contains 46 methods.
- The initial state contains 2 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 34
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.038 seconds
- Visited list time 0.006419 seconds
- Visited list inserts 1935
- Visited list pruned 20
- Visited list contains 1915
- Visited list hash collisions 0
- Generated 8164 search nodes
  Calculated heuristic for 5456 nodes
  One modifications 2628
  Effectless actions 80
- including 2628 one modification actions
- including 0 one modification methods
- and       80 progressions of effectless actions
- Generated 143578 nodes per second
- Final fringe contains 3220 nodes
- Status: Solved
- Found solution of length 27
- Total costs of actions: 17
==>
3378 switch_on[instrument01,satellite0]
8126 turn_to[satellite0,GroundStation0,Phenomenon6]
8129 calibrate[satellite0,instrument01,GroundStation0]
8131 turn_to[satellite0,Phenomenon4,GroundStation0]
8132 take_image[satellite0,Phenomenon4,instrument01,thermograph]
8133 switch_off[instrument01,satellite0]
8134 switch_on[instrument02,satellite0]
8146 turn_to[satellite0,GroundStation0,Phenomenon4]
8149 calibrate[satellite0,instrument02,GroundStation0]
8151 turn_to[satellite0,Star5,GroundStation0]
8152 take_image[satellite0,Star5,instrument02,x_ray]
8153 switch_off[instrument02,satellite0]
8154 switch_on[instrument03,satellite0]
8156 turn_to[satellite0,GroundStation0,Star5]
8157 calibrate[satellite0,instrument03,GroundStation0]
8158 turn_to[satellite0,Phenomenon6,GroundStation0]
8159 take_image[satellite0,Phenomenon6,instrument03,hd_video]
root 0
8155 auto_calibrate[satellite0,instrument03] -> method6 8156 8157
8138 auto_calibrate[satellite0,instrument02] -> method6 8146 8149
8050 auto_calibrate[satellite0,instrument01] -> method6 8126 8129
3377 activate_instrument[satellite0,instrument03] -> method4 8153 8154 8155
413 do_observation[Phenomenon6,hd_video] -> method0 3377 8158 8159
331 activate_instrument[satellite0,instrument02] -> method4 8133 8134 8138
33 do_observation[Star5,x_ray] -> method0 331 8151 8152
27 activate_instrument[satellite0,instrument01] -> method5 3378 8050
5 do_observation[Phenomenon4,thermograph] -> method0 27 8131 8132
0 __top[] -> __top_method 5 33 413
<==
