(define (domain test-domain)
	(:requirements :negative-preconditions :typing :hierarchy)

	(:types A)
	
	(:predicates
		(pre ?b ?a - A)
		(foo ?a - A)
	)

	(:task task1 :parameters ())

	(:method iterate
		:parameters (?a - A)
		:task (task1)
		:ordered-subtasks (and
			(task1)
			(do ?a)
		)
	)

	(:method done
		:parameters (?a - A)
		:task (task1)
		:ordered-subtasks (and
		)
	)
	
	(:action do
		:parameters (?a - A)
		:precondition (exists (?b - A) (and (foo ?b) (pre ?b ?a)))
		:effect (and
			(foo ?a)
		)
	)
)
