Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite18.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 78 actions.
- Domain contains 98 tasks.
- Domain contains 155 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 98
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.012 seconds
- Visited list time 0.000963 seconds
- Visited list inserts 203
- Visited list pruned 6
- Visited list contains 197
- Visited list hash collisions 0
- Generated 1260 search nodes
  Calculated heuristic for 1023 nodes
  One modifications 219
  Effectless actions 18
- including 219 one modification actions
- including 0 one modification methods
- and       18 progressions of effectless actions
- Generated 85250 nodes per second
- Final fringe contains 652 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 11
==>
1231 switch_on[instrument4,satellite2]
1237 turn_to[satellite2,star0,planet2]
1240 calibrate[satellite2,instrument4,star0]
1241 turn_to[satellite2,phenomenon3,star0]
1245 take_image[satellite2,phenomenon3,instrument4,thermograph1]
1246 turn_to[satellite2,star5,phenomenon3]
1250 take_image[satellite2,star5,instrument4,thermograph1]
1251 turn_to[satellite2,planet4,star5]
1256 take_image[satellite2,planet4,instrument4,thermograph1]
1257 turn_to[satellite2,planet2,planet4]
1258 take_image[satellite2,planet2,instrument4,image0]
root 0
1255 method1_splitted_1[satellite2,planet4,thermograph1] -> _splitting_method_method1_splitted_1 1256
1249 method1_splitted_1[satellite2,star5,thermograph1] -> _splitting_method_method1_splitted_1 1250
1244 method1_splitted_1[satellite2,phenomenon3,thermograph1] -> _splitting_method_method1_splitted_1 1245
1236 auto_calibrate[satellite2,instrument4] -> method6 1237 1240
1230 activate_instrument[satellite2,instrument4] -> method5 1231 1236
1188 do_observation[planet2,image0] -> method0 1230 1257 1258
1141 do_observation[star5,thermograph1] -> method1 1246 1249
1113 do_observation[planet4,thermograph1] -> method1 1251 1255
4 do_observation[phenomenon3,thermograph1] -> method1 1241 1244
0 __top[] -> __top_method 1188 4 1113 1141
<==
