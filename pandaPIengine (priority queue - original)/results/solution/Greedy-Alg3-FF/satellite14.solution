Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite14.sas.
- State has 25 bits divided into 25 mutex groups.
- Domain contains 53 actions.
- Domain contains 66 tasks.
- Domain contains 90 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 66
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.002 seconds
- Visited list time 0.000107 seconds
- Visited list inserts 31
- Visited list pruned 0
- Visited list contains 31
- Visited list hash collisions 0
- Generated 319 search nodes
  Calculated heuristic for 236 nodes
  One modifications 80
  Effectless actions 3
- including 80 one modification actions
- including 0 one modification methods
- and       3 progressions of effectless actions
- Generated 118000 nodes per second
- Final fringe contains 185 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 13
==>
286 switch_on[instrument01,satellite0]
299 turn_to[satellite0,GroundStation0,Phenomenon6]
302 calibrate[satellite0,instrument01,GroundStation0]
304 turn_to[satellite0,Phenomenon4,GroundStation0]
305 take_image[satellite0,Phenomenon4,instrument01,thermograph]
306 switch_off[instrument01,satellite0]
307 switch_on[instrument02,satellite0]
311 turn_to[satellite0,GroundStation0,Phenomenon4]
312 calibrate[satellite0,instrument02,GroundStation0]
313 turn_to[satellite0,Star5,GroundStation0]
314 take_image[satellite0,Star5,instrument02,x_ray]
315 turn_to[satellite0,Phenomenon6,Star5]
316 take_image[satellite0,Phenomenon6,instrument02,x_ray]
root 0
310 auto_calibrate[satellite0,instrument02] -> method6 311 312
288 auto_calibrate[satellite0,instrument01] -> method6 299 302
285 activate_instrument[satellite0,instrument02] -> method4 306 307 310
113 do_observation[Star5,x_ray] -> method0 285 313 314
29 do_observation[Phenomenon6,x_ray] -> <method1;method1_splitted_1[satellite0,Phenomenon6,x_ray];_splitting_method_method1_splitted_1;1;0,-1> 315 316
26 activate_instrument[satellite0,instrument01] -> method5 286 288
18 do_observation[Phenomenon4,thermograph] -> method0 26 304 305
0 __top[] -> __top_method 18 113 29
<==
