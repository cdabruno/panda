Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/transport4.sas.
- State has 20 bits divided into 20 mutex groups.
- Domain contains 47 actions.
- Domain contains 68 tasks.
- Domain contains 63 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 65
- The problem is cyclic
- Number of cyclic SCCs: 1
- Number of cyclic SCCs of size 1: 0
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
   1s visitime    0.26s generated nodes    205105 nodes/sec  202273 cur h   19 mod.depth   42 inserts     51474 duplicates     12941 size     38533 hash fail      0
Search Results
- Search time 1.50 seconds
- Visited list time 0.39 seconds
- Visited list inserts 75016
- Visited list pruned 18945
- Visited list contains 56071
- Visited list hash collisions 0
- Generated 297963 search nodes
  Calculated heuristic for 238177 nodes
  One modifications 56051
  Effectless actions 3735
- including 56051 one modification actions
- including 0 one modification methods
- and       3735 progressions of effectless actions
- Generated 158573 nodes per second
- Final fringe contains 47928 nodes
- Status: Solved
- Found solution of length 49
- Total costs of actions: 22
==>
37 noop[truck-0,city-loc-0]
40 pick-up[truck-0,city-loc-0,package-0,capacity-2,capacity-3]
44 drive[truck-0,city-loc-0,city-loc-3]
57 drive[truck-0,city-loc-3,city-loc-2]
64 pick-up[truck-0,city-loc-2,package-3,capacity-1,capacity-2]
147 drive[truck-0,city-loc-2,city-loc-1]
297865 pick-up[truck-0,city-loc-1,package-1,capacity-0,capacity-1]
297880 drive[truck-0,city-loc-1,city-loc-2]
297881 drive[truck-0,city-loc-2,city-loc-3]
297885 drive[truck-0,city-loc-3,city-loc-2]
297886 drive[truck-0,city-loc-2,city-loc-3]
297893 drive[truck-0,city-loc-3,city-loc-0]
297908 drop[truck-0,city-loc-0,package-1,capacity-0,capacity-1]
297909 drive[truck-0,city-loc-0,city-loc-3]
297912 pick-up[truck-0,city-loc-3,package-2,capacity-0,capacity-1]
297930 drive[truck-0,city-loc-3,city-loc-0]
297951 drop[truck-0,city-loc-0,package-3,capacity-0,capacity-1]
297952 drive[truck-0,city-loc-0,city-loc-3]
297953 drop[truck-0,city-loc-3,package-0,capacity-1,capacity-2]
297954 drive[truck-0,city-loc-3,city-loc-2]
297955 drive[truck-0,city-loc-2,city-loc-1]
297961 drop[truck-0,city-loc-1,package-2,capacity-2,capacity-3]
root 0
297960 unload[truck-0,city-loc-1,package-2] -> m-unload 297961
297939 unload[truck-0,city-loc-0,package-3] -> m-unload 297951
297929 get-to[truck-0,city-loc-3] -> m-drive-to 297952
297924 get-to[truck-0,city-loc-2] -> m-drive-to-via 297929 297954
297918 get-to[truck-0,city-loc-1] -> m-drive-to-via 297924 297955
297894 unload[truck-0,city-loc-0,package-1] -> m-unload 297908
297892 load[truck-0,city-loc-3,package-2] -> m-load 297912
297879 get-to[truck-0,city-loc-2] -> m-drive-to 297880
297877 get-to[truck-0,city-loc-3] -> m-drive-to-via 297879 297881
297870 get-to[truck-0,city-loc-0] -> m-drive-to-via 297877 297893
297864 load[truck-0,city-loc-1,package-1] -> m-load 297865
146 get-to[truck-0,city-loc-3] -> m-drive-to 297909
69 get-to[truck-0,city-loc-0] -> m-drive-to-via 146 297930
60 load[truck-0,city-loc-2,package-3] -> m-load 64
52 unload[truck-0,city-loc-3,package-0] -> m-unload 297953
43 get-to[truck-0,city-loc-3] -> m-drive-to 44
39 load[truck-0,city-loc-0,package-0] -> m-load 40
36 get-to[truck-0,city-loc-0] -> m-i-am-there 37
30 get-to[truck-0,city-loc-2] -> m-drive-to 57
29 m-deliver_splitted_1[truck-0,package-3] -> _splitting_method_m-deliver_splitted_1 30 60
25 m-deliver_splitted_1[truck-0,package-0] -> _splitting_method_m-deliver_splitted_1 36 39
21 get-to[truck-0,city-loc-1] -> m-drive-to 147
14 get-to[truck-0,city-loc-2] -> m-drive-to 297885
11 get-to[truck-0,city-loc-3] -> m-drive-to-via 14 297886
3 m-deliver_splitted_1[truck-0,package-2] -> _splitting_method_m-deliver_splitted_1 11 297892
2 m-deliver_splitted_1[truck-0,package-1] -> _splitting_method_m-deliver_splitted_1 21 297864
0 __top[] -> <<<<__top_method;deliver[package-3,city-loc-0];m-deliver;3;0,1,2,-1,-2,-3>;deliver[package-2,city-loc-1];m-deliver;2;0,1,-1,-2,-3,3,4,5>;deliver[package-1,city-loc-0];m-deliver;1;0,-1,-2,-3,2,3,4,5,6,7>;deliver[package-0,city-loc-3];m-deliver;0;-1,-2,-3,1,2,3,4,5,6,7,8,9> 25 43 52 2 297870 297894 3 297918 297960 29 69 297939
<==
