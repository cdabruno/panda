Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/smartphone7.sas.
- State has 24 bits divided into 24 mutex groups.
- Domain contains 18 actions.
- Domain contains 23 tasks.
- Domain contains 9 methods.
- The initial state contains 9 set bits.
- The initial task is "__top[]".
- State-based goal contains 3 bits.
- Instance is totally-ordered: no
- Instance has unique paths: no
- Instance is parallel sequences: no
Calculate SCCs...
- Number of SCCs: 23
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(lmc;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: partial order
- hashs to use: state task
- memory information: topological ordering order-pairs layer
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- A* Search
- Distance G is "modification depth"
Search Results
- Search time 0.005 seconds
- Visited list time 0.001173 seconds
- Visited list inserts 27
- Visited list pruned 27
- Visited list contains 0
- Visited list hash collisions 0
- Generated 131 search nodes
  Calculated heuristic for 52 nodes
  One modifications 67
  Effectless actions 12
- including 67 one modification actions
- including 0 one modification methods
- and       12 progressions of effectless actions
- Generated 10400 nodes per second
- Final fringe contains 6 nodes
- Status: Solved
- Found solution of length 24
- Total costs of actions: 18
==>
22 press_Home_EMail[]
23 select_EMail_EMailAccount_NoOp[myEMailAccount]
29 press_EMail_NewEMail[myEMailAccount]
34 enter_EMailAddress[dave,davesEMailAddress]
41 press_EMail_NewEMail_Send[dave,email1]
42 press_Home_Default[]
43 press_Home_Telephone[]
44 enter_Number_ForCall_Mobile[greg,gregsMobileNumber]
45 press_Telephone_Call_Mobile[greg,call1]
117 press_Home_Default[]
118 press_Home_Calendar[]
119 press_Calendar_Menu[]
120 press_Calendar_Menu_NewAppointment[appointmentForMeeting]
121 set_Appointment_Location[appointmentForMeeting,locationForMeeting]
122 set_Appointment_Reminder[appointmentForMeeting]
124 set_Appointment_Time[appointmentForMeeting,dateForMeeting]
125 set_Appointment_Name[appointmentForMeeting]
126 press_Calendar_NewAppointment_OK[appointmentForMeeting,dateForMeeting]
root 0
116 press_Home[] -> do_press_Home_Default 117
90 enterMode_Calendar[] -> <do_enterMode_Calendar_ViaHome;enterMode_Home[];do_enterMode_Home;0;-1,1> 116 118
15 press_Home[] -> do_press_Home_Default 42
4 enterMode_Telephone[] -> <do_enterMode_Telephone_ViaHome;enterMode_Home[];do_enterMode_Home;0;-1,1> 15 43
1 enterMode_EMail[] -> do_enterMode_EMail_FromHome 22
0 __top[] -> <<<<<<<<__top_method;create_Appointment[appointmentForMeeting,locationForMeeting,dateForMeeting];do_create_Appointment;2;0,1,-1,-2>;create_NewAppointment[appointmentForMeeting,dateForMeeting,locationForMeeting];do_create_NewAppointment;3;0,1,2,-1,-2,-3,-4>;configure_Appointment[appointmentForMeeting,dateForMeeting,locationForMeeting];do_configure_Appointment;5;0,1,2,3,4,-1,-2,-3,-4,6>;send_EMail[dave,email1];do_send_EMail_ViaEMail;1;0,-1,-2,-3,-4,-5,2,3,4,5,6,7,8,9>;select_EMail_EMailAccount[myEMailAccount];do_select_EMail_EMailAccount_NoOp;2;0,1,-1,3,4,5,6,7,8,9,10,11,12,13>;call[greg,call1];do_Call_EnterNumber;0;-1,-2,-3,1,2,3,4,5,6,7,8,9,10,11,12,13>;press_Telephone_Call[greg,call1];do_Press_Call_Mobile;2;0,1,-1,3,4,5,6,7,8,9,10,11,12,13,14,15>;enter_Number_ForCall[];do_enter_Number_ForCall_Mobile;1;0,-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15> 4 44 45 1 23 29 34 41 90 119 120 125 122 121 124 126
<==
