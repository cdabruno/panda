Random seed: 42
Time limit: 15 seconds
Reading input from results/grounded/satellite18.sas.
- State has 31 bits divided into 31 mutex groups.
- Domain contains 78 actions.
- Domain contains 98 tasks.
- Domain contains 155 methods.
- The initial state contains 8 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 98
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 1
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(add;distance;correct count)
Search config:
 - type: path cost
 - weight: 1
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy Search
Search Results
- Search time 0.321 seconds
- Visited list time 0.034063 seconds
- Visited list inserts 9641
- Visited list pruned 2495
- Visited list contains 7146
- Visited list hash collisions 0
- Generated 66617 search nodes
  Calculated heuristic for 51568 nodes
  One modifications 11937
  Effectless actions 3112
- including 11937 one modification actions
- including 0 one modification methods
- and       3112 progressions of effectless actions
- Generated 160647 nodes per second
- Final fringe contains 36008 nodes
- Status: Solved
- Found solution of length 21
- Total costs of actions: 11
==>
66552 switch_on[instrument4,satellite2]
66594 turn_to[satellite2,star0,planet2]
66597 calibrate[satellite2,instrument4,star0]
66598 turn_to[satellite2,planet4,star0]
66602 take_image[satellite2,planet4,instrument4,thermograph1]
66603 turn_to[satellite2,planet2,planet4]
66609 take_image[satellite2,planet2,instrument4,image0]
66610 turn_to[satellite2,phenomenon3,planet2]
66611 take_image[satellite2,phenomenon3,instrument4,thermograph1]
66612 turn_to[satellite2,star5,phenomenon3]
66615 take_image[satellite2,star5,instrument4,thermograph1]
root 0
66614 method1_splitted_1[satellite2,star5,thermograph1] -> _splitting_method_method1_splitted_1 66615
66608 method1_splitted_1[satellite2,planet2,image0] -> _splitting_method_method1_splitted_1 66609
66601 method1_splitted_1[satellite2,planet4,thermograph1] -> _splitting_method_method1_splitted_1 66602
66593 auto_calibrate[satellite2,instrument4] -> method6 66594 66597
66551 do_observation[planet4,thermograph1] -> method1 66598 66601
54616 do_observation[planet2,image0] -> method1 66603 66608
54606 activate_instrument[satellite2,instrument4] -> method5 66552 66593
6899 do_observation[star5,thermograph1] -> method1 66612 66614
20 do_observation[phenomenon3,thermograph1] -> method0 54606 66610 66611
0 __top[] -> __top_method 54616 20 66551 6899
<==
