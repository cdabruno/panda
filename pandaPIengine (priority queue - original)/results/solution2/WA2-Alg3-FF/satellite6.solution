Random seed: 42
Time limit: 2 seconds
Reading input from results/grounded/satellite6.sas.
- State has 15 bits divided into 15 mutex groups.
- Domain contains 24 actions.
- Domain contains 32 tasks.
- Domain contains 38 methods.
- The initial state contains 4 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: no
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 32
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: cost optimal
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: parallel sequences order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time0.002 seconds
- Visited list time 0.000616 seconds
- Visited list inserts 168
- Visited list pruned 9
- Visited list contains 159
- Visited list hash collisions 9
- Visited list used hash buckets 159
- Generated 846 search nodes
  Calculated heuristic for 520 nodes
  One modifications 310
  Effectless actions 16
- including 310 one modification actions
- including 0 one modification methods
- and       16 progressions of effectless actions
- Generated 260000 nodes per second
- Final fringe contains 24 nodes
- Status: Solved
- Found solution of length 18
- Total costs of actions: 11
==>
789 switch_on[instrument01,satellite0]
828 turn_to[satellite0,GroundStation0,Phenomenon6]
831 calibrate[satellite0,instrument01,GroundStation0]
833 turn_to[satellite0,Phenomenon4,GroundStation0]
834 take_image[satellite0,Phenomenon4,instrument01,thermograph]
835 switch_off[instrument01,satellite0]
836 switch_on[instrument02,satellite0]
838 turn_to[satellite0,GroundStation0,Phenomenon4]
839 calibrate[satellite0,instrument02,GroundStation0]
840 turn_to[satellite0,Star5,GroundStation0]
841 take_image[satellite0,Star5,instrument02,x_ray]
root 0
837 auto_calibrate[satellite0,instrument02] -> method6 838 839
815 auto_calibrate[satellite0,instrument01] -> method6 828 831
788 activate_instrument[satellite0,instrument02] -> method4 835 836 837
683 do_observation[Star5,x_ray] -> method0 788 840 841
673 activate_instrument[satellite0,instrument01] -> method5 789 815
13 do_observation[Phenomenon4,thermograph] -> method0 673 833 834
0 __top[] -> __top_method 13 683
<==
