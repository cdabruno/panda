Random seed: 42
Time limit: 2 seconds
Reading input from results/grounded/entertainment2.sas.
- State has 10 bits divided into 10 mutex groups.
- Domain contains 11 actions.
- Domain contains 21 tasks.
- Domain contains 20 methods.
- The initial state contains 6 set bits.
- The initial task is "__top[]".
- State-based goal contains 0 bits.
- Instance is totally-ordered: yes
- Instance has unique paths: yes
- Instance is parallel sequences: yes
Calculate SCCs...
- Number of SCCs: 21
- The problem is acyclic
Selected Planning Algorithm: progression searchParsing heuristics ...
Number of specified heuristics: 0
No heuristics given, setting default ... 
- the option "store cuts" of the RC heuristic can only be used with the inner heuristic LM-Cut. It will be disabled.
- Calculating minimal implied costs and distances (0 ms)
Heuristic #0 = hhRC2(ff;distance;correct count)
Search config:
 - type: cost optimal
 - weight: 2
 - suboptimal: false
Visited List configured
- mode: total order
- hashs to use: state task task-sequence
- memory information: topological ordering
- Visited list allows deletion of search nodes: true
Search Configuration
- Using JAIR 2020 progression algorithm
- Search is stopped after first solution is found.
- Greedy A* Search with weight 2
- Distance G is "modification depth"
Search Results
- Search time0 seconds
- Visited list time 3.4e-05 seconds
- Visited list inserts 9
- Visited list pruned 0
- Visited list contains 9
- Visited list hash collisions 0
- Visited list used hash buckets 9
- Generated 23 search nodes
  Calculated heuristic for 17 nodes
  One modifications 5
  Effectless actions 1
- including 5 one modification actions
- including 0 one modification methods
- and       1 progressions of effectless actions
- Generated -2147483648 nodes per second
- Final fringe contains 4 nodes
- Status: Solved
- Found solution of length 12
- Total costs of actions: 3
==>
6 plug|instance_1[dvd-1,dvd-1-scart-1,scart-to-cinch-cable-1,scart-to-cinch-cable-1-scart-1]
12 plug|instance_3[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-3,simple-tv-1,simple-tv-1-cinch-1]
14 __method_precondition_m-dconnect-a-empty[dvd-1,scart-to-cinch-cable-1]
21 plug|instance_7[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2]
root 0
20 plug[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2] -> _method_for_multiple_expansions_of_plug|instance_7 21
17 direct_a_connect[scart-to-cinch-cable-1,simple-tv-1] -> m-dconnect-a 20
13 direct_a_connect[dvd-1,scart-to-cinch-cable-1] -> m-dconnect-a-empty 14
11 plug[scart-to-cinch-cable-1,scart-to-cinch-cable-1-cinch-3,simple-tv-1,simple-tv-1-cinch-1] -> _method_for_multiple_expansions_of_plug|instance_3 12
8 direct_v_connect[scart-to-cinch-cable-1,simple-tv-1] -> m-dconnect-v 11
5 direct_v_connect[dvd-1,scart-to-cinch-cable-1] -> <m-dconnect-v;plug[dvd-1,dvd-1-scart-1,scart-to-cinch-cable-1,scart-to-cinch-cable-1-scart-1];_method_for_multiple_expansions_of_plug|instance_1;0;-1> 6
3 av_connect[dvd-1,simple-tv-1] -> <<m-connect-split-1;a_connect[dvd-1,simple-tv-1];<m-connect-rec-a;a_connect[dvd-1,scart-to-cinch-cable-1];m-connect-direct-a;0;-1,1>;1;0,-1,-2>;v_connect[dvd-1,simple-tv-1];<m-connect-rec-v;v_connect[dvd-1,scart-to-cinch-cable-1];m-connect-direct-v;0;-1,1>;0;-1,-2,1,2> 5 8 13 17
0 __top[] -> __top_method 3
<==
